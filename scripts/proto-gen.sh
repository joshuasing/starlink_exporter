#!/bin/sh
#
# Copyright (c) 2024 Joshua Sing <joshua@joshuasing.dev>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

set -e

#
# Usage: proto-gen.sh
# Requires access to a Starlink dish at 192.168.100.1:9200.
#

STARLINK_DISHY_ADDR=${STARLINK_DISHY_ADDR-"192.168.100.1:9200"}
SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
MODULE_DIR=$(dirname "$SCRIPT_DIR")

info() {
	echo "proto-gen: $*"
}

fatal() {
	echo "fatal: $*"
	exit 1
}

setup_env() {
	if ! which "grpcurl" > /dev/null; then
		fatal "cannot find grpcurl"
	fi

	setup_tmp
}

setup_tmp() {
	TMP_DIR="$(mktemp -d -t sle-proto.XXXXXXXXXX)"
	TMP_PROTO_DIR="$TMP_DIR/proto"
	# shellcheck disable=SC2317
	cleanup() {
		code=$?
		set +e
		trap - EXIT
		rm -rf "$TMP_DIR"
		exit $code
	}
	trap cleanup INT EXIT
}

version() {
	DIR=$(dirname "$0")
	go run "$DIR/version.go" -dish "$STARLINK_DISHY_ADDR" \
		|| fatal "failed to get Starlink Dishy version information"
}

gen_proto() {
	info "Generating protobuf files from Starlink Dishy"

	# Connect to Starlink dish and use server reflection to retrieve SpaceX.API.Device.Device proto
	grpcurl -plaintext -proto-out-dir="$TMP_PROTO_DIR" "$STARLINK_DISHY_ADDR" describe SpaceX.API.Device.Device \
		|| fatal "failed to generate protobuf files from Starlink dish server reflection"
}

gen_go() {
	info "Generating Go sources for Starlink Dishy gRPC"

	cd "$TMP_PROTO_DIR" || fatal "failed to change to temp dir"
	PROTO_FILES="$(find ./spacex_api/ -name '*.proto')"

	# Create go_opt and go-grpc_opt flags for each package
	PACKAGE="github.com/joshuasing/starlink_exporter/internal"
	for file in $(printf '%s\n' "$PROTO_FILES" | sed 's|^\./||'); do
		dir="$(dirname "$file")"
		import_path="${PACKAGE}/${dir}"
		pkg_name="$(basename "$dir")"
		pkg_name="$(printf '%s' "$pkg_name" | sed 's/[^A-Za-z0-9_]/_/g')"
		mapping="${import_path};${pkg_name}"

		PROTOC_OPTS="${PROTOC_OPTS} --go_opt=M${file}=${mapping} --go-grpc_opt=M${file}=${mapping}"
	done

	PACKAGE_DIR="$MODULE_DIR/internal"
	# shellcheck disable=SC2086
	protoc --go_out="$PACKAGE_DIR" --go-grpc_out="$PACKAGE_DIR" $PROTOC_OPTS \
		--go_opt=paths=source_relative --go-grpc_opt=paths=source_relative \
		$PROTO_FILES || fatal "failed to compile proto"

	cd - || fatal "failed to change to previous dir"
	info "Successfully generated Go sources"
}

gen_docs() {
	GENERATED_DATE=$(date --utc)
	VERSION=$(version)
	tee "$PACKAGE_DIR/spacex_api/README.md" <<-EOF
		The files in this directory are generated by [proto-gen.sh](../../scripts/proto-gen.sh). DO NOT EDIT.

		Generated $GENERATED_DATE with:
		\`\`\`
		$VERSION
		\`\`\`
	EOF
	tee "$PACKAGE_DIR/spacex_api/LICENSE" <<-EOF
		The files in this directory are generated and may not be licensable under the MIT License.
	EOF

	SOFTWARE_VERSION=$(echo "$VERSION" | grep -oP "(?<=Software version ).*")
	API_VERSION=$(echo "$VERSION" | grep -oP "(?<=API version ).*")

	BADGE_VALUE="${SOFTWARE_VERSION}_(API_v${API_VERSION})"
	sed -i -E "s|(https://img.shields.io/badge/Starlink_Dishy_Version-)[^/]+(-blue)|\1${BADGE_VALUE}\2|" "$MODULE_DIR/README.md"
}

gen() {
	setup_env
	gen_proto
	gen_go
	gen_docs

	echo
	version
}

gen
