# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
version: 2

project_name: "starlink_exporter"
report_sizes: true

before:
  hooks:
    - "go mod tidy"
    - "go mod download"
    - "go mod verify"

gomod:
  # Proxy the module from proxy.golang.org, making the builds verifiable.
  proxy: true

builds:
  - binary: "{{ .ProjectName }}"
    main: "./cmd/{{ .ProjectName }}/"
    env: [ "CGO_ENABLED=0", "GOGC=off" ]
    ldflags: >-
      -s -w
      -X github.com/prometheus/common/version.Version={{ .Version }}
      -X github.com/prometheus/common/version.Revision={{ .FullCommit }}
      -X github.com/prometheus/common/version.Branch={{ .Branch }}
      -X github.com/prometheus/common/version.BuildDate={{ .CommitDate }}
    flags: [ "-trimpath" ]
    goos:
      - "linux"
      - "windows"
      - "darwin"
      - "openbsd"
    goarch:
      - "amd64"
      - "arm"
      - "arm64"
    goarm: [ "7" ]
    ignore:
      - goos: "windows"
        goarch: "arm"

archives:
  - formats: ["tar.gz"]
    wrap_in_directory: true
    name_template: >-
      {{ .ProjectName }}_v{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: "windows"
        formats: ["zip"]
    files:
      - "README*"
      - "LICENSE*"

# Create sources archive.
source:
  enabled: true
  name_template: "{{ .ProjectName }}_v{{ .Version }}_sources"
  format: "tar.gz"

# Create checksums file.
checksum:
  name_template: "{{ .ProjectName }}_v{{ .Version }}_checksums.txt"
  algorithm: "sha256"

# Create SBOMs for all archives and the source archive.
sboms:
  - id: "archive"
    artifacts: "archive"
  - id: "source"
    artifacts: "source"

# Sign the checksum file, which includes the checksums for all files (including SBOMs).
signs:
  - cmd: "cosign"
    signature: "${artifact}.sigstore.json"
    args:
      - "sign-blob"
      - "--bundle=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: "checksum"
    output: true

# Create Docker images:
#  - starlink_exporter: linux/amd64, linux/arm64, linux/arm/v7
dockers_v2:
  - id: "{{ .ProjectName }}"
    dockerfile: "docker/goreleaser.Dockerfile"
    images:
      - "joshuasing/starlink_exporter"
      - "ghcr.io/joshuasing/starlink_exporter"
    tags:
      - "{{ .Version }}"
      - "{{if not .Prerelease}}latest{{end}}"
      - "{{if not .Prerelease}}{{ .Major }}{{end}}"
      - "{{if not .Prerelease}}{{ .Major }}.{{ .Minor }}{{end}}"
    platforms:
      - "linux/amd64"
      - "linux/arm64"
      - "linux/arm/v7"
    build_args:
      VERSION: "{{ .Version }}"
      VCS_REF: "{{ .FullCommit }}"
      BUILD_DATE: "{{ .CommitDate }}"

# Sign Docker images and manifests.
docker_signs:
  - cmd: "cosign"
    args: ["sign", "${artifact}", "--yes"]
    artifacts: "all"

# Create file with Docker image digests.
docker_digest:
  name_template: "{{ .ProjectName }}_v{{ .Version }}_image_digests.txt"

# Snapshot version settings.
snapshot:
  version_template: "{{ incpatch .Version }}-dev-{{ .ShortCommit }}"

# Generate changelog for releases.
changelog:
  use: "github-native"

# Create GitHub release.
release:
  name_template: "starlink_exporter v{{ .Version }}"
  github:
    owner: "joshuasing"
    name: "starlink_exporter"
  prerelease: auto
  mode: "append"

# Close milestones for the released tag.
milestones:
  - repo:
      owner: "joshuasing"
      name: "starlink_exporter"
    close: true
    name_template: "{{ .Tag }}"
