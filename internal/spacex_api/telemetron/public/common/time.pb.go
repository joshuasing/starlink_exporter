// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.31.1
// source: spacex_api/telemetron/public/common/time.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Epoch int32

const (
	Epoch_UNIX Epoch = 0
	Epoch_GPS  Epoch = 1
)

// Enum value maps for Epoch.
var (
	Epoch_name = map[int32]string{
		0: "UNIX",
		1: "GPS",
	}
	Epoch_value = map[string]int32{
		"UNIX": 0,
		"GPS":  1,
	}
)

func (x Epoch) Enum() *Epoch {
	p := new(Epoch)
	*p = x
	return p
}

func (x Epoch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Epoch) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_telemetron_public_common_time_proto_enumTypes[0].Descriptor()
}

func (Epoch) Type() protoreflect.EnumType {
	return &file_spacex_api_telemetron_public_common_time_proto_enumTypes[0]
}

func (x Epoch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Epoch.Descriptor instead.
func (Epoch) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_telemetron_public_common_time_proto_rawDescGZIP(), []int{0}
}

type TimestampInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epoch         Epoch                  `protobuf:"varint,1,opt,name=epoch,proto3,enum=SpaceX.API.Telemetron.Public.Common.Epoch" json:"epoch,omitempty"`
	Nanoseconds   int64                  `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimestampInfo) Reset() {
	*x = TimestampInfo{}
	mi := &file_spacex_api_telemetron_public_common_time_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimestampInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampInfo) ProtoMessage() {}

func (x *TimestampInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_telemetron_public_common_time_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampInfo.ProtoReflect.Descriptor instead.
func (*TimestampInfo) Descriptor() ([]byte, []int) {
	return file_spacex_api_telemetron_public_common_time_proto_rawDescGZIP(), []int{0}
}

func (x *TimestampInfo) GetEpoch() Epoch {
	if x != nil {
		return x.Epoch
	}
	return Epoch_UNIX
}

func (x *TimestampInfo) GetNanoseconds() int64 {
	if x != nil {
		return x.Nanoseconds
	}
	return 0
}

var File_spacex_api_telemetron_public_common_time_proto protoreflect.FileDescriptor

const file_spacex_api_telemetron_public_common_time_proto_rawDesc = "" +
	"\n" +
	".spacex_api/telemetron/public/common/time.proto\x12#SpaceX.API.Telemetron.Public.Common\"s\n" +
	"\rTimestampInfo\x12@\n" +
	"\x05epoch\x18\x01 \x01(\x0e2*.SpaceX.API.Telemetron.Public.Common.EpochR\x05epoch\x12 \n" +
	"\vnanoseconds\x18\x02 \x01(\x03R\vnanoseconds*\x1a\n" +
	"\x05Epoch\x12\b\n" +
	"\x04UNIX\x10\x00\x12\a\n" +
	"\x03GPS\x10\x01b\x06proto3"

var (
	file_spacex_api_telemetron_public_common_time_proto_rawDescOnce sync.Once
	file_spacex_api_telemetron_public_common_time_proto_rawDescData []byte
)

func file_spacex_api_telemetron_public_common_time_proto_rawDescGZIP() []byte {
	file_spacex_api_telemetron_public_common_time_proto_rawDescOnce.Do(func() {
		file_spacex_api_telemetron_public_common_time_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spacex_api_telemetron_public_common_time_proto_rawDesc), len(file_spacex_api_telemetron_public_common_time_proto_rawDesc)))
	})
	return file_spacex_api_telemetron_public_common_time_proto_rawDescData
}

var file_spacex_api_telemetron_public_common_time_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spacex_api_telemetron_public_common_time_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_spacex_api_telemetron_public_common_time_proto_goTypes = []any{
	(Epoch)(0),            // 0: SpaceX.API.Telemetron.Public.Common.Epoch
	(*TimestampInfo)(nil), // 1: SpaceX.API.Telemetron.Public.Common.TimestampInfo
}
var file_spacex_api_telemetron_public_common_time_proto_depIdxs = []int32{
	0, // 0: SpaceX.API.Telemetron.Public.Common.TimestampInfo.epoch:type_name -> SpaceX.API.Telemetron.Public.Common.Epoch
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_spacex_api_telemetron_public_common_time_proto_init() }
func file_spacex_api_telemetron_public_common_time_proto_init() {
	if File_spacex_api_telemetron_public_common_time_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spacex_api_telemetron_public_common_time_proto_rawDesc), len(file_spacex_api_telemetron_public_common_time_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacex_api_telemetron_public_common_time_proto_goTypes,
		DependencyIndexes: file_spacex_api_telemetron_public_common_time_proto_depIdxs,
		EnumInfos:         file_spacex_api_telemetron_public_common_time_proto_enumTypes,
		MessageInfos:      file_spacex_api_telemetron_public_common_time_proto_msgTypes,
	}.Build()
	File_spacex_api_telemetron_public_common_time_proto = out.File
	file_spacex_api_telemetron_public_common_time_proto_goTypes = nil
	file_spacex_api_telemetron_public_common_time_proto_depIdxs = nil
}
