// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: spacex_api/device/wifi.proto

package device

import (
	network "github.com/joshuasing/starlink_exporter/internal/spacex/api/satellites/network"
	common "github.com/joshuasing/starlink_exporter/internal/spacex_api/telemetron/public/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WifiGetClientHistoryResponse_WifiLimitedReason int32

const (
	WifiGetClientHistoryResponse_LIMIT_UNKNOWN         WifiGetClientHistoryResponse_WifiLimitedReason = 0
	WifiGetClientHistoryResponse_LIMIT_NONE            WifiGetClientHistoryResponse_WifiLimitedReason = 1
	WifiGetClientHistoryResponse_LIMIT_UNCLASSIFIED    WifiGetClientHistoryResponse_WifiLimitedReason = 2
	WifiGetClientHistoryResponse_LIMIT_DROPPED_PACKETS WifiGetClientHistoryResponse_WifiLimitedReason = 3
)

// Enum value maps for WifiGetClientHistoryResponse_WifiLimitedReason.
var (
	WifiGetClientHistoryResponse_WifiLimitedReason_name = map[int32]string{
		0: "LIMIT_UNKNOWN",
		1: "LIMIT_NONE",
		2: "LIMIT_UNCLASSIFIED",
		3: "LIMIT_DROPPED_PACKETS",
	}
	WifiGetClientHistoryResponse_WifiLimitedReason_value = map[string]int32{
		"LIMIT_UNKNOWN":         0,
		"LIMIT_NONE":            1,
		"LIMIT_UNCLASSIFIED":    2,
		"LIMIT_DROPPED_PACKETS": 3,
	}
)

func (x WifiGetClientHistoryResponse_WifiLimitedReason) Enum() *WifiGetClientHistoryResponse_WifiLimitedReason {
	p := new(WifiGetClientHistoryResponse_WifiLimitedReason)
	*p = x
	return p
}

func (x WifiGetClientHistoryResponse_WifiLimitedReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiGetClientHistoryResponse_WifiLimitedReason) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_wifi_proto_enumTypes[0].Descriptor()
}

func (WifiGetClientHistoryResponse_WifiLimitedReason) Type() protoreflect.EnumType {
	return &file_spacex_api_device_wifi_proto_enumTypes[0]
}

func (x WifiGetClientHistoryResponse_WifiLimitedReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiGetClientHistoryResponse_WifiLimitedReason.Descriptor instead.
func (WifiGetClientHistoryResponse_WifiLimitedReason) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{24, 0}
}

type WifiClient_Interface int32

const (
	WifiClient_UNKNOWN      WifiClient_Interface = 0
	WifiClient_ETH          WifiClient_Interface = 1
	WifiClient_RF_2GHZ      WifiClient_Interface = 2
	WifiClient_RF_5GHZ      WifiClient_Interface = 3
	WifiClient_RF_5GHZ_HIGH WifiClient_Interface = 4
)

// Enum value maps for WifiClient_Interface.
var (
	WifiClient_Interface_name = map[int32]string{
		0: "UNKNOWN",
		1: "ETH",
		2: "RF_2GHZ",
		3: "RF_5GHZ",
		4: "RF_5GHZ_HIGH",
	}
	WifiClient_Interface_value = map[string]int32{
		"UNKNOWN":      0,
		"ETH":          1,
		"RF_2GHZ":      2,
		"RF_5GHZ":      3,
		"RF_5GHZ_HIGH": 4,
	}
)

func (x WifiClient_Interface) Enum() *WifiClient_Interface {
	p := new(WifiClient_Interface)
	*p = x
	return p
}

func (x WifiClient_Interface) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiClient_Interface) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_wifi_proto_enumTypes[1].Descriptor()
}

func (WifiClient_Interface) Type() protoreflect.EnumType {
	return &file_spacex_api_device_wifi_proto_enumTypes[1]
}

func (x WifiClient_Interface) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiClient_Interface.Descriptor instead.
func (WifiClient_Interface) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28, 0}
}

type WifiClient_Role int32

const (
	WifiClient_ROLE_UNKNOWN WifiClient_Role = 0
	WifiClient_CLIENT       WifiClient_Role = 1
	WifiClient_REPEATER     WifiClient_Role = 2
	WifiClient_CONTROLLER   WifiClient_Role = 3
)

// Enum value maps for WifiClient_Role.
var (
	WifiClient_Role_name = map[int32]string{
		0: "ROLE_UNKNOWN",
		1: "CLIENT",
		2: "REPEATER",
		3: "CONTROLLER",
	}
	WifiClient_Role_value = map[string]int32{
		"ROLE_UNKNOWN": 0,
		"CLIENT":       1,
		"REPEATER":     2,
		"CONTROLLER":   3,
	}
)

func (x WifiClient_Role) Enum() *WifiClient_Role {
	p := new(WifiClient_Role)
	*p = x
	return p
}

func (x WifiClient_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiClient_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_wifi_proto_enumTypes[2].Descriptor()
}

func (WifiClient_Role) Type() protoreflect.EnumType {
	return &file_spacex_api_device_wifi_proto_enumTypes[2]
}

func (x WifiClient_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiClient_Role.Descriptor instead.
func (WifiClient_Role) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28, 1}
}

type WifiNetwork_Band int32

const (
	WifiNetwork_WIFI_UNKNOWN WifiNetwork_Band = 0
	WifiNetwork_WIFI_2_4GHZ  WifiNetwork_Band = 1
	WifiNetwork_WIFI_5GHZ    WifiNetwork_Band = 2
)

// Enum value maps for WifiNetwork_Band.
var (
	WifiNetwork_Band_name = map[int32]string{
		0: "WIFI_UNKNOWN",
		1: "WIFI_2_4GHZ",
		2: "WIFI_5GHZ",
	}
	WifiNetwork_Band_value = map[string]int32{
		"WIFI_UNKNOWN": 0,
		"WIFI_2_4GHZ":  1,
		"WIFI_5GHZ":    2,
	}
)

func (x WifiNetwork_Band) Enum() *WifiNetwork_Band {
	p := new(WifiNetwork_Band)
	*p = x
	return p
}

func (x WifiNetwork_Band) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiNetwork_Band) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_wifi_proto_enumTypes[3].Descriptor()
}

func (WifiNetwork_Band) Type() protoreflect.EnumType {
	return &file_spacex_api_device_wifi_proto_enumTypes[3]
}

func (x WifiNetwork_Band) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiNetwork_Band.Descriptor instead.
func (WifiNetwork_Band) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{41, 0}
}

type IwprivCommand_Ioctl int32

const (
	IwprivCommand_IOCTL_SET                IwprivCommand_Ioctl = 0
	IwprivCommand_IOCTL_E2P                IwprivCommand_Ioctl = 1
	IwprivCommand_IOCTL_MAC                IwprivCommand_Ioctl = 3
	IwprivCommand_IOCTL_SX_ALLOW_5GHZ_HIGH IwprivCommand_Ioctl = 4
)

// Enum value maps for IwprivCommand_Ioctl.
var (
	IwprivCommand_Ioctl_name = map[int32]string{
		0: "IOCTL_SET",
		1: "IOCTL_E2P",
		3: "IOCTL_MAC",
		4: "IOCTL_SX_ALLOW_5GHZ_HIGH",
	}
	IwprivCommand_Ioctl_value = map[string]int32{
		"IOCTL_SET":                0,
		"IOCTL_E2P":                1,
		"IOCTL_MAC":                3,
		"IOCTL_SX_ALLOW_5GHZ_HIGH": 4,
	}
)

func (x IwprivCommand_Ioctl) Enum() *IwprivCommand_Ioctl {
	p := new(IwprivCommand_Ioctl)
	*p = x
	return p
}

func (x IwprivCommand_Ioctl) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IwprivCommand_Ioctl) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_wifi_proto_enumTypes[4].Descriptor()
}

func (IwprivCommand_Ioctl) Type() protoreflect.EnumType {
	return &file_spacex_api_device_wifi_proto_enumTypes[4]
}

func (x IwprivCommand_Ioctl) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IwprivCommand_Ioctl.Descriptor instead.
func (IwprivCommand_Ioctl) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{65, 0}
}

type WifiClients struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clients       []*WifiClient          `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiClients) Reset() {
	*x = WifiClients{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClients) ProtoMessage() {}

func (x *WifiClients) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClients.ProtoReflect.Descriptor instead.
func (*WifiClients) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{0}
}

func (x *WifiClients) GetClients() []*WifiClient {
	if x != nil {
		return x.Clients
	}
	return nil
}

type ToController struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	ApiVersion               int32                  `protobuf:"varint,4,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	ApiVersionOtherSide      int32                  `protobuf:"varint,7,opt,name=api_version_other_side,json=apiVersionOtherSide,proto3" json:"api_version_other_side,omitempty"`
	ReadyForMultipleNetworks bool                   `protobuf:"varint,6,opt,name=ready_for_multiple_networks,json=readyForMultipleNetworks,proto3" json:"ready_for_multiple_networks,omitempty"`
	// Types that are valid to be assigned to Message:
	//
	//	*ToController_Clients
	//	*ToController_MeshJoin
	//	*ToController_Status
	//	*ToController_Speedtest
	Message       isToController_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToController) Reset() {
	*x = ToController{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToController) ProtoMessage() {}

func (x *ToController) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToController.ProtoReflect.Descriptor instead.
func (*ToController) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{1}
}

func (x *ToController) GetApiVersion() int32 {
	if x != nil {
		return x.ApiVersion
	}
	return 0
}

func (x *ToController) GetApiVersionOtherSide() int32 {
	if x != nil {
		return x.ApiVersionOtherSide
	}
	return 0
}

func (x *ToController) GetReadyForMultipleNetworks() bool {
	if x != nil {
		return x.ReadyForMultipleNetworks
	}
	return false
}

func (x *ToController) GetMessage() isToController_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ToController) GetClients() *WifiClients {
	if x != nil {
		if x, ok := x.Message.(*ToController_Clients); ok {
			return x.Clients
		}
	}
	return nil
}

func (x *ToController) GetMeshJoin() *WifiMeshJoin {
	if x != nil {
		if x, ok := x.Message.(*ToController_MeshJoin); ok {
			return x.MeshJoin
		}
	}
	return nil
}

func (x *ToController) GetStatus() *WifiMeshStatus {
	if x != nil {
		if x, ok := x.Message.(*ToController_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *ToController) GetSpeedtest() *MeshSpeedtest {
	if x != nil {
		if x, ok := x.Message.(*ToController_Speedtest); ok {
			return x.Speedtest
		}
	}
	return nil
}

type isToController_Message interface {
	isToController_Message()
}

type ToController_Clients struct {
	Clients *WifiClients `protobuf:"bytes,1,opt,name=clients,proto3,oneof"`
}

type ToController_MeshJoin struct {
	MeshJoin *WifiMeshJoin `protobuf:"bytes,2,opt,name=mesh_join,json=meshJoin,proto3,oneof"`
}

type ToController_Status struct {
	Status *WifiMeshStatus `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type ToController_Speedtest struct {
	Speedtest *MeshSpeedtest `protobuf:"bytes,5,opt,name=speedtest,proto3,oneof"`
}

func (*ToController_Clients) isToController_Message() {}

func (*ToController_MeshJoin) isToController_Message() {}

func (*ToController_Status) isToController_Message() {}

func (*ToController_Speedtest) isToController_Message() {}

type WifiMeshJoin struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	Incarnation       uint64                  `protobuf:"varint,1,opt,name=incarnation,proto3" json:"incarnation,omitempty"`
	HardwareVersion   string                  `protobuf:"bytes,2,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	Supports_5GhzHigh bool                    `protobuf:"varint,3,opt,name=supports_5ghz_high,json=supports5ghzHigh,proto3" json:"supports_5ghz_high,omitempty"`
	SiteSurveyScan    []*WifiSiteSurveyResult `protobuf:"bytes,4,rep,name=siteSurveyScan,proto3" json:"siteSurveyScan,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *WifiMeshJoin) Reset() {
	*x = WifiMeshJoin{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiMeshJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiMeshJoin) ProtoMessage() {}

func (x *WifiMeshJoin) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiMeshJoin.ProtoReflect.Descriptor instead.
func (*WifiMeshJoin) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{2}
}

func (x *WifiMeshJoin) GetIncarnation() uint64 {
	if x != nil {
		return x.Incarnation
	}
	return 0
}

func (x *WifiMeshJoin) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

func (x *WifiMeshJoin) GetSupports_5GhzHigh() bool {
	if x != nil {
		return x.Supports_5GhzHigh
	}
	return false
}

func (x *WifiMeshJoin) GetSiteSurveyScan() []*WifiSiteSurveyResult {
	if x != nil {
		return x.SiteSurveyScan
	}
	return nil
}

type WifiMeshStatus struct {
	state                 protoimpl.MessageState     `protogen:"open.v1"`
	SoftwareVersion       string                     `protobuf:"bytes,5,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	MacLan                string                     `protobuf:"bytes,6,opt,name=mac_lan,json=macLan,proto3" json:"mac_lan,omitempty"`
	SourceMacAddresses    []string                   `protobuf:"bytes,7,rep,name=source_mac_addresses,json=sourceMacAddresses,proto3" json:"source_mac_addresses,omitempty"`
	Clients               []*WifiClient              `protobuf:"bytes,2,rep,name=clients,proto3" json:"clients,omitempty"`
	BssList               []*InflatedBasicServiceSet `protobuf:"bytes,3,rep,name=bss_list,json=bssList,proto3" json:"bss_list,omitempty"`
	HardwareVersion       string                     `protobuf:"bytes,4,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	BackhaulBssid         string                     `protobuf:"bytes,8,opt,name=backhaul_bssid,json=backhaulBssid,proto3" json:"backhaul_bssid,omitempty"`
	BackhaulEstPreference uint32                     `protobuf:"varint,9,opt,name=backhaul_est_preference,json=backhaulEstPreference,proto3" json:"backhaul_est_preference,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *WifiMeshStatus) Reset() {
	*x = WifiMeshStatus{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiMeshStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiMeshStatus) ProtoMessage() {}

func (x *WifiMeshStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiMeshStatus.ProtoReflect.Descriptor instead.
func (*WifiMeshStatus) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{3}
}

func (x *WifiMeshStatus) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *WifiMeshStatus) GetMacLan() string {
	if x != nil {
		return x.MacLan
	}
	return ""
}

func (x *WifiMeshStatus) GetSourceMacAddresses() []string {
	if x != nil {
		return x.SourceMacAddresses
	}
	return nil
}

func (x *WifiMeshStatus) GetClients() []*WifiClient {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *WifiMeshStatus) GetBssList() []*InflatedBasicServiceSet {
	if x != nil {
		return x.BssList
	}
	return nil
}

func (x *WifiMeshStatus) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

func (x *WifiMeshStatus) GetBackhaulBssid() string {
	if x != nil {
		return x.BackhaulBssid
	}
	return ""
}

func (x *WifiMeshStatus) GetBackhaulEstPreference() uint32 {
	if x != nil {
		return x.BackhaulEstPreference
	}
	return 0
}

type MeshSpeedtestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeshSpeedtestRequest) Reset() {
	*x = MeshSpeedtestRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshSpeedtestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshSpeedtestRequest) ProtoMessage() {}

func (x *MeshSpeedtestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshSpeedtestRequest.ProtoReflect.Descriptor instead.
func (*MeshSpeedtestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{4}
}

type MeshSpeedtest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UploadStartTime   int64                  `protobuf:"varint,1,opt,name=upload_start_time,json=uploadStartTime,proto3" json:"upload_start_time,omitempty"`
	DownloadStartTime int64                  `protobuf:"varint,2,opt,name=download_start_time,json=downloadStartTime,proto3" json:"download_start_time,omitempty"`
	UploadMbps        float32                `protobuf:"fixed32,3,opt,name=upload_mbps,json=uploadMbps,proto3" json:"upload_mbps,omitempty"`
	DownloadMbps      float32                `protobuf:"fixed32,4,opt,name=download_mbps,json=downloadMbps,proto3" json:"download_mbps,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MeshSpeedtest) Reset() {
	*x = MeshSpeedtest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshSpeedtest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshSpeedtest) ProtoMessage() {}

func (x *MeshSpeedtest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshSpeedtest.ProtoReflect.Descriptor instead.
func (*MeshSpeedtest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{5}
}

func (x *MeshSpeedtest) GetUploadStartTime() int64 {
	if x != nil {
		return x.UploadStartTime
	}
	return 0
}

func (x *MeshSpeedtest) GetDownloadStartTime() int64 {
	if x != nil {
		return x.DownloadStartTime
	}
	return 0
}

func (x *MeshSpeedtest) GetUploadMbps() float32 {
	if x != nil {
		return x.UploadMbps
	}
	return 0
}

func (x *MeshSpeedtest) GetDownloadMbps() float32 {
	if x != nil {
		return x.DownloadMbps
	}
	return 0
}

type WifiSiteSurveyResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rssi          float32                `protobuf:"fixed32,1,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Channel       uint32                 `protobuf:"varint,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Ssid          string                 `protobuf:"bytes,3,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Security      WifiSecurity           `protobuf:"varint,4,opt,name=security,proto3,enum=SpaceX.API.Device.WifiSecurity" json:"security,omitempty"`
	WirelessMode  WifiMode               `protobuf:"varint,5,opt,name=wireless_mode,json=wirelessMode,proto3,enum=SpaceX.API.Device.WifiMode" json:"wireless_mode,omitempty"`
	Iface         IfaceType              `protobuf:"varint,6,opt,name=iface,proto3,enum=SpaceX.API.Device.IfaceType" json:"iface,omitempty"`
	MacAddress    string                 `protobuf:"bytes,7,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	EstRxRate     float32                `protobuf:"fixed32,8,opt,name=est_rx_rate,json=estRxRate,proto3" json:"est_rx_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSiteSurveyResult) Reset() {
	*x = WifiSiteSurveyResult{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSiteSurveyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSiteSurveyResult) ProtoMessage() {}

func (x *WifiSiteSurveyResult) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSiteSurveyResult.ProtoReflect.Descriptor instead.
func (*WifiSiteSurveyResult) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{6}
}

func (x *WifiSiteSurveyResult) GetRssi() float32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *WifiSiteSurveyResult) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *WifiSiteSurveyResult) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiSiteSurveyResult) GetSecurity() WifiSecurity {
	if x != nil {
		return x.Security
	}
	return WifiSecurity_WIFI_SECURITY_UNKNOWN
}

func (x *WifiSiteSurveyResult) GetWirelessMode() WifiMode {
	if x != nil {
		return x.WirelessMode
	}
	return WifiMode_WIFI_MODE_DEFAULT
}

func (x *WifiSiteSurveyResult) GetIface() IfaceType {
	if x != nil {
		return x.Iface
	}
	return IfaceType_IFACE_TYPE_UNKNOWN
}

func (x *WifiSiteSurveyResult) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *WifiSiteSurveyResult) GetEstRxRate() float32 {
	if x != nil {
		return x.EstRxRate
	}
	return 0
}

type WifiGlobalMeshStatus struct {
	state              protoimpl.MessageState     `protogen:"open.v1"`
	HardwareVersion    string                     `protobuf:"bytes,1,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	SoftwareVersion    string                     `protobuf:"bytes,2,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	BssList            []*InflatedBasicServiceSet `protobuf:"bytes,3,rep,name=bss_list,json=bssList,proto3" json:"bss_list,omitempty"`
	HopsFromController uint32                     `protobuf:"varint,4,opt,name=hops_from_controller,json=hopsFromController,proto3" json:"hops_from_controller,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WifiGlobalMeshStatus) Reset() {
	*x = WifiGlobalMeshStatus{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGlobalMeshStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGlobalMeshStatus) ProtoMessage() {}

func (x *WifiGlobalMeshStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGlobalMeshStatus.ProtoReflect.Descriptor instead.
func (*WifiGlobalMeshStatus) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{7}
}

func (x *WifiGlobalMeshStatus) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

func (x *WifiGlobalMeshStatus) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *WifiGlobalMeshStatus) GetBssList() []*InflatedBasicServiceSet {
	if x != nil {
		return x.BssList
	}
	return nil
}

func (x *WifiGlobalMeshStatus) GetHopsFromController() uint32 {
	if x != nil {
		return x.HopsFromController
	}
	return 0
}

type BackhaulRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetryBackhaul bool                   `protobuf:"varint,1,opt,name=retry_backhaul,json=retryBackhaul,proto3" json:"retry_backhaul,omitempty"`
	GoldenBss     *WifiConfig            `protobuf:"bytes,2,opt,name=golden_bss,json=goldenBss,proto3" json:"golden_bss,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackhaulRequest) Reset() {
	*x = BackhaulRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackhaulRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackhaulRequest) ProtoMessage() {}

func (x *BackhaulRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackhaulRequest.ProtoReflect.Descriptor instead.
func (*BackhaulRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{8}
}

func (x *BackhaulRequest) GetRetryBackhaul() bool {
	if x != nil {
		return x.RetryBackhaul
	}
	return false
}

func (x *BackhaulRequest) GetGoldenBss() *WifiConfig {
	if x != nil {
		return x.GoldenBss
	}
	return nil
}

type FromController struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ApiVersion int32                  `protobuf:"varint,3,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// Types that are valid to be assigned to Message:
	//
	//	*FromController_WifiConfig
	//	*FromController_SteerClientRequest
	//	*FromController_Status
	//	*FromController_BackhaulRequest
	//	*FromController_StartSpeedtest
	//	*FromController_WifiBtmRequest
	Message       isFromController_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FromController) Reset() {
	*x = FromController{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FromController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromController) ProtoMessage() {}

func (x *FromController) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromController.ProtoReflect.Descriptor instead.
func (*FromController) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{9}
}

func (x *FromController) GetApiVersion() int32 {
	if x != nil {
		return x.ApiVersion
	}
	return 0
}

func (x *FromController) GetMessage() isFromController_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *FromController) GetWifiConfig() *WifiConfig {
	if x != nil {
		if x, ok := x.Message.(*FromController_WifiConfig); ok {
			return x.WifiConfig
		}
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *FromController) GetSteerClientRequest() *SteerClientRequest {
	if x != nil {
		if x, ok := x.Message.(*FromController_SteerClientRequest); ok {
			return x.SteerClientRequest
		}
	}
	return nil
}

func (x *FromController) GetStatus() *WifiGlobalMeshStatus {
	if x != nil {
		if x, ok := x.Message.(*FromController_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *FromController) GetBackhaulRequest() *BackhaulRequest {
	if x != nil {
		if x, ok := x.Message.(*FromController_BackhaulRequest); ok {
			return x.BackhaulRequest
		}
	}
	return nil
}

func (x *FromController) GetStartSpeedtest() *MeshSpeedtestRequest {
	if x != nil {
		if x, ok := x.Message.(*FromController_StartSpeedtest); ok {
			return x.StartSpeedtest
		}
	}
	return nil
}

func (x *FromController) GetWifiBtmRequest() *WifiBtmRequest {
	if x != nil {
		if x, ok := x.Message.(*FromController_WifiBtmRequest); ok {
			return x.WifiBtmRequest
		}
	}
	return nil
}

type isFromController_Message interface {
	isFromController_Message()
}

type FromController_WifiConfig struct {
	WifiConfig *WifiConfig `protobuf:"bytes,1,opt,name=wifi_config,json=wifiConfig,proto3,oneof"`
}

type FromController_SteerClientRequest struct {
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	SteerClientRequest *SteerClientRequest `protobuf:"bytes,2,opt,name=steer_client_request,json=steerClientRequest,proto3,oneof"`
}

type FromController_Status struct {
	Status *WifiGlobalMeshStatus `protobuf:"bytes,4,opt,name=status,proto3,oneof"`
}

type FromController_BackhaulRequest struct {
	BackhaulRequest *BackhaulRequest `protobuf:"bytes,5,opt,name=backhaul_request,json=backhaulRequest,proto3,oneof"`
}

type FromController_StartSpeedtest struct {
	StartSpeedtest *MeshSpeedtestRequest `protobuf:"bytes,6,opt,name=start_speedtest,json=startSpeedtest,proto3,oneof"`
}

type FromController_WifiBtmRequest struct {
	WifiBtmRequest *WifiBtmRequest `protobuf:"bytes,7,opt,name=wifi_btm_request,json=wifiBtmRequest,proto3,oneof"`
}

func (*FromController_WifiConfig) isFromController_Message() {}

func (*FromController_SteerClientRequest) isFromController_Message() {}

func (*FromController_Status) isFromController_Message() {}

func (*FromController_BackhaulRequest) isFromController_Message() {}

func (*FromController_StartSpeedtest) isFromController_Message() {}

func (*FromController_WifiBtmRequest) isFromController_Message() {}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
type SteerClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	ClientMacAddr string `protobuf:"bytes,1,opt,name=client_mac_addr,json=clientMacAddr,proto3" json:"client_mac_addr,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	Targets       []*SteerClientRequest_SteerTarget `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SteerClientRequest) Reset() {
	*x = SteerClientRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SteerClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SteerClientRequest) ProtoMessage() {}

func (x *SteerClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SteerClientRequest.ProtoReflect.Descriptor instead.
func (*SteerClientRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{10}
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *SteerClientRequest) GetClientMacAddr() string {
	if x != nil {
		return x.ClientMacAddr
	}
	return ""
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *SteerClientRequest) GetTargets() []*SteerClientRequest_SteerTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

type WifiBtmRequest struct {
	state                   protoimpl.MessageState           `protogen:"open.v1"`
	BssTerminationDurationM uint32                           `protobuf:"varint,5,opt,name=bss_termination_duration_m,json=bssTerminationDurationM,proto3" json:"bss_termination_duration_m,omitempty"`
	PeerBssid               string                           `protobuf:"bytes,1,opt,name=peer_bssid,json=peerBssid,proto3" json:"peer_bssid,omitempty"`
	NeighborReport          []*WifiBtmRequest_NeighborReport `protobuf:"bytes,4,rep,name=neighbor_report,json=neighborReport,proto3" json:"neighbor_report,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *WifiBtmRequest) Reset() {
	*x = WifiBtmRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiBtmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiBtmRequest) ProtoMessage() {}

func (x *WifiBtmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiBtmRequest.ProtoReflect.Descriptor instead.
func (*WifiBtmRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{11}
}

func (x *WifiBtmRequest) GetBssTerminationDurationM() uint32 {
	if x != nil {
		return x.BssTerminationDurationM
	}
	return 0
}

func (x *WifiBtmRequest) GetPeerBssid() string {
	if x != nil {
		return x.PeerBssid
	}
	return ""
}

func (x *WifiBtmRequest) GetNeighborReport() []*WifiBtmRequest_NeighborReport {
	if x != nil {
		return x.NeighborReport
	}
	return nil
}

type WifiSelfTest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	TotalSuccess  bool                       `protobuf:"varint,1,opt,name=total_success,json=totalSuccess,proto3" json:"total_success,omitempty"`
	Fused         *WifiSelfTest_TestResult   `protobuf:"bytes,2,opt,name=fused,proto3" json:"fused,omitempty"`
	EthPhys       []*WifiSelfTest_TestResult `protobuf:"bytes,3,rep,name=eth_phys,json=ethPhys,proto3" json:"eth_phys,omitempty"`
	Pcis          []*WifiSelfTest_TestResult `protobuf:"bytes,4,rep,name=pcis,proto3" json:"pcis,omitempty"`
	Bl2Prod       *WifiSelfTest_TestResult   `protobuf:"bytes,5,opt,name=bl2_prod,json=bl2Prod,proto3" json:"bl2_prod,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSelfTest) Reset() {
	*x = WifiSelfTest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSelfTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSelfTest) ProtoMessage() {}

func (x *WifiSelfTest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSelfTest.ProtoReflect.Descriptor instead.
func (*WifiSelfTest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{12}
}

func (x *WifiSelfTest) GetTotalSuccess() bool {
	if x != nil {
		return x.TotalSuccess
	}
	return false
}

func (x *WifiSelfTest) GetFused() *WifiSelfTest_TestResult {
	if x != nil {
		return x.Fused
	}
	return nil
}

func (x *WifiSelfTest) GetEthPhys() []*WifiSelfTest_TestResult {
	if x != nil {
		return x.EthPhys
	}
	return nil
}

func (x *WifiSelfTest) GetPcis() []*WifiSelfTest_TestResult {
	if x != nil {
		return x.Pcis
	}
	return nil
}

func (x *WifiSelfTest) GetBl2Prod() *WifiSelfTest_TestResult {
	if x != nil {
		return x.Bl2Prod
	}
	return nil
}

type WifiSetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WifiConfig    *WifiConfig            `protobuf:"bytes,1,opt,name=wifi_config,json=wifiConfig,proto3" json:"wifi_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSetConfigRequest) Reset() {
	*x = WifiSetConfigRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetConfigRequest) ProtoMessage() {}

func (x *WifiSetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetConfigRequest.ProtoReflect.Descriptor instead.
func (*WifiSetConfigRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{13}
}

func (x *WifiSetConfigRequest) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

type WifiSetConfigResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UpdatedWifiConfig *WifiConfig            `protobuf:"bytes,1,opt,name=updated_wifi_config,json=updatedWifiConfig,proto3" json:"updated_wifi_config,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *WifiSetConfigResponse) Reset() {
	*x = WifiSetConfigResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetConfigResponse) ProtoMessage() {}

func (x *WifiSetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetConfigResponse.ProtoReflect.Descriptor instead.
func (*WifiSetConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{14}
}

func (x *WifiSetConfigResponse) GetUpdatedWifiConfig() *WifiConfig {
	if x != nil {
		return x.UpdatedWifiConfig
	}
	return nil
}

type WifiGetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetConfigRequest) Reset() {
	*x = WifiGetConfigRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetConfigRequest) ProtoMessage() {}

func (x *WifiGetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetConfigRequest.ProtoReflect.Descriptor instead.
func (*WifiGetConfigRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{15}
}

type WifiGetConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WifiConfig    *WifiConfig            `protobuf:"bytes,1,opt,name=wifi_config,json=wifiConfig,proto3" json:"wifi_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetConfigResponse) Reset() {
	*x = WifiGetConfigResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetConfigResponse) ProtoMessage() {}

func (x *WifiGetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetConfigResponse.ProtoReflect.Descriptor instead.
func (*WifiGetConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{16}
}

func (x *WifiGetConfigResponse) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

type WifiSetMeshDeviceTrustRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Auth          MeshAuth               `protobuf:"varint,2,opt,name=auth,proto3,enum=SpaceX.API.Device.MeshAuth" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSetMeshDeviceTrustRequest) Reset() {
	*x = WifiSetMeshDeviceTrustRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetMeshDeviceTrustRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetMeshDeviceTrustRequest) ProtoMessage() {}

func (x *WifiSetMeshDeviceTrustRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetMeshDeviceTrustRequest.ProtoReflect.Descriptor instead.
func (*WifiSetMeshDeviceTrustRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{17}
}

func (x *WifiSetMeshDeviceTrustRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WifiSetMeshDeviceTrustRequest) GetAuth() MeshAuth {
	if x != nil {
		return x.Auth
	}
	return MeshAuth_MESH_AUTH_UNKNOWN
}

type WifiSetMeshDeviceTrustResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSetMeshDeviceTrustResponse) Reset() {
	*x = WifiSetMeshDeviceTrustResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetMeshDeviceTrustResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetMeshDeviceTrustResponse) ProtoMessage() {}

func (x *WifiSetMeshDeviceTrustResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetMeshDeviceTrustResponse.ProtoReflect.Descriptor instead.
func (*WifiSetMeshDeviceTrustResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{18}
}

type WifiSetMeshConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MeshConfig    *MeshConfig            `protobuf:"bytes,1,opt,name=mesh_config,json=meshConfig,proto3" json:"mesh_config,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSetMeshConfigRequest) Reset() {
	*x = WifiSetMeshConfigRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetMeshConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetMeshConfigRequest) ProtoMessage() {}

func (x *WifiSetMeshConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetMeshConfigRequest.ProtoReflect.Descriptor instead.
func (*WifiSetMeshConfigRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{19}
}

func (x *WifiSetMeshConfigRequest) GetMeshConfig() *MeshConfig {
	if x != nil {
		return x.MeshConfig
	}
	return nil
}

func (x *WifiSetMeshConfigRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type WifiSetMeshConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSetMeshConfigResponse) Reset() {
	*x = WifiSetMeshConfigResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetMeshConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetMeshConfigResponse) ProtoMessage() {}

func (x *WifiSetMeshConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetMeshConfigResponse.ProtoReflect.Descriptor instead.
func (*WifiSetMeshConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{20}
}

type WifiGetClientsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetClientsRequest) Reset() {
	*x = WifiGetClientsRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetClientsRequest) ProtoMessage() {}

func (x *WifiGetClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetClientsRequest.ProtoReflect.Descriptor instead.
func (*WifiGetClientsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{21}
}

type WifiGetClientsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Clients        []*WifiClient          `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	HasClientIndex bool                   `protobuf:"varint,2,opt,name=has_client_index,json=hasClientIndex,proto3" json:"has_client_index,omitempty"`
	ClientIndex    int32                  `protobuf:"varint,3,opt,name=client_index,json=clientIndex,proto3" json:"client_index,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WifiGetClientsResponse) Reset() {
	*x = WifiGetClientsResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetClientsResponse) ProtoMessage() {}

func (x *WifiGetClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetClientsResponse.ProtoReflect.Descriptor instead.
func (*WifiGetClientsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{22}
}

func (x *WifiGetClientsResponse) GetClients() []*WifiClient {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *WifiGetClientsResponse) GetHasClientIndex() bool {
	if x != nil {
		return x.HasClientIndex
	}
	return false
}

func (x *WifiGetClientsResponse) GetClientIndex() int32 {
	if x != nil {
		return x.ClientIndex
	}
	return 0
}

type WifiGetClientHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	MacAddress    string `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	ClientId      uint32 `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetClientHistoryRequest) Reset() {
	*x = WifiGetClientHistoryRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetClientHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetClientHistoryRequest) ProtoMessage() {}

func (x *WifiGetClientHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetClientHistoryRequest.ProtoReflect.Descriptor instead.
func (*WifiGetClientHistoryRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{23}
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *WifiGetClientHistoryRequest) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *WifiGetClientHistoryRequest) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type WifiGetClientHistoryResponse struct {
	state             protoimpl.MessageState                           `protogen:"open.v1"`
	Current           uint64                                           `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	TxThroughputMbps  []float32                                        `protobuf:"fixed32,2,rep,packed,name=tx_throughput_mbps,json=txThroughputMbps,proto3" json:"tx_throughput_mbps,omitempty"`
	RxThroughputMbps  []float32                                        `protobuf:"fixed32,3,rep,packed,name=rx_throughput_mbps,json=rxThroughputMbps,proto3" json:"rx_throughput_mbps,omitempty"`
	ThroughputLimited []WifiGetClientHistoryResponse_WifiLimitedReason `protobuf:"varint,4,rep,packed,name=throughput_limited,json=throughputLimited,proto3,enum=SpaceX.API.Device.WifiGetClientHistoryResponse_WifiLimitedReason" json:"throughput_limited,omitempty"`
	RxRateMbps        []float32                                        `protobuf:"fixed32,5,rep,packed,name=rx_rate_mbps,json=rxRateMbps,proto3" json:"rx_rate_mbps,omitempty"`
	Rssi              []byte                                           `protobuf:"bytes,6,opt,name=rssi,proto3" json:"rssi,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *WifiGetClientHistoryResponse) Reset() {
	*x = WifiGetClientHistoryResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetClientHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetClientHistoryResponse) ProtoMessage() {}

func (x *WifiGetClientHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetClientHistoryResponse.ProtoReflect.Descriptor instead.
func (*WifiGetClientHistoryResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{24}
}

func (x *WifiGetClientHistoryResponse) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *WifiGetClientHistoryResponse) GetTxThroughputMbps() []float32 {
	if x != nil {
		return x.TxThroughputMbps
	}
	return nil
}

func (x *WifiGetClientHistoryResponse) GetRxThroughputMbps() []float32 {
	if x != nil {
		return x.RxThroughputMbps
	}
	return nil
}

func (x *WifiGetClientHistoryResponse) GetThroughputLimited() []WifiGetClientHistoryResponse_WifiLimitedReason {
	if x != nil {
		return x.ThroughputLimited
	}
	return nil
}

func (x *WifiGetClientHistoryResponse) GetRxRateMbps() []float32 {
	if x != nil {
		return x.RxRateMbps
	}
	return nil
}

func (x *WifiGetClientHistoryResponse) GetRssi() []byte {
	if x != nil {
		return x.Rssi
	}
	return nil
}

type WifiSetAviationConformedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSetAviationConformedRequest) Reset() {
	*x = WifiSetAviationConformedRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetAviationConformedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetAviationConformedRequest) ProtoMessage() {}

func (x *WifiSetAviationConformedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetAviationConformedRequest.ProtoReflect.Descriptor instead.
func (*WifiSetAviationConformedRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{25}
}

type WifiGetHistoryResponse struct {
	state                              protoimpl.MessageState                                `protogen:"open.v1"`
	Current                            uint64                                                `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PingDropRate                       []float32                                             `protobuf:"fixed32,1001,rep,packed,name=ping_drop_rate,json=pingDropRate,proto3" json:"ping_drop_rate,omitempty"`
	PingLatencyMs                      []float32                                             `protobuf:"fixed32,1002,rep,packed,name=ping_latency_ms,json=pingLatencyMs,proto3" json:"ping_latency_ms,omitempty"`
	CurrentIndex_15S                   uint64                                                `protobuf:"varint,2,opt,name=current_index_15s,json=currentIndex15s,proto3" json:"current_index_15s,omitempty"`
	PopIpv4PingDropRateLast_15S        []float32                                             `protobuf:"fixed32,1003,rep,packed,name=pop_ipv4_ping_drop_rate_last_15s,json=popIpv4PingDropRateLast15s,proto3" json:"pop_ipv4_ping_drop_rate_last_15s,omitempty"`
	PopIpv6PingDropRateLast_15S        []float32                                             `protobuf:"fixed32,1004,rep,packed,name=pop_ipv6_ping_drop_rate_last_15s,json=popIpv6PingDropRateLast15s,proto3" json:"pop_ipv6_ping_drop_rate_last_15s,omitempty"`
	GoogleIpv4PingDropRateLast_15S     []float32                                             `protobuf:"fixed32,1005,rep,packed,name=google_ipv4_ping_drop_rate_last_15s,json=googleIpv4PingDropRateLast15s,proto3" json:"google_ipv4_ping_drop_rate_last_15s,omitempty"`
	GoogleIpv6PingDropRateLast_15S     []float32                                             `protobuf:"fixed32,1006,rep,packed,name=google_ipv6_ping_drop_rate_last_15s,json=googleIpv6PingDropRateLast15s,proto3" json:"google_ipv6_ping_drop_rate_last_15s,omitempty"`
	CloudflareIpv4PingDropRateLast_15S []float32                                             `protobuf:"fixed32,1007,rep,packed,name=cloudflare_ipv4_ping_drop_rate_last_15s,json=cloudflareIpv4PingDropRateLast15s,proto3" json:"cloudflare_ipv4_ping_drop_rate_last_15s,omitempty"`
	CloudflareIpv6PingDropRateLast_15S []float32                                             `protobuf:"fixed32,1008,rep,packed,name=cloudflare_ipv6_ping_drop_rate_last_15s,json=cloudflareIpv6PingDropRateLast15s,proto3" json:"cloudflare_ipv6_ping_drop_rate_last_15s,omitempty"`
	DnsResolverDropRate                map[string]*WifiGetHistoryResponse_DnsResolverHistory `protobuf:"bytes,1009,rep,name=dns_resolver_drop_rate,json=dnsResolverDropRate,proto3" json:"dns_resolver_drop_rate,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *WifiGetHistoryResponse) Reset() {
	*x = WifiGetHistoryResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetHistoryResponse) ProtoMessage() {}

func (x *WifiGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*WifiGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{26}
}

func (x *WifiGetHistoryResponse) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *WifiGetHistoryResponse) GetPingDropRate() []float32 {
	if x != nil {
		return x.PingDropRate
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetPingLatencyMs() []float32 {
	if x != nil {
		return x.PingLatencyMs
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetCurrentIndex_15S() uint64 {
	if x != nil {
		return x.CurrentIndex_15S
	}
	return 0
}

func (x *WifiGetHistoryResponse) GetPopIpv4PingDropRateLast_15S() []float32 {
	if x != nil {
		return x.PopIpv4PingDropRateLast_15S
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetPopIpv6PingDropRateLast_15S() []float32 {
	if x != nil {
		return x.PopIpv6PingDropRateLast_15S
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetGoogleIpv4PingDropRateLast_15S() []float32 {
	if x != nil {
		return x.GoogleIpv4PingDropRateLast_15S
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetGoogleIpv6PingDropRateLast_15S() []float32 {
	if x != nil {
		return x.GoogleIpv6PingDropRateLast_15S
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetCloudflareIpv4PingDropRateLast_15S() []float32 {
	if x != nil {
		return x.CloudflareIpv4PingDropRateLast_15S
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetCloudflareIpv6PingDropRateLast_15S() []float32 {
	if x != nil {
		return x.CloudflareIpv6PingDropRateLast_15S
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetDnsResolverDropRate() map[string]*WifiGetHistoryResponse_DnsResolverHistory {
	if x != nil {
		return x.DnsResolverDropRate
	}
	return nil
}

type WifiNewClientConnectedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        *WifiClient            `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiNewClientConnectedEvent) Reset() {
	*x = WifiNewClientConnectedEvent{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiNewClientConnectedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNewClientConnectedEvent) ProtoMessage() {}

func (x *WifiNewClientConnectedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNewClientConnectedEvent.ProtoReflect.Descriptor instead.
func (*WifiNewClientConnectedEvent) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{27}
}

func (x *WifiNewClientConnectedEvent) GetClient() *WifiClient {
	if x != nil {
		return x.Client
	}
	return nil
}

type WifiClient struct {
	state                        protoimpl.MessageState  `protogen:"open.v1"`
	Name                         string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GivenName                    string                  `protobuf:"bytes,31,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	Domain                       string                  `protobuf:"bytes,22,opt,name=domain,proto3" json:"domain,omitempty"`
	MacAddress                   string                  `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IpAddress                    string                  `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	DhcpLeaseFound               bool                    `protobuf:"varint,49,opt,name=dhcp_lease_found,json=dhcpLeaseFound,proto3" json:"dhcp_lease_found,omitempty"`
	DhcpLeaseActive              bool                    `protobuf:"varint,46,opt,name=dhcp_lease_active,json=dhcpLeaseActive,proto3" json:"dhcp_lease_active,omitempty"`
	DhcpLeaseRenewed             bool                    `protobuf:"varint,47,opt,name=dhcp_lease_renewed,json=dhcpLeaseRenewed,proto3" json:"dhcp_lease_renewed,omitempty"`
	SecondsUntilDhcpLeaseExpires float32                 `protobuf:"fixed32,48,opt,name=seconds_until_dhcp_lease_expires,json=secondsUntilDhcpLeaseExpires,proto3" json:"seconds_until_dhcp_lease_expires,omitempty"`
	Ipv6Addresses                []string                `protobuf:"bytes,41,rep,name=ipv6_addresses,json=ipv6Addresses,proto3" json:"ipv6_addresses,omitempty"`
	SignalStrength               float32                 `protobuf:"fixed32,4,opt,name=signal_strength,json=signalStrength,proto3" json:"signal_strength,omitempty"`
	ChannelWidth                 uint32                  `protobuf:"varint,12,opt,name=channel_width,json=channelWidth,proto3" json:"channel_width,omitempty"`
	RxStats                      *WifiClient_RxStats     `protobuf:"bytes,5,opt,name=rx_stats,json=rxStats,proto3" json:"rx_stats,omitempty"`
	RxStatsValid                 bool                    `protobuf:"varint,60,opt,name=rx_stats_valid,json=rxStatsValid,proto3" json:"rx_stats_valid,omitempty"`
	TxStats                      *WifiClient_TxStats     `protobuf:"bytes,6,opt,name=tx_stats,json=txStats,proto3" json:"tx_stats,omitempty"`
	TxStatsValid                 bool                    `protobuf:"varint,61,opt,name=tx_stats_valid,json=txStatsValid,proto3" json:"tx_stats_valid,omitempty"`
	AssociatedTimeS              uint32                  `protobuf:"varint,7,opt,name=associated_time_s,json=associatedTimeS,proto3" json:"associated_time_s,omitempty"`
	NoDataIdleS                  uint32                  `protobuf:"varint,45,opt,name=no_data_idle_s,json=noDataIdleS,proto3" json:"no_data_idle_s,omitempty"`
	ModeStr                      string                  `protobuf:"bytes,8,opt,name=mode_str,json=modeStr,proto3" json:"mode_str,omitempty"`
	Iface                        WifiClient_Interface    `protobuf:"varint,9,opt,name=iface,proto3,enum=SpaceX.API.Device.WifiClient_Interface" json:"iface,omitempty"`
	IfaceName                    string                  `protobuf:"bytes,26,opt,name=iface_name,json=ifaceName,proto3" json:"iface_name,omitempty"`
	Snr                          float32                 `protobuf:"fixed32,10,opt,name=snr,proto3" json:"snr,omitempty"`
	Psmode                       int32                   `protobuf:"varint,11,opt,name=psmode,proto3" json:"psmode,omitempty"`
	UpstreamMacAddress           string                  `protobuf:"bytes,13,opt,name=upstream_mac_address,json=upstreamMacAddress,proto3" json:"upstream_mac_address,omitempty"`
	Role                         WifiClient_Role         `protobuf:"varint,14,opt,name=role,proto3,enum=SpaceX.API.Device.WifiClient_Role" json:"role,omitempty"`
	DeviceId                     string                  `protobuf:"bytes,15,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SwqChecks                    uint32                  `protobuf:"varint,16,opt,name=swq_checks,json=swqChecks,proto3" json:"swq_checks,omitempty"`
	SwqChecksNonEmpty            uint32                  `protobuf:"varint,17,opt,name=swq_checks_non_empty,json=swqChecksNonEmpty,proto3" json:"swq_checks_non_empty,omitempty"`
	MibSteerState                uint32                  `protobuf:"varint,18,opt,name=mib_steer_state,json=mibSteerState,proto3" json:"mib_steer_state,omitempty"`
	MibSteerMethod               uint32                  `protobuf:"varint,19,opt,name=mib_steer_method,json=mibSteerMethod,proto3" json:"mib_steer_method,omitempty"`
	BtmRequests                  uint32                  `protobuf:"varint,20,opt,name=btm_requests,json=btmRequests,proto3" json:"btm_requests,omitempty"`
	BtmRequestsSuccess           uint32                  `protobuf:"varint,21,opt,name=btm_requests_success,json=btmRequestsSuccess,proto3" json:"btm_requests_success,omitempty"`
	SteerState                   uint32                  `protobuf:"varint,30,opt,name=steer_state,json=steerState,proto3" json:"steer_state,omitempty"`
	SteerReqSuccessLast_1H       uint32                  `protobuf:"varint,27,opt,name=steer_req_success_last_1h,json=steerReqSuccessLast1h,proto3" json:"steer_req_success_last_1h,omitempty"`
	SteerReqFailLast_1H          uint32                  `protobuf:"varint,28,opt,name=steer_req_fail_last_1h,json=steerReqFailLast1h,proto3" json:"steer_req_fail_last_1h,omitempty"`
	SteerReqFailAndDissocLast_1H uint32                  `protobuf:"varint,29,opt,name=steer_req_fail_and_dissoc_last_1h,json=steerReqFailAndDissocLast1h,proto3" json:"steer_req_fail_and_dissoc_last_1h,omitempty"`
	Dot11VSupport                bool                    `protobuf:"varint,23,opt,name=dot11v_support,json=dot11vSupport,proto3" json:"dot11v_support,omitempty"`
	HopsFromController           uint32                  `protobuf:"varint,32,opt,name=hops_from_controller,json=hopsFromController,proto3" json:"hops_from_controller,omitempty"`
	EstTxRateMbpsFromController  float32                 `protobuf:"fixed32,33,opt,name=est_tx_rate_mbps_from_controller,json=estTxRateMbpsFromController,proto3" json:"est_tx_rate_mbps_from_controller,omitempty"`
	EstRxRateMbpsFromController  float32                 `protobuf:"fixed32,34,opt,name=est_rx_rate_mbps_from_controller,json=estRxRateMbpsFromController,proto3" json:"est_rx_rate_mbps_from_controller,omitempty"`
	HardwareVersion              string                  `protobuf:"bytes,37,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	SoftwareVersion              string                  `protobuf:"bytes,38,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	ApiVersion                   uint32                  `protobuf:"varint,39,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	PingMetrics                  *WifiClient_PingMetrics `protobuf:"bytes,40,opt,name=ping_metrics,json=pingMetrics,proto3" json:"ping_metrics,omitempty"`
	Blocked                      bool                    `protobuf:"varint,42,opt,name=blocked,proto3" json:"blocked,omitempty"`
	ClientId                     uint32                  `protobuf:"varint,43,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	CaptiveClientId              string                  `protobuf:"bytes,53,opt,name=captive_client_id,json=captiveClientId,proto3" json:"captive_client_id,omitempty"`
	FqcodelInfo                  *WifiClient_FqcodelInfo `protobuf:"bytes,44,opt,name=fqcodel_info,json=fqcodelInfo,proto3" json:"fqcodel_info,omitempty"`
	Alerts                       *WifiClient_Alerts      `protobuf:"bytes,52,opt,name=alerts,proto3" json:"alerts,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *WifiClient) Reset() {
	*x = WifiClient{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient) ProtoMessage() {}

func (x *WifiClient) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient.ProtoReflect.Descriptor instead.
func (*WifiClient) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28}
}

func (x *WifiClient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WifiClient) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *WifiClient) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WifiClient) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *WifiClient) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *WifiClient) GetDhcpLeaseFound() bool {
	if x != nil {
		return x.DhcpLeaseFound
	}
	return false
}

func (x *WifiClient) GetDhcpLeaseActive() bool {
	if x != nil {
		return x.DhcpLeaseActive
	}
	return false
}

func (x *WifiClient) GetDhcpLeaseRenewed() bool {
	if x != nil {
		return x.DhcpLeaseRenewed
	}
	return false
}

func (x *WifiClient) GetSecondsUntilDhcpLeaseExpires() float32 {
	if x != nil {
		return x.SecondsUntilDhcpLeaseExpires
	}
	return 0
}

func (x *WifiClient) GetIpv6Addresses() []string {
	if x != nil {
		return x.Ipv6Addresses
	}
	return nil
}

func (x *WifiClient) GetSignalStrength() float32 {
	if x != nil {
		return x.SignalStrength
	}
	return 0
}

func (x *WifiClient) GetChannelWidth() uint32 {
	if x != nil {
		return x.ChannelWidth
	}
	return 0
}

func (x *WifiClient) GetRxStats() *WifiClient_RxStats {
	if x != nil {
		return x.RxStats
	}
	return nil
}

func (x *WifiClient) GetRxStatsValid() bool {
	if x != nil {
		return x.RxStatsValid
	}
	return false
}

func (x *WifiClient) GetTxStats() *WifiClient_TxStats {
	if x != nil {
		return x.TxStats
	}
	return nil
}

func (x *WifiClient) GetTxStatsValid() bool {
	if x != nil {
		return x.TxStatsValid
	}
	return false
}

func (x *WifiClient) GetAssociatedTimeS() uint32 {
	if x != nil {
		return x.AssociatedTimeS
	}
	return 0
}

func (x *WifiClient) GetNoDataIdleS() uint32 {
	if x != nil {
		return x.NoDataIdleS
	}
	return 0
}

func (x *WifiClient) GetModeStr() string {
	if x != nil {
		return x.ModeStr
	}
	return ""
}

func (x *WifiClient) GetIface() WifiClient_Interface {
	if x != nil {
		return x.Iface
	}
	return WifiClient_UNKNOWN
}

func (x *WifiClient) GetIfaceName() string {
	if x != nil {
		return x.IfaceName
	}
	return ""
}

func (x *WifiClient) GetSnr() float32 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *WifiClient) GetPsmode() int32 {
	if x != nil {
		return x.Psmode
	}
	return 0
}

func (x *WifiClient) GetUpstreamMacAddress() string {
	if x != nil {
		return x.UpstreamMacAddress
	}
	return ""
}

func (x *WifiClient) GetRole() WifiClient_Role {
	if x != nil {
		return x.Role
	}
	return WifiClient_ROLE_UNKNOWN
}

func (x *WifiClient) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WifiClient) GetSwqChecks() uint32 {
	if x != nil {
		return x.SwqChecks
	}
	return 0
}

func (x *WifiClient) GetSwqChecksNonEmpty() uint32 {
	if x != nil {
		return x.SwqChecksNonEmpty
	}
	return 0
}

func (x *WifiClient) GetMibSteerState() uint32 {
	if x != nil {
		return x.MibSteerState
	}
	return 0
}

func (x *WifiClient) GetMibSteerMethod() uint32 {
	if x != nil {
		return x.MibSteerMethod
	}
	return 0
}

func (x *WifiClient) GetBtmRequests() uint32 {
	if x != nil {
		return x.BtmRequests
	}
	return 0
}

func (x *WifiClient) GetBtmRequestsSuccess() uint32 {
	if x != nil {
		return x.BtmRequestsSuccess
	}
	return 0
}

func (x *WifiClient) GetSteerState() uint32 {
	if x != nil {
		return x.SteerState
	}
	return 0
}

func (x *WifiClient) GetSteerReqSuccessLast_1H() uint32 {
	if x != nil {
		return x.SteerReqSuccessLast_1H
	}
	return 0
}

func (x *WifiClient) GetSteerReqFailLast_1H() uint32 {
	if x != nil {
		return x.SteerReqFailLast_1H
	}
	return 0
}

func (x *WifiClient) GetSteerReqFailAndDissocLast_1H() uint32 {
	if x != nil {
		return x.SteerReqFailAndDissocLast_1H
	}
	return 0
}

func (x *WifiClient) GetDot11VSupport() bool {
	if x != nil {
		return x.Dot11VSupport
	}
	return false
}

func (x *WifiClient) GetHopsFromController() uint32 {
	if x != nil {
		return x.HopsFromController
	}
	return 0
}

func (x *WifiClient) GetEstTxRateMbpsFromController() float32 {
	if x != nil {
		return x.EstTxRateMbpsFromController
	}
	return 0
}

func (x *WifiClient) GetEstRxRateMbpsFromController() float32 {
	if x != nil {
		return x.EstRxRateMbpsFromController
	}
	return 0
}

func (x *WifiClient) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

func (x *WifiClient) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *WifiClient) GetApiVersion() uint32 {
	if x != nil {
		return x.ApiVersion
	}
	return 0
}

func (x *WifiClient) GetPingMetrics() *WifiClient_PingMetrics {
	if x != nil {
		return x.PingMetrics
	}
	return nil
}

func (x *WifiClient) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *WifiClient) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *WifiClient) GetCaptiveClientId() string {
	if x != nil {
		return x.CaptiveClientId
	}
	return ""
}

func (x *WifiClient) GetFqcodelInfo() *WifiClient_FqcodelInfo {
	if x != nil {
		return x.FqcodelInfo
	}
	return nil
}

func (x *WifiClient) GetAlerts() *WifiClient_Alerts {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type WifiSetupRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Skip            bool                   `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	NetworkName     string                 `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	NetworkPassword string                 `protobuf:"bytes,3,opt,name=network_password,json=networkPassword,proto3" json:"network_password,omitempty"`
	Bypass          bool                   `protobuf:"varint,4,opt,name=bypass,proto3" json:"bypass,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WifiSetupRequest) Reset() {
	*x = WifiSetupRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetupRequest) ProtoMessage() {}

func (x *WifiSetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetupRequest.ProtoReflect.Descriptor instead.
func (*WifiSetupRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{29}
}

func (x *WifiSetupRequest) GetSkip() bool {
	if x != nil {
		return x.Skip
	}
	return false
}

func (x *WifiSetupRequest) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *WifiSetupRequest) GetNetworkPassword() string {
	if x != nil {
		return x.NetworkPassword
	}
	return ""
}

func (x *WifiSetupRequest) GetBypass() bool {
	if x != nil {
		return x.Bypass
	}
	return false
}

type WifiSetupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSetupResponse) Reset() {
	*x = WifiSetupResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetupResponse) ProtoMessage() {}

func (x *WifiSetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetupResponse.ProtoReflect.Descriptor instead.
func (*WifiSetupResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{30}
}

type WifiBandStatus struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ChanBusyTimeFraction float32                `protobuf:"fixed32,1,opt,name=chan_busy_time_fraction,json=chanBusyTimeFraction,proto3" json:"chan_busy_time_fraction,omitempty"`
	TxAirTimeFraction    float32                `protobuf:"fixed32,2,opt,name=tx_air_time_fraction,json=txAirTimeFraction,proto3" json:"tx_air_time_fraction,omitempty"`
	RxAirTimeFraction    float32                `protobuf:"fixed32,3,opt,name=rx_air_time_fraction,json=rxAirTimeFraction,proto3" json:"rx_air_time_fraction,omitempty"`
	ObssAirTimeFraction  float32                `protobuf:"fixed32,4,opt,name=obss_air_time_fraction,json=obssAirTimeFraction,proto3" json:"obss_air_time_fraction,omitempty"`
	EdccaAirTimeFraction float32                `protobuf:"fixed32,5,opt,name=edcca_air_time_fraction,json=edccaAirTimeFraction,proto3" json:"edcca_air_time_fraction,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *WifiBandStatus) Reset() {
	*x = WifiBandStatus{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiBandStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiBandStatus) ProtoMessage() {}

func (x *WifiBandStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiBandStatus.ProtoReflect.Descriptor instead.
func (*WifiBandStatus) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{31}
}

func (x *WifiBandStatus) GetChanBusyTimeFraction() float32 {
	if x != nil {
		return x.ChanBusyTimeFraction
	}
	return 0
}

func (x *WifiBandStatus) GetTxAirTimeFraction() float32 {
	if x != nil {
		return x.TxAirTimeFraction
	}
	return 0
}

func (x *WifiBandStatus) GetRxAirTimeFraction() float32 {
	if x != nil {
		return x.RxAirTimeFraction
	}
	return 0
}

func (x *WifiBandStatus) GetObssAirTimeFraction() float32 {
	if x != nil {
		return x.ObssAirTimeFraction
	}
	return 0
}

func (x *WifiBandStatus) GetEdccaAirTimeFraction() float32 {
	if x != nil {
		return x.EdccaAirTimeFraction
	}
	return 0
}

type WifiAlerts struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	ThermalThrottle           bool                   `protobuf:"varint,1,opt,name=thermal_throttle,json=thermalThrottle,proto3" json:"thermal_throttle,omitempty"`
	InstallPending            bool                   `protobuf:"varint,2,opt,name=install_pending,json=installPending,proto3" json:"install_pending,omitempty"`
	FreshlyFused              bool                   `protobuf:"varint,3,opt,name=freshly_fused,json=freshlyFused,proto3" json:"freshly_fused,omitempty"`
	LanEthSlowLink_10         bool                   `protobuf:"varint,4,opt,name=lan_eth_slow_link_10,json=lanEthSlowLink10,proto3" json:"lan_eth_slow_link_10,omitempty"`
	LanEthSlowLink_100        bool                   `protobuf:"varint,5,opt,name=lan_eth_slow_link_100,json=lanEthSlowLink100,proto3" json:"lan_eth_slow_link_100,omitempty"`
	HighCablePingDropRate     bool                   `protobuf:"varint,21,opt,name=high_cable_ping_drop_rate,json=highCablePingDropRate,proto3" json:"high_cable_ping_drop_rate,omitempty"`
	WanEthPoorConnection      bool                   `protobuf:"varint,10,opt,name=wan_eth_poor_connection,json=wanEthPoorConnection,proto3" json:"wan_eth_poor_connection,omitempty"`
	MeshTopologyChangingOften bool                   `protobuf:"varint,11,opt,name=mesh_topology_changing_often,json=meshTopologyChangingOften,proto3" json:"mesh_topology_changing_often,omitempty"`
	MeshUnreliableBackhaul    bool                   `protobuf:"varint,12,opt,name=mesh_unreliable_backhaul,json=meshUnreliableBackhaul,proto3" json:"mesh_unreliable_backhaul,omitempty"`
	RadiusMissingProcess      bool                   `protobuf:"varint,13,opt,name=radius_missing_process,json=radiusMissingProcess,proto3" json:"radius_missing_process,omitempty"`
	EthSwitchError            bool                   `protobuf:"varint,14,opt,name=eth_switch_error,json=ethSwitchError,proto3" json:"eth_switch_error,omitempty"`
	PoeOnDishUnreachable      bool                   `protobuf:"varint,15,opt,name=poe_on_dish_unreachable,json=poeOnDishUnreachable,proto3" json:"poe_on_dish_unreachable,omitempty"`
	PoeFuseBlown              bool                   `protobuf:"varint,16,opt,name=poe_fuse_blown,json=poeFuseBlown,proto3" json:"poe_fuse_blown,omitempty"`
	PoeRouterOvercurrent      bool                   `protobuf:"varint,17,opt,name=poe_router_overcurrent,json=poeRouterOvercurrent,proto3" json:"poe_router_overcurrent,omitempty"`
	PoeOffCurrentNominal      bool                   `protobuf:"varint,18,opt,name=poe_off_current_nominal,json=poeOffCurrentNominal,proto3" json:"poe_off_current_nominal,omitempty"`
	PoeVinOvervoltage         bool                   `protobuf:"varint,19,opt,name=poe_vin_overvoltage,json=poeVinOvervoltage,proto3" json:"poe_vin_overvoltage,omitempty"`
	PoeVinUndervoltage        bool                   `protobuf:"varint,20,opt,name=poe_vin_undervoltage,json=poeVinUndervoltage,proto3" json:"poe_vin_undervoltage,omitempty"`
	SandboxDisabled           bool                   `protobuf:"varint,22,opt,name=sandbox_disabled,json=sandboxDisabled,proto3" json:"sandbox_disabled,omitempty"`
	OnlyOverflightBlocked     bool                   `protobuf:"varint,23,opt,name=only_overflight_blocked,json=onlyOverflightBlocked,proto3" json:"only_overflight_blocked,omitempty"`
	OfflineNetworksDisabled   bool                   `protobuf:"varint,24,opt,name=offline_networks_disabled,json=offlineNetworksDisabled,proto3" json:"offline_networks_disabled,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *WifiAlerts) Reset() {
	*x = WifiAlerts{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiAlerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiAlerts) ProtoMessage() {}

func (x *WifiAlerts) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiAlerts.ProtoReflect.Descriptor instead.
func (*WifiAlerts) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{32}
}

func (x *WifiAlerts) GetThermalThrottle() bool {
	if x != nil {
		return x.ThermalThrottle
	}
	return false
}

func (x *WifiAlerts) GetInstallPending() bool {
	if x != nil {
		return x.InstallPending
	}
	return false
}

func (x *WifiAlerts) GetFreshlyFused() bool {
	if x != nil {
		return x.FreshlyFused
	}
	return false
}

func (x *WifiAlerts) GetLanEthSlowLink_10() bool {
	if x != nil {
		return x.LanEthSlowLink_10
	}
	return false
}

func (x *WifiAlerts) GetLanEthSlowLink_100() bool {
	if x != nil {
		return x.LanEthSlowLink_100
	}
	return false
}

func (x *WifiAlerts) GetHighCablePingDropRate() bool {
	if x != nil {
		return x.HighCablePingDropRate
	}
	return false
}

func (x *WifiAlerts) GetWanEthPoorConnection() bool {
	if x != nil {
		return x.WanEthPoorConnection
	}
	return false
}

func (x *WifiAlerts) GetMeshTopologyChangingOften() bool {
	if x != nil {
		return x.MeshTopologyChangingOften
	}
	return false
}

func (x *WifiAlerts) GetMeshUnreliableBackhaul() bool {
	if x != nil {
		return x.MeshUnreliableBackhaul
	}
	return false
}

func (x *WifiAlerts) GetRadiusMissingProcess() bool {
	if x != nil {
		return x.RadiusMissingProcess
	}
	return false
}

func (x *WifiAlerts) GetEthSwitchError() bool {
	if x != nil {
		return x.EthSwitchError
	}
	return false
}

func (x *WifiAlerts) GetPoeOnDishUnreachable() bool {
	if x != nil {
		return x.PoeOnDishUnreachable
	}
	return false
}

func (x *WifiAlerts) GetPoeFuseBlown() bool {
	if x != nil {
		return x.PoeFuseBlown
	}
	return false
}

func (x *WifiAlerts) GetPoeRouterOvercurrent() bool {
	if x != nil {
		return x.PoeRouterOvercurrent
	}
	return false
}

func (x *WifiAlerts) GetPoeOffCurrentNominal() bool {
	if x != nil {
		return x.PoeOffCurrentNominal
	}
	return false
}

func (x *WifiAlerts) GetPoeVinOvervoltage() bool {
	if x != nil {
		return x.PoeVinOvervoltage
	}
	return false
}

func (x *WifiAlerts) GetPoeVinUndervoltage() bool {
	if x != nil {
		return x.PoeVinUndervoltage
	}
	return false
}

func (x *WifiAlerts) GetSandboxDisabled() bool {
	if x != nil {
		return x.SandboxDisabled
	}
	return false
}

func (x *WifiAlerts) GetOnlyOverflightBlocked() bool {
	if x != nil {
		return x.OnlyOverflightBlocked
	}
	return false
}

func (x *WifiAlerts) GetOfflineNetworksDisabled() bool {
	if x != nil {
		return x.OfflineNetworksDisabled
	}
	return false
}

type WifiGetStatusResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	DeviceInfo  *DeviceInfo            `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	DeviceState *DeviceState           `protobuf:"bytes,4,opt,name=device_state,json=deviceState,proto3" json:"device_state,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	CaptivePortalEnabled   bool     `protobuf:"varint,1,opt,name=captive_portal_enabled,json=captivePortalEnabled,proto3" json:"captive_portal_enabled,omitempty"`
	Ipv4WanAddress         string   `protobuf:"bytes,1003,opt,name=ipv4_wan_address,json=ipv4WanAddress,proto3" json:"ipv4_wan_address,omitempty"`
	Ipv6WanAddresses       []string `protobuf:"bytes,1017,rep,name=ipv6_wan_addresses,json=ipv6WanAddresses,proto3" json:"ipv6_wan_addresses,omitempty"`
	HopsFromController     uint32   `protobuf:"varint,1034,opt,name=hops_from_controller,json=hopsFromController,proto3" json:"hops_from_controller,omitempty"`
	PingDropRate           float32  `protobuf:"fixed32,1004,opt,name=ping_drop_rate,json=pingDropRate,proto3" json:"ping_drop_rate,omitempty"`
	PingDropRate_5M        float32  `protobuf:"fixed32,1021,opt,name=ping_drop_rate_5m,json=pingDropRate5m,proto3" json:"ping_drop_rate_5m,omitempty"`
	PingLatencyMs          float32  `protobuf:"fixed32,1005,opt,name=ping_latency_ms,json=pingLatencyMs,proto3" json:"ping_latency_ms,omitempty"`
	DishPingDropRate       float32  `protobuf:"fixed32,1012,opt,name=dish_ping_drop_rate,json=dishPingDropRate,proto3" json:"dish_ping_drop_rate,omitempty"`
	DishPingDropRate_5M    float32  `protobuf:"fixed32,1018,opt,name=dish_ping_drop_rate_5m,json=dishPingDropRate5m,proto3" json:"dish_ping_drop_rate_5m,omitempty"`
	DishPingLatencyMs      float32  `protobuf:"fixed32,1013,opt,name=dish_ping_latency_ms,json=dishPingLatencyMs,proto3" json:"dish_ping_latency_ms,omitempty"`
	PopPingDropRate        float32  `protobuf:"fixed32,1014,opt,name=pop_ping_drop_rate,json=popPingDropRate,proto3" json:"pop_ping_drop_rate,omitempty"`
	PopPingDropRate_5M     float32  `protobuf:"fixed32,1020,opt,name=pop_ping_drop_rate_5m,json=popPingDropRate5m,proto3" json:"pop_ping_drop_rate_5m,omitempty"`
	PopPingLatencyMs       float32  `protobuf:"fixed32,1015,opt,name=pop_ping_latency_ms,json=popPingLatencyMs,proto3" json:"pop_ping_latency_ms,omitempty"`
	PopIpv6PingDropRate    float32  `protobuf:"fixed32,1027,opt,name=pop_ipv6_ping_drop_rate,json=popIpv6PingDropRate,proto3" json:"pop_ipv6_ping_drop_rate,omitempty"`
	PopIpv6PingDropRate_5M float32  `protobuf:"fixed32,1028,opt,name=pop_ipv6_ping_drop_rate_5m,json=popIpv6PingDropRate5m,proto3" json:"pop_ipv6_ping_drop_rate_5m,omitempty"`
	PopIpv6PingLatencyMs   float32  `protobuf:"fixed32,1029,opt,name=pop_ipv6_ping_latency_ms,json=popIpv6PingLatencyMs,proto3" json:"pop_ipv6_ping_latency_ms,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	Rf_2GhzStatus *WifiBandStatus `protobuf:"bytes,1008,opt,name=rf_2ghz_status,json=rf2ghzStatus,proto3" json:"rf_2ghz_status,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	Rf_5GhzStatus                 *WifiBandStatus           `protobuf:"bytes,1009,opt,name=rf_5ghz_status,json=rf5ghzStatus,proto3" json:"rf_5ghz_status,omitempty"`
	Alerts                        *WifiAlerts               `protobuf:"bytes,1010,opt,name=alerts,proto3" json:"alerts,omitempty"`
	IsAviation                    bool                      `protobuf:"varint,1011,opt,name=is_aviation,json=isAviation,proto3" json:"is_aviation,omitempty"`
	Config                        *WifiConfig               `protobuf:"bytes,2000,opt,name=config,proto3" json:"config,omitempty"`
	Clients                       []*WifiClient             `protobuf:"bytes,3000,rep,name=clients,proto3" json:"clients,omitempty"`
	HasClientIndex                bool                      `protobuf:"varint,3001,opt,name=has_client_index,json=hasClientIndex,proto3" json:"has_client_index,omitempty"`
	ClientIndex                   int32                     `protobuf:"varint,3002,opt,name=client_index,json=clientIndex,proto3" json:"client_index,omitempty"`
	IsAviationConformed           bool                      `protobuf:"varint,1016,opt,name=is_aviation_conformed,json=isAviationConformed,proto3" json:"is_aviation_conformed,omitempty"`
	RadiusStats                   *RadiusStatsMap           `protobuf:"bytes,3003,opt,name=radius_stats,json=radiusStats,proto3" json:"radius_stats,omitempty"`
	DhcpServers                   []*DhcpServer             `protobuf:"bytes,1019,rep,name=dhcp_servers,json=dhcpServers,proto3" json:"dhcp_servers,omitempty"`
	PoeStats                      *PoeStats                 `protobuf:"bytes,1022,opt,name=poe_stats,json=poeStats,proto3" json:"poe_stats,omitempty"`
	DishId                        string                    `protobuf:"bytes,1023,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
	DishDisablementCode           network.UtDisablementCode `protobuf:"varint,1031,opt,name=dish_disablement_code,json=dishDisablementCode,proto3,enum=SpaceX.API.Satellites.Network.UtDisablementCode" json:"dish_disablement_code,omitempty"`
	UtcNs                         int64                     `protobuf:"varint,1024,opt,name=utc_ns,json=utcNs,proto3" json:"utc_ns,omitempty"`
	SoftwareUpdateStats           *WifiSoftwareUpdateStats  `protobuf:"bytes,1025,opt,name=software_update_stats,json=softwareUpdateStats,proto3" json:"software_update_stats,omitempty"`
	SetupRequirement              *WifiSetupRequirement     `protobuf:"bytes,1026,opt,name=setup_requirement,json=setupRequirement,proto3" json:"setup_requirement,omitempty"`
	SecsSinceLastPublicIpv4Change float32                   `protobuf:"fixed32,1030,opt,name=secs_since_last_public_ipv4_change,json=secsSinceLastPublicIpv4Change,proto3" json:"secs_since_last_public_ipv4_change,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *WifiGetStatusResponse) Reset() {
	*x = WifiGetStatusResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetStatusResponse) ProtoMessage() {}

func (x *WifiGetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetStatusResponse.ProtoReflect.Descriptor instead.
func (*WifiGetStatusResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{33}
}

func (x *WifiGetStatusResponse) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *WifiGetStatusResponse) GetDeviceState() *DeviceState {
	if x != nil {
		return x.DeviceState
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *WifiGetStatusResponse) GetCaptivePortalEnabled() bool {
	if x != nil {
		return x.CaptivePortalEnabled
	}
	return false
}

func (x *WifiGetStatusResponse) GetIpv4WanAddress() string {
	if x != nil {
		return x.Ipv4WanAddress
	}
	return ""
}

func (x *WifiGetStatusResponse) GetIpv6WanAddresses() []string {
	if x != nil {
		return x.Ipv6WanAddresses
	}
	return nil
}

func (x *WifiGetStatusResponse) GetHopsFromController() uint32 {
	if x != nil {
		return x.HopsFromController
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPingDropRate() float32 {
	if x != nil {
		return x.PingDropRate
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPingDropRate_5M() float32 {
	if x != nil {
		return x.PingDropRate_5M
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPingLatencyMs() float32 {
	if x != nil {
		return x.PingLatencyMs
	}
	return 0
}

func (x *WifiGetStatusResponse) GetDishPingDropRate() float32 {
	if x != nil {
		return x.DishPingDropRate
	}
	return 0
}

func (x *WifiGetStatusResponse) GetDishPingDropRate_5M() float32 {
	if x != nil {
		return x.DishPingDropRate_5M
	}
	return 0
}

func (x *WifiGetStatusResponse) GetDishPingLatencyMs() float32 {
	if x != nil {
		return x.DishPingLatencyMs
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPopPingDropRate() float32 {
	if x != nil {
		return x.PopPingDropRate
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPopPingDropRate_5M() float32 {
	if x != nil {
		return x.PopPingDropRate_5M
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPopPingLatencyMs() float32 {
	if x != nil {
		return x.PopPingLatencyMs
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPopIpv6PingDropRate() float32 {
	if x != nil {
		return x.PopIpv6PingDropRate
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPopIpv6PingDropRate_5M() float32 {
	if x != nil {
		return x.PopIpv6PingDropRate_5M
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPopIpv6PingLatencyMs() float32 {
	if x != nil {
		return x.PopIpv6PingLatencyMs
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *WifiGetStatusResponse) GetRf_2GhzStatus() *WifiBandStatus {
	if x != nil {
		return x.Rf_2GhzStatus
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *WifiGetStatusResponse) GetRf_5GhzStatus() *WifiBandStatus {
	if x != nil {
		return x.Rf_5GhzStatus
	}
	return nil
}

func (x *WifiGetStatusResponse) GetAlerts() *WifiAlerts {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *WifiGetStatusResponse) GetIsAviation() bool {
	if x != nil {
		return x.IsAviation
	}
	return false
}

func (x *WifiGetStatusResponse) GetConfig() *WifiConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *WifiGetStatusResponse) GetClients() []*WifiClient {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *WifiGetStatusResponse) GetHasClientIndex() bool {
	if x != nil {
		return x.HasClientIndex
	}
	return false
}

func (x *WifiGetStatusResponse) GetClientIndex() int32 {
	if x != nil {
		return x.ClientIndex
	}
	return 0
}

func (x *WifiGetStatusResponse) GetIsAviationConformed() bool {
	if x != nil {
		return x.IsAviationConformed
	}
	return false
}

func (x *WifiGetStatusResponse) GetRadiusStats() *RadiusStatsMap {
	if x != nil {
		return x.RadiusStats
	}
	return nil
}

func (x *WifiGetStatusResponse) GetDhcpServers() []*DhcpServer {
	if x != nil {
		return x.DhcpServers
	}
	return nil
}

func (x *WifiGetStatusResponse) GetPoeStats() *PoeStats {
	if x != nil {
		return x.PoeStats
	}
	return nil
}

func (x *WifiGetStatusResponse) GetDishId() string {
	if x != nil {
		return x.DishId
	}
	return ""
}

func (x *WifiGetStatusResponse) GetDishDisablementCode() network.UtDisablementCode {
	if x != nil {
		return x.DishDisablementCode
	}
	return network.UtDisablementCode(0)
}

func (x *WifiGetStatusResponse) GetUtcNs() int64 {
	if x != nil {
		return x.UtcNs
	}
	return 0
}

func (x *WifiGetStatusResponse) GetSoftwareUpdateStats() *WifiSoftwareUpdateStats {
	if x != nil {
		return x.SoftwareUpdateStats
	}
	return nil
}

func (x *WifiGetStatusResponse) GetSetupRequirement() *WifiSetupRequirement {
	if x != nil {
		return x.SetupRequirement
	}
	return nil
}

func (x *WifiGetStatusResponse) GetSecsSinceLastPublicIpv4Change() float32 {
	if x != nil {
		return x.SecsSinceLastPublicIpv4Change
	}
	return 0
}

type WifiAuthenticateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Challenge     *SignedData            `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiAuthenticateRequest) Reset() {
	*x = WifiAuthenticateRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiAuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiAuthenticateRequest) ProtoMessage() {}

func (x *WifiAuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiAuthenticateRequest.ProtoReflect.Descriptor instead.
func (*WifiAuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{34}
}

func (x *WifiAuthenticateRequest) GetChallenge() *SignedData {
	if x != nil {
		return x.Challenge
	}
	return nil
}

type WifiAuthenticateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wifi          *ChallengeResponse     `protobuf:"bytes,1,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Dish          *ChallengeResponse     `protobuf:"bytes,2,opt,name=dish,proto3" json:"dish,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiAuthenticateResponse) Reset() {
	*x = WifiAuthenticateResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiAuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiAuthenticateResponse) ProtoMessage() {}

func (x *WifiAuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiAuthenticateResponse.ProtoReflect.Descriptor instead.
func (*WifiAuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{35}
}

func (x *WifiAuthenticateResponse) GetWifi() *ChallengeResponse {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *WifiAuthenticateResponse) GetDish() *ChallengeResponse {
	if x != nil {
		return x.Dish
	}
	return nil
}

type WifiAccountBondingEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DishId          string                 `protobuf:"bytes,1,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
	IsRepeater      bool                   `protobuf:"varint,2,opt,name=is_repeater,json=isRepeater,proto3" json:"is_repeater,omitempty"`
	HardwareVersion string                 `protobuf:"bytes,3,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WifiAccountBondingEvent) Reset() {
	*x = WifiAccountBondingEvent{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiAccountBondingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiAccountBondingEvent) ProtoMessage() {}

func (x *WifiAccountBondingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiAccountBondingEvent.ProtoReflect.Descriptor instead.
func (*WifiAccountBondingEvent) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{36}
}

func (x *WifiAccountBondingEvent) GetDishId() string {
	if x != nil {
		return x.DishId
	}
	return ""
}

func (x *WifiAccountBondingEvent) GetIsRepeater() bool {
	if x != nil {
		return x.IsRepeater
	}
	return false
}

func (x *WifiAccountBondingEvent) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

type WifiNewPeerEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiNewPeerEvent) Reset() {
	*x = WifiNewPeerEvent{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiNewPeerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNewPeerEvent) ProtoMessage() {}

func (x *WifiNewPeerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNewPeerEvent.ProtoReflect.Descriptor instead.
func (*WifiNewPeerEvent) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{37}
}

func (x *WifiNewPeerEvent) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type PingMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	LatencyMeanMs    float32                `protobuf:"fixed32,1,opt,name=latency_mean_ms,json=latencyMeanMs,proto3" json:"latency_mean_ms,omitempty"`
	LatencyStddevMs  float32                `protobuf:"fixed32,2,opt,name=latency_stddev_ms,json=latencyStddevMs,proto3" json:"latency_stddev_ms,omitempty"`
	LatencyMeanMs_5M float32                `protobuf:"fixed32,3,opt,name=latency_mean_ms_5m,json=latencyMeanMs5m,proto3" json:"latency_mean_ms_5m,omitempty"`
	LatencyMeanMs_1H float32                `protobuf:"fixed32,4,opt,name=latency_mean_ms_1h,json=latencyMeanMs1h,proto3" json:"latency_mean_ms_1h,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	LatencyMeanMs_1D            float32 `protobuf:"fixed32,5,opt,name=latency_mean_ms_1d,json=latencyMeanMs1d,proto3" json:"latency_mean_ms_1d,omitempty"`
	DropRate                    float32 `protobuf:"fixed32,6,opt,name=drop_rate,json=dropRate,proto3" json:"drop_rate,omitempty"`
	DropRate_5M                 float32 `protobuf:"fixed32,7,opt,name=drop_rate_5m,json=dropRate5m,proto3" json:"drop_rate_5m,omitempty"`
	DropRate_1H                 float32 `protobuf:"fixed32,8,opt,name=drop_rate_1h,json=dropRate1h,proto3" json:"drop_rate_1h,omitempty"`
	DropRate_1D                 float32 `protobuf:"fixed32,9,opt,name=drop_rate_1d,json=dropRate1d,proto3" json:"drop_rate_1d,omitempty"`
	SecondsSinceLastSuccess     float32 `protobuf:"fixed32,10,opt,name=seconds_since_last_success,json=secondsSinceLastSuccess,proto3" json:"seconds_since_last_success,omitempty"`
	SecondsSinceLast_1SOutage   float32 `protobuf:"fixed32,11,opt,name=seconds_since_last_1s_outage,json=secondsSinceLast1sOutage,proto3" json:"seconds_since_last_1s_outage,omitempty"`
	SecondsSinceLast_2SOutage   float32 `protobuf:"fixed32,15,opt,name=seconds_since_last_2s_outage,json=secondsSinceLast2sOutage,proto3" json:"seconds_since_last_2s_outage,omitempty"`
	SecondsSinceLast_5SOutage   float32 `protobuf:"fixed32,12,opt,name=seconds_since_last_5s_outage,json=secondsSinceLast5sOutage,proto3" json:"seconds_since_last_5s_outage,omitempty"`
	SecondsSinceLast_15SOutage  float32 `protobuf:"fixed32,18,opt,name=seconds_since_last_15s_outage,json=secondsSinceLast15sOutage,proto3" json:"seconds_since_last_15s_outage,omitempty"`
	SecondsSinceLast_60SOutage  float32 `protobuf:"fixed32,19,opt,name=seconds_since_last_60s_outage,json=secondsSinceLast60sOutage,proto3" json:"seconds_since_last_60s_outage,omitempty"`
	SecondsSinceLast_300SOutage float32 `protobuf:"fixed32,20,opt,name=seconds_since_last_300s_outage,json=secondsSinceLast300sOutage,proto3" json:"seconds_since_last_300s_outage,omitempty"`
	HappyHours_1S_1D            float32 `protobuf:"fixed32,13,opt,name=happy_hours_1s_1d,json=happyHours1s1d,proto3" json:"happy_hours_1s_1d,omitempty"`
	HappyHours_2S_1D            float32 `protobuf:"fixed32,16,opt,name=happy_hours_2s_1d,json=happyHours2s1d,proto3" json:"happy_hours_2s_1d,omitempty"`
	HappyHours_5S_1D            float32 `protobuf:"fixed32,14,opt,name=happy_hours_5s_1d,json=happyHours5s1d,proto3" json:"happy_hours_5s_1d,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *PingMetrics) Reset() {
	*x = PingMetrics{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMetrics) ProtoMessage() {}

func (x *PingMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMetrics.ProtoReflect.Descriptor instead.
func (*PingMetrics) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{38}
}

func (x *PingMetrics) GetLatencyMeanMs() float32 {
	if x != nil {
		return x.LatencyMeanMs
	}
	return 0
}

func (x *PingMetrics) GetLatencyStddevMs() float32 {
	if x != nil {
		return x.LatencyStddevMs
	}
	return 0
}

func (x *PingMetrics) GetLatencyMeanMs_5M() float32 {
	if x != nil {
		return x.LatencyMeanMs_5M
	}
	return 0
}

func (x *PingMetrics) GetLatencyMeanMs_1H() float32 {
	if x != nil {
		return x.LatencyMeanMs_1H
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *PingMetrics) GetLatencyMeanMs_1D() float32 {
	if x != nil {
		return x.LatencyMeanMs_1D
	}
	return 0
}

func (x *PingMetrics) GetDropRate() float32 {
	if x != nil {
		return x.DropRate
	}
	return 0
}

func (x *PingMetrics) GetDropRate_5M() float32 {
	if x != nil {
		return x.DropRate_5M
	}
	return 0
}

func (x *PingMetrics) GetDropRate_1H() float32 {
	if x != nil {
		return x.DropRate_1H
	}
	return 0
}

func (x *PingMetrics) GetDropRate_1D() float32 {
	if x != nil {
		return x.DropRate_1D
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLastSuccess() float32 {
	if x != nil {
		return x.SecondsSinceLastSuccess
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_1SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_1SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_2SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_2SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_5SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_5SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_15SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_15SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_60SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_60SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_300SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_300SOutage
	}
	return 0
}

func (x *PingMetrics) GetHappyHours_1S_1D() float32 {
	if x != nil {
		return x.HappyHours_1S_1D
	}
	return 0
}

func (x *PingMetrics) GetHappyHours_2S_1D() float32 {
	if x != nil {
		return x.HappyHours_2S_1D
	}
	return 0
}

func (x *PingMetrics) GetHappyHours_5S_1D() float32 {
	if x != nil {
		return x.HappyHours_5S_1D
	}
	return 0
}

type WifiGetPingMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetPingMetricsRequest) Reset() {
	*x = WifiGetPingMetricsRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetPingMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetPingMetricsRequest) ProtoMessage() {}

func (x *WifiGetPingMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetPingMetricsRequest.ProtoReflect.Descriptor instead.
func (*WifiGetPingMetricsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{39}
}

type WifiGetPingMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Internet      *PingMetrics           `protobuf:"bytes,1,opt,name=internet,proto3" json:"internet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetPingMetricsResponse) Reset() {
	*x = WifiGetPingMetricsResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetPingMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetPingMetricsResponse) ProtoMessage() {}

func (x *WifiGetPingMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetPingMetricsResponse.ProtoReflect.Descriptor instead.
func (*WifiGetPingMetricsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{40}
}

func (x *WifiGetPingMetricsResponse) GetInternet() *PingMetrics {
	if x != nil {
		return x.Internet
	}
	return nil
}

type WifiNetwork struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Band              WifiNetwork_Band       `protobuf:"varint,1,opt,name=band,proto3,enum=SpaceX.API.Device.WifiNetwork_Band" json:"band,omitempty"`
	Ssid              string                 `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Channel           uint32                 `protobuf:"varint,3,opt,name=channel,proto3" json:"channel,omitempty"`
	EncryptionTypeStr string                 `protobuf:"bytes,4,opt,name=encryption_type_str,json=encryptionTypeStr,proto3" json:"encryption_type_str,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *WifiNetwork) Reset() {
	*x = WifiNetwork{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNetwork) ProtoMessage() {}

func (x *WifiNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNetwork.ProtoReflect.Descriptor instead.
func (*WifiNetwork) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{41}
}

func (x *WifiNetwork) GetBand() WifiNetwork_Band {
	if x != nil {
		return x.Band
	}
	return WifiNetwork_WIFI_UNKNOWN
}

func (x *WifiNetwork) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiNetwork) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *WifiNetwork) GetEncryptionTypeStr() string {
	if x != nil {
		return x.EncryptionTypeStr
	}
	return ""
}

type WifiPersistentStats struct {
	state                            protoimpl.MessageState     `protogen:"open.v1"`
	FactoryResetButton               *WifiPersistentStats_Event `protobuf:"bytes,1,opt,name=factory_reset_button,json=factoryResetButton,proto3" json:"factory_reset_button,omitempty"`
	FactoryResetPlugUnplug           *WifiPersistentStats_Event `protobuf:"bytes,2,opt,name=factory_reset_plug_unplug,json=factoryResetPlugUnplug,proto3" json:"factory_reset_plug_unplug,omitempty"`
	FactoryResetCommand              *WifiPersistentStats_Event `protobuf:"bytes,3,opt,name=factory_reset_command,json=factoryResetCommand,proto3" json:"factory_reset_command,omitempty"`
	FactoryResetFailedLoadWifiConfig *WifiPersistentStats_Event `protobuf:"bytes,4,opt,name=factory_reset_failed_load_wifi_config,json=factoryResetFailedLoadWifiConfig,proto3" json:"factory_reset_failed_load_wifi_config,omitempty"`
	RebootFromSoftwareUpdate         *WifiPersistentStats_Event `protobuf:"bytes,5,opt,name=reboot_from_software_update,json=rebootFromSoftwareUpdate,proto3" json:"reboot_from_software_update,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *WifiPersistentStats) Reset() {
	*x = WifiPersistentStats{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiPersistentStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiPersistentStats) ProtoMessage() {}

func (x *WifiPersistentStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiPersistentStats.ProtoReflect.Descriptor instead.
func (*WifiPersistentStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{42}
}

func (x *WifiPersistentStats) GetFactoryResetButton() *WifiPersistentStats_Event {
	if x != nil {
		return x.FactoryResetButton
	}
	return nil
}

func (x *WifiPersistentStats) GetFactoryResetPlugUnplug() *WifiPersistentStats_Event {
	if x != nil {
		return x.FactoryResetPlugUnplug
	}
	return nil
}

func (x *WifiPersistentStats) GetFactoryResetCommand() *WifiPersistentStats_Event {
	if x != nil {
		return x.FactoryResetCommand
	}
	return nil
}

func (x *WifiPersistentStats) GetFactoryResetFailedLoadWifiConfig() *WifiPersistentStats_Event {
	if x != nil {
		return x.FactoryResetFailedLoadWifiConfig
	}
	return nil
}

func (x *WifiPersistentStats) GetRebootFromSoftwareUpdate() *WifiPersistentStats_Event {
	if x != nil {
		return x.RebootFromSoftwareUpdate
	}
	return nil
}

type WifiGetPersistentStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *WifiPersistentStats   `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetPersistentStatsResponse) Reset() {
	*x = WifiGetPersistentStatsResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetPersistentStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetPersistentStatsResponse) ProtoMessage() {}

func (x *WifiGetPersistentStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetPersistentStatsResponse.ProtoReflect.Descriptor instead.
func (*WifiGetPersistentStatsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{43}
}

func (x *WifiGetPersistentStatsResponse) GetStats() *WifiPersistentStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type RadioStats struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Band          WifiConfig_Band           `protobuf:"varint,1,opt,name=band,proto3,enum=SpaceX.API.Device.WifiConfig_Band" json:"band,omitempty"`
	RxStats       *NetworkInterface_RxStats `protobuf:"bytes,2,opt,name=rx_stats,json=rxStats,proto3" json:"rx_stats,omitempty"`
	TxStats       *NetworkInterface_TxStats `protobuf:"bytes,3,opt,name=tx_stats,json=txStats,proto3" json:"tx_stats,omitempty"`
	ThermalStatus *RadioStats_ThermalStatus `protobuf:"bytes,4,opt,name=thermal_status,json=thermalStatus,proto3" json:"thermal_status,omitempty"`
	AntennaStatus *RadioStats_AntennaStatus `protobuf:"bytes,5,opt,name=antenna_status,json=antennaStatus,proto3" json:"antenna_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RadioStats) Reset() {
	*x = RadioStats{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RadioStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioStats) ProtoMessage() {}

func (x *RadioStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioStats.ProtoReflect.Descriptor instead.
func (*RadioStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{44}
}

func (x *RadioStats) GetBand() WifiConfig_Band {
	if x != nil {
		return x.Band
	}
	return WifiConfig_RF_UNKNOWN
}

func (x *RadioStats) GetRxStats() *NetworkInterface_RxStats {
	if x != nil {
		return x.RxStats
	}
	return nil
}

func (x *RadioStats) GetTxStats() *NetworkInterface_TxStats {
	if x != nil {
		return x.TxStats
	}
	return nil
}

func (x *RadioStats) GetThermalStatus() *RadioStats_ThermalStatus {
	if x != nil {
		return x.ThermalStatus
	}
	return nil
}

func (x *RadioStats) GetAntennaStatus() *RadioStats_AntennaStatus {
	if x != nil {
		return x.AntennaStatus
	}
	return nil
}

type StarlinkRoutersHourlyMetricsV2 struct {
	state                                   protoimpl.MessageState  `protogen:"open.v1"`
	Id                                      *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TimestampDate                           *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=timestamp_date,json=timestampDate,proto3" json:"timestamp_date,omitempty"`
	TimestampHour                           *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=timestamp_hour,json=timestampHour,proto3" json:"timestamp_hour,omitempty"`
	Timestamp                               *common.TimestampInfo   `protobuf:"bytes,10000,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SysHwGen                                *wrapperspb.UInt32Value `protobuf:"bytes,4,opt,name=sys_hw_gen,json=sysHwGen,proto3" json:"sys_hw_gen,omitempty"`
	SysSw                                   *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=sys_sw,json=sysSw,proto3" json:"sys_sw,omitempty"`
	SysCountry                              *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=sys_country,json=sysCountry,proto3" json:"sys_country,omitempty"`
	SysIsDev                                *wrapperspb.BoolValue   `protobuf:"bytes,7,opt,name=sys_is_dev,json=sysIsDev,proto3" json:"sys_is_dev,omitempty"`
	SysAllocFds                             *wrapperspb.UInt32Value `protobuf:"bytes,8,opt,name=sys_alloc_fds,json=sysAllocFds,proto3" json:"sys_alloc_fds,omitempty"`
	SysCpuUsage                             *wrapperspb.FloatValue  `protobuf:"bytes,9,opt,name=sys_cpu_usage,json=sysCpuUsage,proto3" json:"sys_cpu_usage,omitempty"`
	SysMemFreeKb                            *wrapperspb.FloatValue  `protobuf:"bytes,10,opt,name=sys_mem_free_kb,json=sysMemFreeKb,proto3" json:"sys_mem_free_kb,omitempty"`
	SysBootcount                            *wrapperspb.Int32Value  `protobuf:"bytes,11,opt,name=sys_bootcount,json=sysBootcount,proto3" json:"sys_bootcount,omitempty"`
	SysPartitionsEqual                      *wrapperspb.BoolValue   `protobuf:"bytes,12,opt,name=sys_partitions_equal,json=sysPartitionsEqual,proto3" json:"sys_partitions_equal,omitempty"`
	SysUptimeSeconds                        *wrapperspb.UInt32Value `protobuf:"bytes,13,opt,name=sys_uptime_seconds,json=sysUptimeSeconds,proto3" json:"sys_uptime_seconds,omitempty"`
	SysAntiRollbackVersion                  *wrapperspb.Int32Value  `protobuf:"bytes,14,opt,name=sys_anti_rollback_version,json=sysAntiRollbackVersion,proto3" json:"sys_anti_rollback_version,omitempty"`
	SysIsWitl                               *wrapperspb.BoolValue   `protobuf:"bytes,15,opt,name=sys_is_witl,json=sysIsWitl,proto3" json:"sys_is_witl,omitempty"`
	SysIsAviationConformed                  *wrapperspb.BoolValue   `protobuf:"bytes,16,opt,name=sys_is_aviation_conformed,json=sysIsAviationConformed,proto3" json:"sys_is_aviation_conformed,omitempty"`
	SysUbiMaxEc                             *wrapperspb.UInt32Value `protobuf:"bytes,17,opt,name=sys_ubi_max_ec,json=sysUbiMaxEc,proto3" json:"sys_ubi_max_ec,omitempty"`
	SysUbiBadPeb                            *wrapperspb.UInt32Value `protobuf:"bytes,18,opt,name=sys_ubi_bad_peb,json=sysUbiBadPeb,proto3" json:"sys_ubi_bad_peb,omitempty"`
	SysBoardRev                             *wrapperspb.UInt32Value `protobuf:"bytes,19,opt,name=sys_board_rev,json=sysBoardRev,proto3" json:"sys_board_rev,omitempty"`
	Radios_2GhzChannel                      *wrapperspb.UInt32Value `protobuf:"bytes,100,opt,name=radios_2ghz_channel,json=radios2ghzChannel,proto3" json:"radios_2ghz_channel,omitempty"`
	Radios_2GhzAntenna1Rssi                 *wrapperspb.FloatValue  `protobuf:"bytes,101,opt,name=radios_2ghz_antenna1_rssi,json=radios2ghzAntenna1Rssi,proto3" json:"radios_2ghz_antenna1_rssi,omitempty"`
	Radios_2GhzAntenna2Rssi                 *wrapperspb.FloatValue  `protobuf:"bytes,102,opt,name=radios_2ghz_antenna2_rssi,json=radios2ghzAntenna2Rssi,proto3" json:"radios_2ghz_antenna2_rssi,omitempty"`
	Radios_2GhzAntenna3Rssi                 *wrapperspb.FloatValue  `protobuf:"bytes,103,opt,name=radios_2ghz_antenna3_rssi,json=radios2ghzAntenna3Rssi,proto3" json:"radios_2ghz_antenna3_rssi,omitempty"`
	Radios_2GhzAntenna4Rssi                 *wrapperspb.FloatValue  `protobuf:"bytes,197,opt,name=radios_2ghz_antenna4_rssi,json=radios2ghzAntenna4Rssi,proto3" json:"radios_2ghz_antenna4_rssi,omitempty"`
	Radios_2GhzAntenna1Tssi                 *wrapperspb.FloatValue  `protobuf:"bytes,157,opt,name=radios_2ghz_antenna1_tssi,json=radios2ghzAntenna1Tssi,proto3" json:"radios_2ghz_antenna1_tssi,omitempty"`
	Radios_2GhzAntenna2Tssi                 *wrapperspb.FloatValue  `protobuf:"bytes,158,opt,name=radios_2ghz_antenna2_tssi,json=radios2ghzAntenna2Tssi,proto3" json:"radios_2ghz_antenna2_tssi,omitempty"`
	Radios_2GhzAntenna3Tssi                 *wrapperspb.FloatValue  `protobuf:"bytes,159,opt,name=radios_2ghz_antenna3_tssi,json=radios2ghzAntenna3Tssi,proto3" json:"radios_2ghz_antenna3_tssi,omitempty"`
	Radios_2GhzAntenna4Tssi                 *wrapperspb.FloatValue  `protobuf:"bytes,160,opt,name=radios_2ghz_antenna4_tssi,json=radios2ghzAntenna4Tssi,proto3" json:"radios_2ghz_antenna4_tssi,omitempty"`
	Radios_2GhzIfaceCount                   *wrapperspb.UInt32Value `protobuf:"bytes,104,opt,name=radios_2ghz_iface_count,json=radios2ghzIfaceCount,proto3" json:"radios_2ghz_iface_count,omitempty"`
	Radios_2GhzChanBusyFraction             *wrapperspb.FloatValue  `protobuf:"bytes,105,opt,name=radios_2ghz_chan_busy_fraction,json=radios2ghzChanBusyFraction,proto3" json:"radios_2ghz_chan_busy_fraction,omitempty"`
	Radios_2GhzEdccaFraction                *wrapperspb.FloatValue  `protobuf:"bytes,106,opt,name=radios_2ghz_edcca_fraction,json=radios2ghzEdccaFraction,proto3" json:"radios_2ghz_edcca_fraction,omitempty"`
	Radios_2GhzOverlappingBssFraction       *wrapperspb.FloatValue  `protobuf:"bytes,107,opt,name=radios_2ghz_overlapping_bss_fraction,json=radios2ghzOverlappingBssFraction,proto3" json:"radios_2ghz_overlapping_bss_fraction,omitempty"`
	Radios_2GhzRxBytes                      *wrapperspb.Int64Value  `protobuf:"bytes,108,opt,name=radios_2ghz_rx_bytes,json=radios2ghzRxBytes,proto3" json:"radios_2ghz_rx_bytes,omitempty"`
	Radios_2GhzRxPackets                    *wrapperspb.Int64Value  `protobuf:"bytes,109,opt,name=radios_2ghz_rx_packets,json=radios2ghzRxPackets,proto3" json:"radios_2ghz_rx_packets,omitempty"`
	Radios_2GhzRxErrors                     *wrapperspb.Int64Value  `protobuf:"bytes,110,opt,name=radios_2ghz_rx_errors,json=radios2ghzRxErrors,proto3" json:"radios_2ghz_rx_errors,omitempty"`
	Radios_2GhzRxFrameErrors                *wrapperspb.Int64Value  `protobuf:"bytes,111,opt,name=radios_2ghz_rx_frame_errors,json=radios2ghzRxFrameErrors,proto3" json:"radios_2ghz_rx_frame_errors,omitempty"`
	Radios_2GhzRxPacketErrorRate            *wrapperspb.FloatValue  `protobuf:"bytes,112,opt,name=radios_2ghz_rx_packet_error_rate,json=radios2ghzRxPacketErrorRate,proto3" json:"radios_2ghz_rx_packet_error_rate,omitempty"`
	Radios_2GhzRxAirtimeFraction            *wrapperspb.FloatValue  `protobuf:"bytes,113,opt,name=radios_2ghz_rx_airtime_fraction,json=radios2ghzRxAirtimeFraction,proto3" json:"radios_2ghz_rx_airtime_fraction,omitempty"`
	Radios_2GhzTxBytes                      *wrapperspb.Int64Value  `protobuf:"bytes,114,opt,name=radios_2ghz_tx_bytes,json=radios2ghzTxBytes,proto3" json:"radios_2ghz_tx_bytes,omitempty"`
	Radios_2GhzTxPackets                    *wrapperspb.Int64Value  `protobuf:"bytes,115,opt,name=radios_2ghz_tx_packets,json=radios2ghzTxPackets,proto3" json:"radios_2ghz_tx_packets,omitempty"`
	Radios_2GhzTxErrors                     *wrapperspb.Int64Value  `protobuf:"bytes,116,opt,name=radios_2ghz_tx_errors,json=radios2ghzTxErrors,proto3" json:"radios_2ghz_tx_errors,omitempty"`
	Radios_2GhzTxPacketErrorRate            *wrapperspb.FloatValue  `protobuf:"bytes,117,opt,name=radios_2ghz_tx_packet_error_rate,json=radios2ghzTxPacketErrorRate,proto3" json:"radios_2ghz_tx_packet_error_rate,omitempty"`
	Radios_2GhzTxAirtimeFraction            *wrapperspb.FloatValue  `protobuf:"bytes,118,opt,name=radios_2ghz_tx_airtime_fraction,json=radios2ghzTxAirtimeFraction,proto3" json:"radios_2ghz_tx_airtime_fraction,omitempty"`
	Radios_5GhzChannel                      *wrapperspb.UInt32Value `protobuf:"bytes,119,opt,name=radios_5ghz_channel,json=radios5ghzChannel,proto3" json:"radios_5ghz_channel,omitempty"`
	Radios_5GhzAntenna1Rssi                 *wrapperspb.FloatValue  `protobuf:"bytes,120,opt,name=radios_5ghz_antenna1_rssi,json=radios5ghzAntenna1Rssi,proto3" json:"radios_5ghz_antenna1_rssi,omitempty"`
	Radios_5GhzAntenna2Rssi                 *wrapperspb.FloatValue  `protobuf:"bytes,121,opt,name=radios_5ghz_antenna2_rssi,json=radios5ghzAntenna2Rssi,proto3" json:"radios_5ghz_antenna2_rssi,omitempty"`
	Radios_5GhzAntenna3Rssi                 *wrapperspb.FloatValue  `protobuf:"bytes,122,opt,name=radios_5ghz_antenna3_rssi,json=radios5ghzAntenna3Rssi,proto3" json:"radios_5ghz_antenna3_rssi,omitempty"`
	Radios_5GhzAntenna4Rssi                 *wrapperspb.FloatValue  `protobuf:"bytes,198,opt,name=radios_5ghz_antenna4_rssi,json=radios5ghzAntenna4Rssi,proto3" json:"radios_5ghz_antenna4_rssi,omitempty"`
	Radios_5GhzAntenna1Tssi                 *wrapperspb.FloatValue  `protobuf:"bytes,161,opt,name=radios_5ghz_antenna1_tssi,json=radios5ghzAntenna1Tssi,proto3" json:"radios_5ghz_antenna1_tssi,omitempty"`
	Radios_5GhzAntenna2Tssi                 *wrapperspb.FloatValue  `protobuf:"bytes,162,opt,name=radios_5ghz_antenna2_tssi,json=radios5ghzAntenna2Tssi,proto3" json:"radios_5ghz_antenna2_tssi,omitempty"`
	Radios_5GhzAntenna3Tssi                 *wrapperspb.FloatValue  `protobuf:"bytes,163,opt,name=radios_5ghz_antenna3_tssi,json=radios5ghzAntenna3Tssi,proto3" json:"radios_5ghz_antenna3_tssi,omitempty"`
	Radios_5GhzAntenna4Tssi                 *wrapperspb.FloatValue  `protobuf:"bytes,164,opt,name=radios_5ghz_antenna4_tssi,json=radios5ghzAntenna4Tssi,proto3" json:"radios_5ghz_antenna4_tssi,omitempty"`
	Radios_5GhzIfaceCount                   *wrapperspb.UInt32Value `protobuf:"bytes,123,opt,name=radios_5ghz_iface_count,json=radios5ghzIfaceCount,proto3" json:"radios_5ghz_iface_count,omitempty"`
	Radios_5GhzChanBusyFraction             *wrapperspb.FloatValue  `protobuf:"bytes,124,opt,name=radios_5ghz_chan_busy_fraction,json=radios5ghzChanBusyFraction,proto3" json:"radios_5ghz_chan_busy_fraction,omitempty"`
	Radios_5GhzEdccaFraction                *wrapperspb.FloatValue  `protobuf:"bytes,125,opt,name=radios_5ghz_edcca_fraction,json=radios5ghzEdccaFraction,proto3" json:"radios_5ghz_edcca_fraction,omitempty"`
	Radios_5GhzOverlappingBssFraction       *wrapperspb.FloatValue  `protobuf:"bytes,126,opt,name=radios_5ghz_overlapping_bss_fraction,json=radios5ghzOverlappingBssFraction,proto3" json:"radios_5ghz_overlapping_bss_fraction,omitempty"`
	Radios_5GhzRxBytes                      *wrapperspb.Int64Value  `protobuf:"bytes,127,opt,name=radios_5ghz_rx_bytes,json=radios5ghzRxBytes,proto3" json:"radios_5ghz_rx_bytes,omitempty"`
	Radios_5GhzRxPackets                    *wrapperspb.Int64Value  `protobuf:"bytes,128,opt,name=radios_5ghz_rx_packets,json=radios5ghzRxPackets,proto3" json:"radios_5ghz_rx_packets,omitempty"`
	Radios_5GhzRxErrors                     *wrapperspb.Int64Value  `protobuf:"bytes,129,opt,name=radios_5ghz_rx_errors,json=radios5ghzRxErrors,proto3" json:"radios_5ghz_rx_errors,omitempty"`
	Radios_5GhzRxFrameErrors                *wrapperspb.Int64Value  `protobuf:"bytes,130,opt,name=radios_5ghz_rx_frame_errors,json=radios5ghzRxFrameErrors,proto3" json:"radios_5ghz_rx_frame_errors,omitempty"`
	Radios_5GhzRxPacketErrorRate            *wrapperspb.FloatValue  `protobuf:"bytes,131,opt,name=radios_5ghz_rx_packet_error_rate,json=radios5ghzRxPacketErrorRate,proto3" json:"radios_5ghz_rx_packet_error_rate,omitempty"`
	Radios_5GhzRxAirtimeFraction            *wrapperspb.FloatValue  `protobuf:"bytes,132,opt,name=radios_5ghz_rx_airtime_fraction,json=radios5ghzRxAirtimeFraction,proto3" json:"radios_5ghz_rx_airtime_fraction,omitempty"`
	Radios_5GhzTxBytes                      *wrapperspb.Int64Value  `protobuf:"bytes,133,opt,name=radios_5ghz_tx_bytes,json=radios5ghzTxBytes,proto3" json:"radios_5ghz_tx_bytes,omitempty"`
	Radios_5GhzTxPackets                    *wrapperspb.Int64Value  `protobuf:"bytes,134,opt,name=radios_5ghz_tx_packets,json=radios5ghzTxPackets,proto3" json:"radios_5ghz_tx_packets,omitempty"`
	Radios_5GhzTxErrors                     *wrapperspb.Int64Value  `protobuf:"bytes,135,opt,name=radios_5ghz_tx_errors,json=radios5ghzTxErrors,proto3" json:"radios_5ghz_tx_errors,omitempty"`
	Radios_5GhzTxPacketErrorRate            *wrapperspb.FloatValue  `protobuf:"bytes,136,opt,name=radios_5ghz_tx_packet_error_rate,json=radios5ghzTxPacketErrorRate,proto3" json:"radios_5ghz_tx_packet_error_rate,omitempty"`
	Radios_5GhzTxAirtimeFraction            *wrapperspb.FloatValue  `protobuf:"bytes,137,opt,name=radios_5ghz_tx_airtime_fraction,json=radios5ghzTxAirtimeFraction,proto3" json:"radios_5ghz_tx_airtime_fraction,omitempty"`
	Radios_5GhzHighChannel                  *wrapperspb.UInt32Value `protobuf:"bytes,138,opt,name=radios_5ghz_high_channel,json=radios5ghzHighChannel,proto3" json:"radios_5ghz_high_channel,omitempty"`
	Radios_5GhzHighAntenna1Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,139,opt,name=radios_5ghz_high_antenna1_rssi,json=radios5ghzHighAntenna1Rssi,proto3" json:"radios_5ghz_high_antenna1_rssi,omitempty"`
	Radios_5GhzHighAntenna2Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,140,opt,name=radios_5ghz_high_antenna2_rssi,json=radios5ghzHighAntenna2Rssi,proto3" json:"radios_5ghz_high_antenna2_rssi,omitempty"`
	Radios_5GhzHighAntenna3Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,141,opt,name=radios_5ghz_high_antenna3_rssi,json=radios5ghzHighAntenna3Rssi,proto3" json:"radios_5ghz_high_antenna3_rssi,omitempty"`
	Radios_5GhzHighAntenna4Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,199,opt,name=radios_5ghz_high_antenna4_rssi,json=radios5ghzHighAntenna4Rssi,proto3" json:"radios_5ghz_high_antenna4_rssi,omitempty"`
	Radios_5GhzHighAntenna1Tssi             *wrapperspb.FloatValue  `protobuf:"bytes,165,opt,name=radios_5ghz_high_antenna1_tssi,json=radios5ghzHighAntenna1Tssi,proto3" json:"radios_5ghz_high_antenna1_tssi,omitempty"`
	Radios_5GhzHighAntenna2Tssi             *wrapperspb.FloatValue  `protobuf:"bytes,166,opt,name=radios_5ghz_high_antenna2_tssi,json=radios5ghzHighAntenna2Tssi,proto3" json:"radios_5ghz_high_antenna2_tssi,omitempty"`
	Radios_5GhzHighAntenna3Tssi             *wrapperspb.FloatValue  `protobuf:"bytes,167,opt,name=radios_5ghz_high_antenna3_tssi,json=radios5ghzHighAntenna3Tssi,proto3" json:"radios_5ghz_high_antenna3_tssi,omitempty"`
	Radios_5GhzHighAntenna4Tssi             *wrapperspb.FloatValue  `protobuf:"bytes,168,opt,name=radios_5ghz_high_antenna4_tssi,json=radios5ghzHighAntenna4Tssi,proto3" json:"radios_5ghz_high_antenna4_tssi,omitempty"`
	Radios_5GhzHighIfaceCount               *wrapperspb.UInt32Value `protobuf:"bytes,142,opt,name=radios_5ghz_high_iface_count,json=radios5ghzHighIfaceCount,proto3" json:"radios_5ghz_high_iface_count,omitempty"`
	Radios_5GhzHighChanBusyFraction         *wrapperspb.FloatValue  `protobuf:"bytes,143,opt,name=radios_5ghz_high_chan_busy_fraction,json=radios5ghzHighChanBusyFraction,proto3" json:"radios_5ghz_high_chan_busy_fraction,omitempty"`
	Radios_5GhzHighEdccaFraction            *wrapperspb.FloatValue  `protobuf:"bytes,144,opt,name=radios_5ghz_high_edcca_fraction,json=radios5ghzHighEdccaFraction,proto3" json:"radios_5ghz_high_edcca_fraction,omitempty"`
	Radios_5GhzHighOverlappingBssFraction   *wrapperspb.FloatValue  `protobuf:"bytes,145,opt,name=radios_5ghz_high_overlapping_bss_fraction,json=radios5ghzHighOverlappingBssFraction,proto3" json:"radios_5ghz_high_overlapping_bss_fraction,omitempty"`
	Radios_5GhzHighRxBytes                  *wrapperspb.Int64Value  `protobuf:"bytes,146,opt,name=radios_5ghz_high_rx_bytes,json=radios5ghzHighRxBytes,proto3" json:"radios_5ghz_high_rx_bytes,omitempty"`
	Radios_5GhzHighRxPackets                *wrapperspb.Int64Value  `protobuf:"bytes,147,opt,name=radios_5ghz_high_rx_packets,json=radios5ghzHighRxPackets,proto3" json:"radios_5ghz_high_rx_packets,omitempty"`
	Radios_5GhzHighRxErrors                 *wrapperspb.Int64Value  `protobuf:"bytes,148,opt,name=radios_5ghz_high_rx_errors,json=radios5ghzHighRxErrors,proto3" json:"radios_5ghz_high_rx_errors,omitempty"`
	Radios_5GhzHighRxFrameErrors            *wrapperspb.Int64Value  `protobuf:"bytes,149,opt,name=radios_5ghz_high_rx_frame_errors,json=radios5ghzHighRxFrameErrors,proto3" json:"radios_5ghz_high_rx_frame_errors,omitempty"`
	Radios_5GhzHighRxPacketErrorRate        *wrapperspb.FloatValue  `protobuf:"bytes,150,opt,name=radios_5ghz_high_rx_packet_error_rate,json=radios5ghzHighRxPacketErrorRate,proto3" json:"radios_5ghz_high_rx_packet_error_rate,omitempty"`
	Radios_5GhzHighRxAirtimeFraction        *wrapperspb.FloatValue  `protobuf:"bytes,151,opt,name=radios_5ghz_high_rx_airtime_fraction,json=radios5ghzHighRxAirtimeFraction,proto3" json:"radios_5ghz_high_rx_airtime_fraction,omitempty"`
	Radios_5GhzHighTxBytes                  *wrapperspb.Int64Value  `protobuf:"bytes,152,opt,name=radios_5ghz_high_tx_bytes,json=radios5ghzHighTxBytes,proto3" json:"radios_5ghz_high_tx_bytes,omitempty"`
	Radios_5GhzHighTxPackets                *wrapperspb.Int64Value  `protobuf:"bytes,153,opt,name=radios_5ghz_high_tx_packets,json=radios5ghzHighTxPackets,proto3" json:"radios_5ghz_high_tx_packets,omitempty"`
	Radios_5GhzHighTxErrors                 *wrapperspb.Int64Value  `protobuf:"bytes,154,opt,name=radios_5ghz_high_tx_errors,json=radios5ghzHighTxErrors,proto3" json:"radios_5ghz_high_tx_errors,omitempty"`
	Radios_5GhzHighTxPacketErrorRate        *wrapperspb.FloatValue  `protobuf:"bytes,155,opt,name=radios_5ghz_high_tx_packet_error_rate,json=radios5ghzHighTxPacketErrorRate,proto3" json:"radios_5ghz_high_tx_packet_error_rate,omitempty"`
	Radios_5GhzHighTxAirtimeFraction        *wrapperspb.FloatValue  `protobuf:"bytes,156,opt,name=radios_5ghz_high_tx_airtime_fraction,json=radios5ghzHighTxAirtimeFraction,proto3" json:"radios_5ghz_high_tx_airtime_fraction,omitempty"`
	Radios_2GhzThermalTemp                  *wrapperspb.FloatValue  `protobuf:"bytes,200,opt,name=radios_2ghz_thermal_temp,json=radios2ghzThermalTemp,proto3" json:"radios_2ghz_thermal_temp,omitempty"`
	Radios_5GhzThermalTemp                  *wrapperspb.FloatValue  `protobuf:"bytes,201,opt,name=radios_5ghz_thermal_temp,json=radios5ghzThermalTemp,proto3" json:"radios_5ghz_thermal_temp,omitempty"`
	Radios_5GhzHighThermalTemp              *wrapperspb.FloatValue  `protobuf:"bytes,206,opt,name=radios_5ghz_high_thermal_temp,json=radios5ghzHighThermalTemp,proto3" json:"radios_5ghz_high_thermal_temp,omitempty"`
	Radios_2GhzThermalDutyCycle             *wrapperspb.FloatValue  `protobuf:"bytes,202,opt,name=radios_2ghz_thermal_duty_cycle,json=radios2ghzThermalDutyCycle,proto3" json:"radios_2ghz_thermal_duty_cycle,omitempty"`
	Radios_5GhzThermalDutyCycle             *wrapperspb.FloatValue  `protobuf:"bytes,203,opt,name=radios_5ghz_thermal_duty_cycle,json=radios5ghzThermalDutyCycle,proto3" json:"radios_5ghz_thermal_duty_cycle,omitempty"`
	Radios_5GhzHighThermalDutyCycle         *wrapperspb.FloatValue  `protobuf:"bytes,207,opt,name=radios_5ghz_high_thermal_duty_cycle,json=radios5ghzHighThermalDutyCycle,proto3" json:"radios_5ghz_high_thermal_duty_cycle,omitempty"`
	Radios_2GhzThermalThrottledSeconds      *wrapperspb.UInt32Value `protobuf:"bytes,204,opt,name=radios_2ghz_thermal_throttled_seconds,json=radios2ghzThermalThrottledSeconds,proto3" json:"radios_2ghz_thermal_throttled_seconds,omitempty"`
	Radios_5GhzThermalThrottledSeconds      *wrapperspb.UInt32Value `protobuf:"bytes,205,opt,name=radios_5ghz_thermal_throttled_seconds,json=radios5ghzThermalThrottledSeconds,proto3" json:"radios_5ghz_thermal_throttled_seconds,omitempty"`
	Radios_5GhzHighThermalThrottledSeconds  *wrapperspb.UInt32Value `protobuf:"bytes,208,opt,name=radios_5ghz_high_thermal_throttled_seconds,json=radios5ghzHighThermalThrottledSeconds,proto3" json:"radios_5ghz_high_thermal_throttled_seconds,omitempty"`
	BoardTemp                               *wrapperspb.FloatValue  `protobuf:"bytes,210,opt,name=board_temp,json=boardTemp,proto3" json:"board_temp,omitempty"`
	PoeMcuDieTemp                           *wrapperspb.FloatValue  `protobuf:"bytes,211,opt,name=poe_mcu_die_temp,json=poeMcuDieTemp,proto3" json:"poe_mcu_die_temp,omitempty"`
	PoePercentWaterDetectAvg                *wrapperspb.FloatValue  `protobuf:"bytes,212,opt,name=poe_percent_water_detect_avg,json=poePercentWaterDetectAvg,proto3" json:"poe_percent_water_detect_avg,omitempty"`
	IfacesLanEthRxBytes                     *wrapperspb.Int64Value  `protobuf:"bytes,300,opt,name=ifaces_lan_eth_rx_bytes,json=ifacesLanEthRxBytes,proto3" json:"ifaces_lan_eth_rx_bytes,omitempty"`
	IfacesLanEthRxPackets                   *wrapperspb.Int64Value  `protobuf:"bytes,301,opt,name=ifaces_lan_eth_rx_packets,json=ifacesLanEthRxPackets,proto3" json:"ifaces_lan_eth_rx_packets,omitempty"`
	IfacesLanEthRxErrors                    *wrapperspb.Int64Value  `protobuf:"bytes,302,opt,name=ifaces_lan_eth_rx_errors,json=ifacesLanEthRxErrors,proto3" json:"ifaces_lan_eth_rx_errors,omitempty"`
	IfacesLanEthRxFrameErrors               *wrapperspb.Int64Value  `protobuf:"bytes,303,opt,name=ifaces_lan_eth_rx_frame_errors,json=ifacesLanEthRxFrameErrors,proto3" json:"ifaces_lan_eth_rx_frame_errors,omitempty"`
	IfacesLanEthTxBytes                     *wrapperspb.Int64Value  `protobuf:"bytes,304,opt,name=ifaces_lan_eth_tx_bytes,json=ifacesLanEthTxBytes,proto3" json:"ifaces_lan_eth_tx_bytes,omitempty"`
	IfacesLanEthTxPackets                   *wrapperspb.Int64Value  `protobuf:"bytes,305,opt,name=ifaces_lan_eth_tx_packets,json=ifacesLanEthTxPackets,proto3" json:"ifaces_lan_eth_tx_packets,omitempty"`
	IfacesLanEthTxErrors                    *wrapperspb.Int64Value  `protobuf:"bytes,306,opt,name=ifaces_lan_eth_tx_errors,json=ifacesLanEthTxErrors,proto3" json:"ifaces_lan_eth_tx_errors,omitempty"`
	IfacesLan1EthRxBytes                    *wrapperspb.Int64Value  `protobuf:"bytes,314,opt,name=ifaces_lan1_eth_rx_bytes,json=ifacesLan1EthRxBytes,proto3" json:"ifaces_lan1_eth_rx_bytes,omitempty"`
	IfacesLan1EthRxPackets                  *wrapperspb.Int64Value  `protobuf:"bytes,315,opt,name=ifaces_lan1_eth_rx_packets,json=ifacesLan1EthRxPackets,proto3" json:"ifaces_lan1_eth_rx_packets,omitempty"`
	IfacesLan1EthRxErrors                   *wrapperspb.Int64Value  `protobuf:"bytes,316,opt,name=ifaces_lan1_eth_rx_errors,json=ifacesLan1EthRxErrors,proto3" json:"ifaces_lan1_eth_rx_errors,omitempty"`
	IfacesLan1EthRxFrameErrors              *wrapperspb.Int64Value  `protobuf:"bytes,317,opt,name=ifaces_lan1_eth_rx_frame_errors,json=ifacesLan1EthRxFrameErrors,proto3" json:"ifaces_lan1_eth_rx_frame_errors,omitempty"`
	IfacesLan1EthTxBytes                    *wrapperspb.Int64Value  `protobuf:"bytes,318,opt,name=ifaces_lan1_eth_tx_bytes,json=ifacesLan1EthTxBytes,proto3" json:"ifaces_lan1_eth_tx_bytes,omitempty"`
	IfacesLan1EthTxPackets                  *wrapperspb.Int64Value  `protobuf:"bytes,319,opt,name=ifaces_lan1_eth_tx_packets,json=ifacesLan1EthTxPackets,proto3" json:"ifaces_lan1_eth_tx_packets,omitempty"`
	IfacesLan1EthTxErrors                   *wrapperspb.Int64Value  `protobuf:"bytes,320,opt,name=ifaces_lan1_eth_tx_errors,json=ifacesLan1EthTxErrors,proto3" json:"ifaces_lan1_eth_tx_errors,omitempty"`
	IfacesWanEthRxBytes                     *wrapperspb.Int64Value  `protobuf:"bytes,307,opt,name=ifaces_wan_eth_rx_bytes,json=ifacesWanEthRxBytes,proto3" json:"ifaces_wan_eth_rx_bytes,omitempty"`
	IfacesWanEthRxPackets                   *wrapperspb.Int64Value  `protobuf:"bytes,308,opt,name=ifaces_wan_eth_rx_packets,json=ifacesWanEthRxPackets,proto3" json:"ifaces_wan_eth_rx_packets,omitempty"`
	IfacesWanEthRxErrors                    *wrapperspb.Int64Value  `protobuf:"bytes,309,opt,name=ifaces_wan_eth_rx_errors,json=ifacesWanEthRxErrors,proto3" json:"ifaces_wan_eth_rx_errors,omitempty"`
	IfacesWanEthRxFrameErrors               *wrapperspb.Int64Value  `protobuf:"bytes,310,opt,name=ifaces_wan_eth_rx_frame_errors,json=ifacesWanEthRxFrameErrors,proto3" json:"ifaces_wan_eth_rx_frame_errors,omitempty"`
	IfacesWanEthTxBytes                     *wrapperspb.Int64Value  `protobuf:"bytes,311,opt,name=ifaces_wan_eth_tx_bytes,json=ifacesWanEthTxBytes,proto3" json:"ifaces_wan_eth_tx_bytes,omitempty"`
	IfacesWanEthTxPackets                   *wrapperspb.Int64Value  `protobuf:"bytes,312,opt,name=ifaces_wan_eth_tx_packets,json=ifacesWanEthTxPackets,proto3" json:"ifaces_wan_eth_tx_packets,omitempty"`
	IfacesWanEthTxErrors                    *wrapperspb.Int64Value  `protobuf:"bytes,313,opt,name=ifaces_wan_eth_tx_errors,json=ifacesWanEthTxErrors,proto3" json:"ifaces_wan_eth_tx_errors,omitempty"`
	Clients                                 *wrapperspb.UInt32Value `protobuf:"bytes,400,opt,name=clients,proto3" json:"clients,omitempty"`
	Clients_2Ghz                            *wrapperspb.UInt32Value `protobuf:"bytes,401,opt,name=clients_2ghz,json=clients2ghz,proto3" json:"clients_2ghz,omitempty"`
	Clients_5Ghz                            *wrapperspb.UInt32Value `protobuf:"bytes,402,opt,name=clients_5ghz,json=clients5ghz,proto3" json:"clients_5ghz,omitempty"`
	Clients_5GhzHigh                        *wrapperspb.UInt32Value `protobuf:"bytes,413,opt,name=clients_5ghz_high,json=clients5ghzHigh,proto3" json:"clients_5ghz_high,omitempty"`
	ClientsEth                              *wrapperspb.UInt32Value `protobuf:"bytes,403,opt,name=clients_eth,json=clientsEth,proto3" json:"clients_eth,omitempty"`
	Clients_5GhzRxBandwidth_20Mhz           *wrapperspb.UInt32Value `protobuf:"bytes,429,opt,name=clients_5ghz_rx_bandwidth_20mhz,json=clients5ghzRxBandwidth20mhz,proto3" json:"clients_5ghz_rx_bandwidth_20mhz,omitempty"`
	Clients_5GhzRxBandwidth_40Mhz           *wrapperspb.UInt32Value `protobuf:"bytes,430,opt,name=clients_5ghz_rx_bandwidth_40mhz,json=clients5ghzRxBandwidth40mhz,proto3" json:"clients_5ghz_rx_bandwidth_40mhz,omitempty"`
	Clients_5GhzRxBandwidth_80Mhz           *wrapperspb.UInt32Value `protobuf:"bytes,431,opt,name=clients_5ghz_rx_bandwidth_80mhz,json=clients5ghzRxBandwidth80mhz,proto3" json:"clients_5ghz_rx_bandwidth_80mhz,omitempty"`
	ClientsRepeater                         *wrapperspb.UInt32Value `protobuf:"bytes,404,opt,name=clients_repeater,json=clientsRepeater,proto3" json:"clients_repeater,omitempty"`
	ClientsRepeater_2Ghz                    *wrapperspb.UInt32Value `protobuf:"bytes,405,opt,name=clients_repeater_2ghz,json=clientsRepeater2ghz,proto3" json:"clients_repeater_2ghz,omitempty"`
	ClientsRepeater_5Ghz                    *wrapperspb.UInt32Value `protobuf:"bytes,406,opt,name=clients_repeater_5ghz,json=clientsRepeater5ghz,proto3" json:"clients_repeater_5ghz,omitempty"`
	ClientsRepeater_5GhzHigh                *wrapperspb.UInt32Value `protobuf:"bytes,416,opt,name=clients_repeater_5ghz_high,json=clientsRepeater5ghzHigh,proto3" json:"clients_repeater_5ghz_high,omitempty"`
	ClientsRepeaterEth                      *wrapperspb.UInt32Value `protobuf:"bytes,407,opt,name=clients_repeater_eth,json=clientsRepeaterEth,proto3" json:"clients_repeater_eth,omitempty"`
	MeshHops                                *wrapperspb.UInt32Value `protobuf:"bytes,408,opt,name=mesh_hops,json=meshHops,proto3" json:"mesh_hops,omitempty"`
	MeshOneHopRssiAvg_2Ghz                  *wrapperspb.FloatValue  `protobuf:"bytes,409,opt,name=mesh_one_hop_rssi_avg_2ghz,json=meshOneHopRssiAvg2ghz,proto3" json:"mesh_one_hop_rssi_avg_2ghz,omitempty"`
	MeshOneHopRssiAvg_5Ghz                  *wrapperspb.FloatValue  `protobuf:"bytes,410,opt,name=mesh_one_hop_rssi_avg_5ghz,json=meshOneHopRssiAvg5ghz,proto3" json:"mesh_one_hop_rssi_avg_5ghz,omitempty"`
	MeshOneHopRssiAvg_5GhzHigh              *wrapperspb.FloatValue  `protobuf:"bytes,414,opt,name=mesh_one_hop_rssi_avg_5ghz_high,json=meshOneHopRssiAvg5ghzHigh,proto3" json:"mesh_one_hop_rssi_avg_5ghz_high,omitempty"`
	MeshTwoHopRssiAvg_2Ghz                  *wrapperspb.FloatValue  `protobuf:"bytes,411,opt,name=mesh_two_hop_rssi_avg_2ghz,json=meshTwoHopRssiAvg2ghz,proto3" json:"mesh_two_hop_rssi_avg_2ghz,omitempty"`
	MeshTwoHopRssiAvg_5Ghz                  *wrapperspb.FloatValue  `protobuf:"bytes,412,opt,name=mesh_two_hop_rssi_avg_5ghz,json=meshTwoHopRssiAvg5ghz,proto3" json:"mesh_two_hop_rssi_avg_5ghz,omitempty"`
	MeshTwoHopRssiAvg_5GhzHigh              *wrapperspb.FloatValue  `protobuf:"bytes,415,opt,name=mesh_two_hop_rssi_avg_5ghz_high,json=meshTwoHopRssiAvg5ghzHigh,proto3" json:"mesh_two_hop_rssi_avg_5ghz_high,omitempty"`
	RepeaterTxRateMbpsMin                   *wrapperspb.FloatValue  `protobuf:"bytes,418,opt,name=repeater_tx_rate_mbps_min,json=repeaterTxRateMbpsMin,proto3" json:"repeater_tx_rate_mbps_min,omitempty"`
	RepeaterRxRateMbpsMin                   *wrapperspb.FloatValue  `protobuf:"bytes,419,opt,name=repeater_rx_rate_mbps_min,json=repeaterRxRateMbpsMin,proto3" json:"repeater_rx_rate_mbps_min,omitempty"`
	RepeaterTxRateMbpsAvg                   *wrapperspb.FloatValue  `protobuf:"bytes,420,opt,name=repeater_tx_rate_mbps_avg,json=repeaterTxRateMbpsAvg,proto3" json:"repeater_tx_rate_mbps_avg,omitempty"`
	RepeaterRxRateMbpsAvg                   *wrapperspb.FloatValue  `protobuf:"bytes,421,opt,name=repeater_rx_rate_mbps_avg,json=repeaterRxRateMbpsAvg,proto3" json:"repeater_rx_rate_mbps_avg,omitempty"`
	RepeaterSecondsSince_2SOutageMin        *wrapperspb.FloatValue  `protobuf:"bytes,422,opt,name=repeater_seconds_since_2s_outage_min,json=repeaterSecondsSince2sOutageMin,proto3" json:"repeater_seconds_since_2s_outage_min,omitempty"`
	RepeaterSecondsSince_5SOutageMin        *wrapperspb.FloatValue  `protobuf:"bytes,424,opt,name=repeater_seconds_since_5s_outage_min,json=repeaterSecondsSince5sOutageMin,proto3" json:"repeater_seconds_since_5s_outage_min,omitempty"`
	RepeaterSecondsSince_2SOutageAvg        *wrapperspb.FloatValue  `protobuf:"bytes,423,opt,name=repeater_seconds_since_2s_outage_avg,json=repeaterSecondsSince2sOutageAvg,proto3" json:"repeater_seconds_since_2s_outage_avg,omitempty"`
	RepeaterSecondsSince_5SOutageAvg        *wrapperspb.FloatValue  `protobuf:"bytes,425,opt,name=repeater_seconds_since_5s_outage_avg,json=repeaterSecondsSince5sOutageAvg,proto3" json:"repeater_seconds_since_5s_outage_avg,omitempty"`
	RepeaterLatencyMs_1HMax                 *wrapperspb.FloatValue  `protobuf:"bytes,426,opt,name=repeater_latency_ms_1h_max,json=repeaterLatencyMs1hMax,proto3" json:"repeater_latency_ms_1h_max,omitempty"`
	RepeaterLatencyMs_1HAvg                 *wrapperspb.FloatValue  `protobuf:"bytes,427,opt,name=repeater_latency_ms_1h_avg,json=repeaterLatencyMs1hAvg,proto3" json:"repeater_latency_ms_1h_avg,omitempty"`
	MeshTopologyChangeCount_1D              *wrapperspb.UInt32Value `protobuf:"bytes,428,opt,name=mesh_topology_change_count_1d,json=meshTopologyChangeCount1d,proto3" json:"mesh_topology_change_count_1d,omitempty"`
	PingSecondsSinceLast_1SOutage           *wrapperspb.FloatValue  `protobuf:"bytes,600,opt,name=ping_seconds_since_last_1s_outage,json=pingSecondsSinceLast1sOutage,proto3" json:"ping_seconds_since_last_1s_outage,omitempty"`
	PingSecondsSinceLast_2SOutage           *wrapperspb.FloatValue  `protobuf:"bytes,601,opt,name=ping_seconds_since_last_2s_outage,json=pingSecondsSinceLast2sOutage,proto3" json:"ping_seconds_since_last_2s_outage,omitempty"`
	PingSecondsSinceLast_5SOutage           *wrapperspb.FloatValue  `protobuf:"bytes,602,opt,name=ping_seconds_since_last_5s_outage,json=pingSecondsSinceLast5sOutage,proto3" json:"ping_seconds_since_last_5s_outage,omitempty"`
	PingSecondsSinceLast_60SOutage          *wrapperspb.FloatValue  `protobuf:"bytes,603,opt,name=ping_seconds_since_last_60s_outage,json=pingSecondsSinceLast60sOutage,proto3" json:"ping_seconds_since_last_60s_outage,omitempty"`
	PingSecondsSinceLast_300SOutage         *wrapperspb.FloatValue  `protobuf:"bytes,604,opt,name=ping_seconds_since_last_300s_outage,json=pingSecondsSinceLast300sOutage,proto3" json:"ping_seconds_since_last_300s_outage,omitempty"`
	PingDropRate                            *wrapperspb.FloatValue  `protobuf:"bytes,605,opt,name=ping_drop_rate,json=pingDropRate,proto3" json:"ping_drop_rate,omitempty"`
	PingDropRateLast_1H                     *wrapperspb.FloatValue  `protobuf:"bytes,606,opt,name=ping_drop_rate_last_1h,json=pingDropRateLast1h,proto3" json:"ping_drop_rate_last_1h,omitempty"`
	PingLatency                             *wrapperspb.FloatValue  `protobuf:"bytes,607,opt,name=ping_latency,json=pingLatency,proto3" json:"ping_latency,omitempty"`
	PingLatencyLast_1H                      *wrapperspb.FloatValue  `protobuf:"bytes,618,opt,name=ping_latency_last_1h,json=pingLatencyLast1h,proto3" json:"ping_latency_last_1h,omitempty"`
	PingDishSecondsSinceLast_1SOutage       *wrapperspb.FloatValue  `protobuf:"bytes,610,opt,name=ping_dish_seconds_since_last_1s_outage,json=pingDishSecondsSinceLast1sOutage,proto3" json:"ping_dish_seconds_since_last_1s_outage,omitempty"`
	PingDishSecondsSinceLast_2SOutage       *wrapperspb.FloatValue  `protobuf:"bytes,611,opt,name=ping_dish_seconds_since_last_2s_outage,json=pingDishSecondsSinceLast2sOutage,proto3" json:"ping_dish_seconds_since_last_2s_outage,omitempty"`
	PingDishSecondsSinceLast_5SOutage       *wrapperspb.FloatValue  `protobuf:"bytes,612,opt,name=ping_dish_seconds_since_last_5s_outage,json=pingDishSecondsSinceLast5sOutage,proto3" json:"ping_dish_seconds_since_last_5s_outage,omitempty"`
	PingDishSecondsSinceLast_60SOutage      *wrapperspb.FloatValue  `protobuf:"bytes,613,opt,name=ping_dish_seconds_since_last_60s_outage,json=pingDishSecondsSinceLast60sOutage,proto3" json:"ping_dish_seconds_since_last_60s_outage,omitempty"`
	PingDishSecondsSinceLast_300SOutage     *wrapperspb.FloatValue  `protobuf:"bytes,614,opt,name=ping_dish_seconds_since_last_300s_outage,json=pingDishSecondsSinceLast300sOutage,proto3" json:"ping_dish_seconds_since_last_300s_outage,omitempty"`
	PingDishDropRate                        *wrapperspb.FloatValue  `protobuf:"bytes,615,opt,name=ping_dish_drop_rate,json=pingDishDropRate,proto3" json:"ping_dish_drop_rate,omitempty"`
	PingDishDropRateLast_1H                 *wrapperspb.FloatValue  `protobuf:"bytes,616,opt,name=ping_dish_drop_rate_last_1h,json=pingDishDropRateLast1h,proto3" json:"ping_dish_drop_rate_last_1h,omitempty"`
	PingDishLatency                         *wrapperspb.FloatValue  `protobuf:"bytes,617,opt,name=ping_dish_latency,json=pingDishLatency,proto3" json:"ping_dish_latency,omitempty"`
	PingDishLatencyLast_1H                  *wrapperspb.FloatValue  `protobuf:"bytes,619,opt,name=ping_dish_latency_last_1h,json=pingDishLatencyLast1h,proto3" json:"ping_dish_latency_last_1h,omitempty"`
	PingPopIpv6DropRateLast_1H              *wrapperspb.FloatValue  `protobuf:"bytes,621,opt,name=ping_pop_ipv6_drop_rate_last_1h,json=pingPopIpv6DropRateLast1h,proto3" json:"ping_pop_ipv6_drop_rate_last_1h,omitempty"`
	PingPopIpv6LatencyLast_1H               *wrapperspb.FloatValue  `protobuf:"bytes,623,opt,name=ping_pop_ipv6_latency_last_1h,json=pingPopIpv6LatencyLast1h,proto3" json:"ping_pop_ipv6_latency_last_1h,omitempty"`
	ClientSpeedtestRouterDownloadMbps       *wrapperspb.FloatValue  `protobuf:"bytes,700,opt,name=client_speedtest_router_download_mbps,json=clientSpeedtestRouterDownloadMbps,proto3" json:"client_speedtest_router_download_mbps,omitempty"`
	ClientSpeedtestRouterUploadMbps         *wrapperspb.FloatValue  `protobuf:"bytes,701,opt,name=client_speedtest_router_upload_mbps,json=clientSpeedtestRouterUploadMbps,proto3" json:"client_speedtest_router_upload_mbps,omitempty"`
	ClientSpeedtestRouterRssi               *wrapperspb.FloatValue  `protobuf:"bytes,702,opt,name=client_speedtest_router_rssi,json=clientSpeedtestRouterRssi,proto3" json:"client_speedtest_router_rssi,omitempty"`
	ClientSpeedtestWifiDownloadMbps         *wrapperspb.FloatValue  `protobuf:"bytes,703,opt,name=client_speedtest_wifi_download_mbps,json=clientSpeedtestWifiDownloadMbps,proto3" json:"client_speedtest_wifi_download_mbps,omitempty"`
	ClientSpeedtestWifiUploadMbps           *wrapperspb.FloatValue  `protobuf:"bytes,704,opt,name=client_speedtest_wifi_upload_mbps,json=clientSpeedtestWifiUploadMbps,proto3" json:"client_speedtest_wifi_upload_mbps,omitempty"`
	ClientSpeedtestClientDownloadMbps       *wrapperspb.FloatValue  `protobuf:"bytes,705,opt,name=client_speedtest_client_download_mbps,json=clientSpeedtestClientDownloadMbps,proto3" json:"client_speedtest_client_download_mbps,omitempty"`
	ClientSpeedtestClientUploadMbps         *wrapperspb.FloatValue  `protobuf:"bytes,706,opt,name=client_speedtest_client_upload_mbps,json=clientSpeedtestClientUploadMbps,proto3" json:"client_speedtest_client_upload_mbps,omitempty"`
	ClientSpeedtestClientRssi               *wrapperspb.FloatValue  `protobuf:"bytes,707,opt,name=client_speedtest_client_rssi,json=clientSpeedtestClientRssi,proto3" json:"client_speedtest_client_rssi,omitempty"`
	ClientSpeedtestClientIface              *wrapperspb.UInt32Value `protobuf:"bytes,708,opt,name=client_speedtest_client_iface,json=clientSpeedtestClientIface,proto3" json:"client_speedtest_client_iface,omitempty"`
	ClientSpeedtestClientOui                *wrapperspb.StringValue `protobuf:"bytes,709,opt,name=client_speedtest_client_oui,json=clientSpeedtestClientOui,proto3" json:"client_speedtest_client_oui,omitempty"`
	ClientSpeedtestClientTxRate             *wrapperspb.UInt32Value `protobuf:"bytes,710,opt,name=client_speedtest_client_tx_rate,json=clientSpeedtestClientTxRate,proto3" json:"client_speedtest_client_tx_rate,omitempty"`
	ClientSpeedtestClientRxRate             *wrapperspb.UInt32Value `protobuf:"bytes,711,opt,name=client_speedtest_client_rx_rate,json=clientSpeedtestClientRxRate,proto3" json:"client_speedtest_client_rx_rate,omitempty"`
	ClientSpeedtestClientPlatformType       *wrapperspb.UInt32Value `protobuf:"bytes,712,opt,name=client_speedtest_client_platform_type,json=clientSpeedtestClientPlatformType,proto3" json:"client_speedtest_client_platform_type,omitempty"`
	SpeedtestTcp_8DownloadMbpsAvg           *wrapperspb.FloatValue  `protobuf:"bytes,800,opt,name=speedtest_tcp_8_download_mbps_avg,json=speedtestTcp8DownloadMbpsAvg,proto3" json:"speedtest_tcp_8_download_mbps_avg,omitempty"`
	SpeedtestTcp_8DownloadMbpsMax           *wrapperspb.FloatValue  `protobuf:"bytes,801,opt,name=speedtest_tcp_8_download_mbps_max,json=speedtestTcp8DownloadMbpsMax,proto3" json:"speedtest_tcp_8_download_mbps_max,omitempty"`
	SpeedtestTcp_8UploadMbpsAvg             *wrapperspb.FloatValue  `protobuf:"bytes,802,opt,name=speedtest_tcp_8_upload_mbps_avg,json=speedtestTcp8UploadMbpsAvg,proto3" json:"speedtest_tcp_8_upload_mbps_avg,omitempty"`
	SpeedtestTcp_8UploadMbpsMax             *wrapperspb.FloatValue  `protobuf:"bytes,803,opt,name=speedtest_tcp_8_upload_mbps_max,json=speedtestTcp8UploadMbpsMax,proto3" json:"speedtest_tcp_8_upload_mbps_max,omitempty"`
	SpeedtestTcp_64DownloadMbpsAvg          *wrapperspb.FloatValue  `protobuf:"bytes,804,opt,name=speedtest_tcp_64_download_mbps_avg,json=speedtestTcp64DownloadMbpsAvg,proto3" json:"speedtest_tcp_64_download_mbps_avg,omitempty"`
	SpeedtestTcp_64DownloadMbpsMax          *wrapperspb.FloatValue  `protobuf:"bytes,805,opt,name=speedtest_tcp_64_download_mbps_max,json=speedtestTcp64DownloadMbpsMax,proto3" json:"speedtest_tcp_64_download_mbps_max,omitempty"`
	SpeedtestTcp_64UploadMbpsAvg            *wrapperspb.FloatValue  `protobuf:"bytes,806,opt,name=speedtest_tcp_64_upload_mbps_avg,json=speedtestTcp64UploadMbpsAvg,proto3" json:"speedtest_tcp_64_upload_mbps_avg,omitempty"`
	SpeedtestTcp_64UploadMbpsMax            *wrapperspb.FloatValue  `protobuf:"bytes,807,opt,name=speedtest_tcp_64_upload_mbps_max,json=speedtestTcp64UploadMbpsMax,proto3" json:"speedtest_tcp_64_upload_mbps_max,omitempty"`
	SpeedtestTcp_1DownloadMbpsAvg           *wrapperspb.FloatValue  `protobuf:"bytes,808,opt,name=speedtest_tcp_1_download_mbps_avg,json=speedtestTcp1DownloadMbpsAvg,proto3" json:"speedtest_tcp_1_download_mbps_avg,omitempty"`
	SpeedtestTcp_1DownloadMbpsMax           *wrapperspb.FloatValue  `protobuf:"bytes,809,opt,name=speedtest_tcp_1_download_mbps_max,json=speedtestTcp1DownloadMbpsMax,proto3" json:"speedtest_tcp_1_download_mbps_max,omitempty"`
	SpeedtestTcp_1UploadMbpsAvg             *wrapperspb.FloatValue  `protobuf:"bytes,810,opt,name=speedtest_tcp_1_upload_mbps_avg,json=speedtestTcp1UploadMbpsAvg,proto3" json:"speedtest_tcp_1_upload_mbps_avg,omitempty"`
	SpeedtestTcp_1UploadMbpsMax             *wrapperspb.FloatValue  `protobuf:"bytes,811,opt,name=speedtest_tcp_1_upload_mbps_max,json=speedtestTcp1UploadMbpsMax,proto3" json:"speedtest_tcp_1_upload_mbps_max,omitempty"`
	DishCellId                              *wrapperspb.UInt32Value `protobuf:"bytes,900,opt,name=dish_cell_id,json=dishCellId,proto3" json:"dish_cell_id,omitempty"`
	ConfigSetupComplete                     *wrapperspb.BoolValue   `protobuf:"bytes,1000,opt,name=config_setup_complete,json=configSetupComplete,proto3" json:"config_setup_complete,omitempty"`
	ConfigBandsSplit                        *wrapperspb.BoolValue   `protobuf:"bytes,1001,opt,name=config_bands_split,json=configBandsSplit,proto3" json:"config_bands_split,omitempty"`
	ConfigIsRepeater                        *wrapperspb.BoolValue   `protobuf:"bytes,1002,opt,name=config_is_repeater,json=configIsRepeater,proto3" json:"config_is_repeater,omitempty"`
	ConfigOpenNetwork                       *wrapperspb.BoolValue   `protobuf:"bytes,1003,opt,name=config_open_network,json=configOpenNetwork,proto3" json:"config_open_network,omitempty"`
	ConfigIsAviation                        *wrapperspb.BoolValue   `protobuf:"bytes,1004,opt,name=config_is_aviation,json=configIsAviation,proto3" json:"config_is_aviation,omitempty"`
	ConfigSecureDns                         *wrapperspb.BoolValue   `protobuf:"bytes,1005,opt,name=config_secure_dns,json=configSecureDns,proto3" json:"config_secure_dns,omitempty"`
	ConfigLegacy                            *wrapperspb.BoolValue   `protobuf:"bytes,1006,opt,name=config_legacy,json=configLegacy,proto3" json:"config_legacy,omitempty"`
	ConfigApMode                            *wrapperspb.BoolValue   `protobuf:"bytes,1007,opt,name=config_ap_mode,json=configApMode,proto3" json:"config_ap_mode,omitempty"`
	ConfigDfsEnabled                        *wrapperspb.BoolValue   `protobuf:"bytes,1008,opt,name=config_dfs_enabled,json=configDfsEnabled,proto3" json:"config_dfs_enabled,omitempty"`
	ConfigNetworkNameIsDefault              *wrapperspb.BoolValue   `protobuf:"bytes,1009,opt,name=config_network_name_is_default,json=configNetworkNameIsDefault,proto3" json:"config_network_name_is_default,omitempty"`
	ConfigRemoteSshEnabled                  *wrapperspb.BoolValue   `protobuf:"bytes,1010,opt,name=config_remote_ssh_enabled,json=configRemoteSshEnabled,proto3" json:"config_remote_ssh_enabled,omitempty"`
	ConfigIsRepeaterWired                   *wrapperspb.BoolValue   `protobuf:"bytes,1011,opt,name=config_is_repeater_wired,json=configIsRepeaterWired,proto3" json:"config_is_repeater_wired,omitempty"`
	ConfigIsRepeaterWireless                *wrapperspb.BoolValue   `protobuf:"bytes,1012,opt,name=config_is_repeater_wireless,json=configIsRepeaterWireless,proto3" json:"config_is_repeater_wireless,omitempty"`
	ConfigBlockSchedulesSet                 *wrapperspb.UInt32Value `protobuf:"bytes,1013,opt,name=config_block_schedules_set,json=configBlockSchedulesSet,proto3" json:"config_block_schedules_set,omitempty"`
	ConfigCustomNameservers                 *wrapperspb.BoolValue   `protobuf:"bytes,1014,opt,name=config_custom_nameservers,json=configCustomNameservers,proto3" json:"config_custom_nameservers,omitempty"`
	ConfigDisableMeshOnboarding             *wrapperspb.BoolValue   `protobuf:"bytes,1015,opt,name=config_disable_mesh_onboarding,json=configDisableMeshOnboarding,proto3" json:"config_disable_mesh_onboarding,omitempty"`
	ConfigPinCountryCode                    *wrapperspb.BoolValue   `protobuf:"bytes,1016,opt,name=config_pin_country_code,json=configPinCountryCode,proto3" json:"config_pin_country_code,omitempty"`
	ConfigDisableUpdateReboot               *wrapperspb.BoolValue   `protobuf:"bytes,1017,opt,name=config_disable_update_reboot,json=configDisableUpdateReboot,proto3" json:"config_disable_update_reboot,omitempty"`
	ConfigHttpsContentHostingEnabled        *wrapperspb.BoolValue   `protobuf:"bytes,1031,opt,name=config_https_content_hosting_enabled,json=configHttpsContentHostingEnabled,proto3" json:"config_https_content_hosting_enabled,omitempty"`
	ConfigOnlyOverflightBlockingEnabled     *wrapperspb.BoolValue   `protobuf:"bytes,1032,opt,name=config_only_overflight_blocking_enabled,json=configOnlyOverflightBlockingEnabled,proto3" json:"config_only_overflight_blocking_enabled,omitempty"`
	ConfigOfflineNetworksDisablementEnabled *wrapperspb.BoolValue   `protobuf:"bytes,1033,opt,name=config_offline_networks_disablement_enabled,json=configOfflineNetworksDisablementEnabled,proto3" json:"config_offline_networks_disablement_enabled,omitempty"`
	ConfigDisable_2Ghz                      *wrapperspb.BoolValue   `protobuf:"bytes,1018,opt,name=config_disable_2ghz,json=configDisable2ghz,proto3" json:"config_disable_2ghz,omitempty"`
	ConfigDisable_5Ghz                      *wrapperspb.BoolValue   `protobuf:"bytes,1019,opt,name=config_disable_5ghz,json=configDisable5ghz,proto3" json:"config_disable_5ghz,omitempty"`
	ConfigDisable_5GhzHigh                  *wrapperspb.BoolValue   `protobuf:"bytes,1029,opt,name=config_disable_5ghz_high,json=configDisable5ghzHigh,proto3" json:"config_disable_5ghz_high,omitempty"`
	ConfigChannel_2Ghz                      *wrapperspb.UInt32Value `protobuf:"bytes,1020,opt,name=config_channel_2ghz,json=configChannel2ghz,proto3" json:"config_channel_2ghz,omitempty"`
	ConfigChannel_5Ghz                      *wrapperspb.UInt32Value `protobuf:"bytes,1021,opt,name=config_channel_5ghz,json=configChannel5ghz,proto3" json:"config_channel_5ghz,omitempty"`
	ConfigChannel_5GhzHigh                  *wrapperspb.UInt32Value `protobuf:"bytes,1022,opt,name=config_channel_5ghz_high,json=configChannel5ghzHigh,proto3" json:"config_channel_5ghz_high,omitempty"`
	ConfigNetworks                          *wrapperspb.UInt32Value `protobuf:"bytes,1023,opt,name=config_networks,json=configNetworks,proto3" json:"config_networks,omitempty"`
	ConfigNetworksGuest                     *wrapperspb.UInt32Value `protobuf:"bytes,1024,opt,name=config_networks_guest,json=configNetworksGuest,proto3" json:"config_networks_guest,omitempty"`
	ConfigNetworksHidden                    *wrapperspb.UInt32Value `protobuf:"bytes,1025,opt,name=config_networks_hidden,json=configNetworksHidden,proto3" json:"config_networks_hidden,omitempty"`
	ConfigNetworksClientIsolation           *wrapperspb.UInt32Value `protobuf:"bytes,1026,opt,name=config_networks_client_isolation,json=configNetworksClientIsolation,proto3" json:"config_networks_client_isolation,omitempty"`
	ConfigNetworksBandsSplit                *wrapperspb.UInt32Value `protobuf:"bytes,1027,opt,name=config_networks_bands_split,json=configNetworksBandsSplit,proto3" json:"config_networks_bands_split,omitempty"`
	WanTrafficControlCakeBytes              *wrapperspb.Int64Value  `protobuf:"bytes,1101,opt,name=wan_traffic_control_cake_bytes,json=wanTrafficControlCakeBytes,proto3" json:"wan_traffic_control_cake_bytes,omitempty"`
	WanTrafficControlCakePackets            *wrapperspb.Int64Value  `protobuf:"bytes,1102,opt,name=wan_traffic_control_cake_packets,json=wanTrafficControlCakePackets,proto3" json:"wan_traffic_control_cake_packets,omitempty"`
	WanTrafficControlCakeDrops              *wrapperspb.Int64Value  `protobuf:"bytes,1103,opt,name=wan_traffic_control_cake_drops,json=wanTrafficControlCakeDrops,proto3" json:"wan_traffic_control_cake_drops,omitempty"`
	WanTrafficControlCakeAckDrops           *wrapperspb.Int64Value  `protobuf:"bytes,1104,opt,name=wan_traffic_control_cake_ack_drops,json=wanTrafficControlCakeAckDrops,proto3" json:"wan_traffic_control_cake_ack_drops,omitempty"`
	ConntrackEntries                        *wrapperspb.UInt32Value `protobuf:"bytes,1100,opt,name=conntrack_entries,json=conntrackEntries,proto3" json:"conntrack_entries,omitempty"`
	DhcpSecsEq_0                            *wrapperspb.UInt32Value `protobuf:"bytes,1105,opt,name=dhcp_secs_eq_0,json=dhcpSecsEq0,proto3" json:"dhcp_secs_eq_0,omitempty"`
	DhcpSecsGt_0                            *wrapperspb.UInt32Value `protobuf:"bytes,1106,opt,name=dhcp_secs_gt_0,json=dhcpSecsGt0,proto3" json:"dhcp_secs_gt_0,omitempty"`
	DhcpSecsGt_10                           *wrapperspb.UInt32Value `protobuf:"bytes,1107,opt,name=dhcp_secs_gt_10,json=dhcpSecsGt10,proto3" json:"dhcp_secs_gt_10,omitempty"`
	DhcpSecsGt_30                           *wrapperspb.UInt32Value `protobuf:"bytes,1108,opt,name=dhcp_secs_gt_30,json=dhcpSecsGt30,proto3" json:"dhcp_secs_gt_30,omitempty"`
	DhcpSecsGt_60                           *wrapperspb.UInt32Value `protobuf:"bytes,1109,opt,name=dhcp_secs_gt_60,json=dhcpSecsGt60,proto3" json:"dhcp_secs_gt_60,omitempty"`
	DnsForwards                             *wrapperspb.UInt32Value `protobuf:"bytes,1200,opt,name=dns_forwards,json=dnsForwards,proto3" json:"dns_forwards,omitempty"`
	DnsForwardsSuccess                      *wrapperspb.UInt32Value `protobuf:"bytes,1201,opt,name=dns_forwards_success,json=dnsForwardsSuccess,proto3" json:"dns_forwards_success,omitempty"`
	DnsForwardsServerFailure                *wrapperspb.UInt32Value `protobuf:"bytes,1202,opt,name=dns_forwards_server_failure,json=dnsForwardsServerFailure,proto3" json:"dns_forwards_server_failure,omitempty"`
	DnsForwardsNoServerResponse             *wrapperspb.UInt32Value `protobuf:"bytes,1203,opt,name=dns_forwards_no_server_response,json=dnsForwardsNoServerResponse,proto3" json:"dns_forwards_no_server_response,omitempty"`
	DnsForwardsSuccessOnDefaultBackup       *wrapperspb.UInt32Value `protobuf:"bytes,1204,opt,name=dns_forwards_success_on_default_backup,json=dnsForwardsSuccessOnDefaultBackup,proto3" json:"dns_forwards_success_on_default_backup,omitempty"`
	DnsForwardsDropped                      *wrapperspb.UInt32Value `protobuf:"bytes,1205,opt,name=dns_forwards_dropped,json=dnsForwardsDropped,proto3" json:"dns_forwards_dropped,omitempty"`
	DnsForwardsWithBackup                   *wrapperspb.UInt32Value `protobuf:"bytes,1206,opt,name=dns_forwards_with_backup,json=dnsForwardsWithBackup,proto3" json:"dns_forwards_with_backup,omitempty"`
	unknownFields                           protoimpl.UnknownFields
	sizeCache                               protoimpl.SizeCache
}

func (x *StarlinkRoutersHourlyMetricsV2) Reset() {
	*x = StarlinkRoutersHourlyMetricsV2{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarlinkRoutersHourlyMetricsV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarlinkRoutersHourlyMetricsV2) ProtoMessage() {}

func (x *StarlinkRoutersHourlyMetricsV2) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarlinkRoutersHourlyMetricsV2.ProtoReflect.Descriptor instead.
func (*StarlinkRoutersHourlyMetricsV2) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{45}
}

func (x *StarlinkRoutersHourlyMetricsV2) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetTimestampDate() *wrapperspb.StringValue {
	if x != nil {
		return x.TimestampDate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetTimestampHour() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TimestampHour
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetTimestamp() *common.TimestampInfo {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysHwGen() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysHwGen
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysSw() *wrapperspb.StringValue {
	if x != nil {
		return x.SysSw
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysCountry() *wrapperspb.StringValue {
	if x != nil {
		return x.SysCountry
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysIsDev() *wrapperspb.BoolValue {
	if x != nil {
		return x.SysIsDev
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysAllocFds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysAllocFds
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysCpuUsage() *wrapperspb.FloatValue {
	if x != nil {
		return x.SysCpuUsage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysMemFreeKb() *wrapperspb.FloatValue {
	if x != nil {
		return x.SysMemFreeKb
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysBootcount() *wrapperspb.Int32Value {
	if x != nil {
		return x.SysBootcount
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysPartitionsEqual() *wrapperspb.BoolValue {
	if x != nil {
		return x.SysPartitionsEqual
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysUptimeSeconds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysUptimeSeconds
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysAntiRollbackVersion() *wrapperspb.Int32Value {
	if x != nil {
		return x.SysAntiRollbackVersion
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysIsWitl() *wrapperspb.BoolValue {
	if x != nil {
		return x.SysIsWitl
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysIsAviationConformed() *wrapperspb.BoolValue {
	if x != nil {
		return x.SysIsAviationConformed
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysUbiMaxEc() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysUbiMaxEc
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysUbiBadPeb() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysUbiBadPeb
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSysBoardRev() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysBoardRev
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzChannel() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzChannel
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzAntenna1Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna1Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzAntenna2Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna2Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzAntenna3Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna3Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzAntenna4Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna4Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzAntenna1Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna1Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzAntenna2Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna2Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzAntenna3Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna3Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzAntenna4Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna4Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzIfaceCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzIfaceCount
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzChanBusyFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzChanBusyFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzEdccaFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzEdccaFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzOverlappingBssFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzOverlappingBssFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzRxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_2GhzRxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzRxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_2GhzRxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzRxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_2GhzRxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzRxFrameErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_2GhzRxFrameErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzRxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzRxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzRxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzRxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzTxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_2GhzTxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzTxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_2GhzTxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzTxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_2GhzTxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzTxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzTxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzTxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzTxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzChannel() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzChannel
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzAntenna1Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna1Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzAntenna2Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna2Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzAntenna3Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna3Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzAntenna4Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna4Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzAntenna1Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna1Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzAntenna2Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna2Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzAntenna3Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna3Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzAntenna4Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna4Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzIfaceCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzIfaceCount
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzChanBusyFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzChanBusyFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzEdccaFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzEdccaFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzOverlappingBssFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzOverlappingBssFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzRxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzRxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzRxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzRxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzRxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzRxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzRxFrameErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzRxFrameErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzRxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzRxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzRxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzRxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzTxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzTxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzTxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzTxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzTxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzTxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzTxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzTxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzTxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzTxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighChannel() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzHighChannel
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighAntenna1Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighAntenna1Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighAntenna2Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighAntenna2Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighAntenna3Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighAntenna3Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighAntenna4Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighAntenna4Rssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighAntenna1Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighAntenna1Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighAntenna2Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighAntenna2Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighAntenna3Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighAntenna3Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighAntenna4Tssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighAntenna4Tssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighIfaceCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzHighIfaceCount
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighChanBusyFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighChanBusyFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighEdccaFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighEdccaFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighOverlappingBssFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighOverlappingBssFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighRxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzHighRxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighRxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzHighRxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighRxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzHighRxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighRxFrameErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzHighRxFrameErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighRxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighRxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighRxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighRxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighTxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzHighTxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighTxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzHighTxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighTxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.Radios_5GhzHighTxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighTxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighTxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighTxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighTxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzThermalTemp() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzThermalTemp
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzThermalTemp() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzThermalTemp
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighThermalTemp() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighThermalTemp
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzThermalDutyCycle() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzThermalDutyCycle
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzThermalDutyCycle() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzThermalDutyCycle
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighThermalDutyCycle() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzHighThermalDutyCycle
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_2GhzThermalThrottledSeconds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzThermalThrottledSeconds
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzThermalThrottledSeconds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzThermalThrottledSeconds
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRadios_5GhzHighThermalThrottledSeconds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzHighThermalThrottledSeconds
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetBoardTemp() *wrapperspb.FloatValue {
	if x != nil {
		return x.BoardTemp
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPoeMcuDieTemp() *wrapperspb.FloatValue {
	if x != nil {
		return x.PoeMcuDieTemp
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPoePercentWaterDetectAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.PoePercentWaterDetectAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLanEthRxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLanEthRxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLanEthRxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLanEthRxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLanEthRxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLanEthRxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLanEthRxFrameErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLanEthRxFrameErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLanEthTxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLanEthTxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLanEthTxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLanEthTxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLanEthTxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLanEthTxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLan1EthRxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLan1EthRxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLan1EthRxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLan1EthRxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLan1EthRxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLan1EthRxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLan1EthRxFrameErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLan1EthRxFrameErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLan1EthTxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLan1EthTxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLan1EthTxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLan1EthTxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesLan1EthTxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesLan1EthTxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesWanEthRxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesWanEthRxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesWanEthRxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesWanEthRxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesWanEthRxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesWanEthRxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesWanEthRxFrameErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesWanEthRxFrameErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesWanEthTxBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesWanEthTxBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesWanEthTxPackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesWanEthTxPackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetIfacesWanEthTxErrors() *wrapperspb.Int64Value {
	if x != nil {
		return x.IfacesWanEthTxErrors
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClients() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClients_2Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients_2Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClients_5Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients_5Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClients_5GhzHigh() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients_5GhzHigh
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientsEth() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsEth
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClients_5GhzRxBandwidth_20Mhz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients_5GhzRxBandwidth_20Mhz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClients_5GhzRxBandwidth_40Mhz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients_5GhzRxBandwidth_40Mhz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClients_5GhzRxBandwidth_80Mhz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients_5GhzRxBandwidth_80Mhz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientsRepeater() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeater
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientsRepeater_2Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeater_2Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientsRepeater_5Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeater_5Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientsRepeater_5GhzHigh() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeater_5GhzHigh
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientsRepeaterEth() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeaterEth
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetMeshHops() *wrapperspb.UInt32Value {
	if x != nil {
		return x.MeshHops
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetMeshOneHopRssiAvg_2Ghz() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshOneHopRssiAvg_2Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetMeshOneHopRssiAvg_5Ghz() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshOneHopRssiAvg_5Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetMeshOneHopRssiAvg_5GhzHigh() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshOneHopRssiAvg_5GhzHigh
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetMeshTwoHopRssiAvg_2Ghz() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshTwoHopRssiAvg_2Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetMeshTwoHopRssiAvg_5Ghz() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshTwoHopRssiAvg_5Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetMeshTwoHopRssiAvg_5GhzHigh() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshTwoHopRssiAvg_5GhzHigh
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterTxRateMbpsMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterTxRateMbpsMin
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterRxRateMbpsMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterRxRateMbpsMin
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterTxRateMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterTxRateMbpsAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterRxRateMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterRxRateMbpsAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterSecondsSince_2SOutageMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterSecondsSince_2SOutageMin
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterSecondsSince_5SOutageMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterSecondsSince_5SOutageMin
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterSecondsSince_2SOutageAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterSecondsSince_2SOutageAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterSecondsSince_5SOutageAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterSecondsSince_5SOutageAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterLatencyMs_1HMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterLatencyMs_1HMax
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetRepeaterLatencyMs_1HAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.RepeaterLatencyMs_1HAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetMeshTopologyChangeCount_1D() *wrapperspb.UInt32Value {
	if x != nil {
		return x.MeshTopologyChangeCount_1D
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingSecondsSinceLast_1SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_1SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingSecondsSinceLast_2SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_2SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingSecondsSinceLast_5SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_5SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingSecondsSinceLast_60SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_60SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingSecondsSinceLast_300SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_300SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDropRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDropRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDropRateLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDropRateLast_1H
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingLatency() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingLatency
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingLatencyLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingLatencyLast_1H
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishSecondsSinceLast_1SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_1SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishSecondsSinceLast_2SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_2SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishSecondsSinceLast_5SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_5SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishSecondsSinceLast_60SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_60SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishSecondsSinceLast_300SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_300SOutage
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishDropRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishDropRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishDropRateLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishDropRateLast_1H
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishLatency() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishLatency
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingDishLatencyLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishLatencyLast_1H
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingPopIpv6DropRateLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingPopIpv6DropRateLast_1H
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetPingPopIpv6LatencyLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingPopIpv6LatencyLast_1H
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestRouterDownloadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestRouterDownloadMbps
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestRouterUploadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestRouterUploadMbps
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestRouterRssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestRouterRssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestWifiDownloadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestWifiDownloadMbps
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestWifiUploadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestWifiUploadMbps
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestClientDownloadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestClientDownloadMbps
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestClientUploadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestClientUploadMbps
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestClientRssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestClientRssi
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestClientIface() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientSpeedtestClientIface
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestClientOui() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientSpeedtestClientOui
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestClientTxRate() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientSpeedtestClientTxRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestClientRxRate() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientSpeedtestClientRxRate
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetClientSpeedtestClientPlatformType() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientSpeedtestClientPlatformType
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_8DownloadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_8DownloadMbpsAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_8DownloadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_8DownloadMbpsMax
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_8UploadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_8UploadMbpsAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_8UploadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_8UploadMbpsMax
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_64DownloadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_64DownloadMbpsAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_64DownloadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_64DownloadMbpsMax
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_64UploadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_64UploadMbpsAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_64UploadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_64UploadMbpsMax
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_1DownloadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_1DownloadMbpsAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_1DownloadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_1DownloadMbpsMax
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_1UploadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_1UploadMbpsAvg
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetSpeedtestTcp_1UploadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_1UploadMbpsMax
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDishCellId() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DishCellId
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigSetupComplete() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigSetupComplete
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigBandsSplit() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigBandsSplit
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigIsRepeater() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigIsRepeater
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigOpenNetwork() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigOpenNetwork
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigIsAviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigIsAviation
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigSecureDns() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigSecureDns
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigLegacy() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigLegacy
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigApMode() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigApMode
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigDfsEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigDfsEnabled
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigNetworkNameIsDefault() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigNetworkNameIsDefault
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigRemoteSshEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigRemoteSshEnabled
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigIsRepeaterWired() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigIsRepeaterWired
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigIsRepeaterWireless() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigIsRepeaterWireless
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigBlockSchedulesSet() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigBlockSchedulesSet
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigCustomNameservers() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigCustomNameservers
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigDisableMeshOnboarding() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigDisableMeshOnboarding
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigPinCountryCode() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigPinCountryCode
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigDisableUpdateReboot() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigDisableUpdateReboot
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigHttpsContentHostingEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigHttpsContentHostingEnabled
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigOnlyOverflightBlockingEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigOnlyOverflightBlockingEnabled
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigOfflineNetworksDisablementEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigOfflineNetworksDisablementEnabled
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigDisable_2Ghz() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigDisable_2Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigDisable_5Ghz() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigDisable_5Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigDisable_5GhzHigh() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigDisable_5GhzHigh
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigChannel_2Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigChannel_2Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigChannel_5Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigChannel_5Ghz
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigChannel_5GhzHigh() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigChannel_5GhzHigh
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigNetworks() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigNetworks
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigNetworksGuest() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigNetworksGuest
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigNetworksHidden() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigNetworksHidden
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigNetworksClientIsolation() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigNetworksClientIsolation
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConfigNetworksBandsSplit() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConfigNetworksBandsSplit
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetWanTrafficControlCakeBytes() *wrapperspb.Int64Value {
	if x != nil {
		return x.WanTrafficControlCakeBytes
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetWanTrafficControlCakePackets() *wrapperspb.Int64Value {
	if x != nil {
		return x.WanTrafficControlCakePackets
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetWanTrafficControlCakeDrops() *wrapperspb.Int64Value {
	if x != nil {
		return x.WanTrafficControlCakeDrops
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetWanTrafficControlCakeAckDrops() *wrapperspb.Int64Value {
	if x != nil {
		return x.WanTrafficControlCakeAckDrops
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetConntrackEntries() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConntrackEntries
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDhcpSecsEq_0() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DhcpSecsEq_0
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDhcpSecsGt_0() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DhcpSecsGt_0
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDhcpSecsGt_10() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DhcpSecsGt_10
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDhcpSecsGt_30() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DhcpSecsGt_30
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDhcpSecsGt_60() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DhcpSecsGt_60
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDnsForwards() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DnsForwards
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDnsForwardsSuccess() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DnsForwardsSuccess
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDnsForwardsServerFailure() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DnsForwardsServerFailure
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDnsForwardsNoServerResponse() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DnsForwardsNoServerResponse
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDnsForwardsSuccessOnDefaultBackup() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DnsForwardsSuccessOnDefaultBackup
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDnsForwardsDropped() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DnsForwardsDropped
	}
	return nil
}

func (x *StarlinkRoutersHourlyMetricsV2) GetDnsForwardsWithBackup() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DnsForwardsWithBackup
	}
	return nil
}

type StarlinkRouterAlerts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Active        bool                   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Start         *common.TimestampInfo  `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	End           *common.TimestampInfo  `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	Hardware      string                 `protobuf:"bytes,6,opt,name=hardware,proto3" json:"hardware,omitempty"`
	Software      string                 `protobuf:"bytes,7,opt,name=software,proto3" json:"software,omitempty"`
	Details       string                 `protobuf:"bytes,8,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StarlinkRouterAlerts) Reset() {
	*x = StarlinkRouterAlerts{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarlinkRouterAlerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarlinkRouterAlerts) ProtoMessage() {}

func (x *StarlinkRouterAlerts) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarlinkRouterAlerts.ProtoReflect.Descriptor instead.
func (*StarlinkRouterAlerts) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{46}
}

func (x *StarlinkRouterAlerts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StarlinkRouterAlerts) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *StarlinkRouterAlerts) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *StarlinkRouterAlerts) GetStart() *common.TimestampInfo {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *StarlinkRouterAlerts) GetEnd() *common.TimestampInfo {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *StarlinkRouterAlerts) GetHardware() string {
	if x != nil {
		return x.Hardware
	}
	return ""
}

func (x *StarlinkRouterAlerts) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *StarlinkRouterAlerts) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type StarlinkRouterClientSpeedtests struct {
	state                   protoimpl.MessageState  `protogen:"open.v1"`
	Id                      string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DataRecord              *common.TimestampInfo   `protobuf:"bytes,2,opt,name=data_record,json=dataRecord,proto3" json:"data_record,omitempty"`
	Country                 string                  `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	SpeedtestId             *wrapperspb.StringValue `protobuf:"bytes,30,opt,name=speedtest_id,json=speedtestId,proto3" json:"speedtest_id,omitempty"`
	ClientRssi              *wrapperspb.FloatValue  `protobuf:"bytes,8,opt,name=client_rssi,json=clientRssi,proto3" json:"client_rssi,omitempty"`
	RouterRssi              *wrapperspb.FloatValue  `protobuf:"bytes,9,opt,name=router_rssi,json=routerRssi,proto3" json:"router_rssi,omitempty"`
	ClientIface             *wrapperspb.UInt32Value `protobuf:"bytes,10,opt,name=client_iface,json=clientIface,proto3" json:"client_iface,omitempty"`
	ClientOui               *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=client_oui,json=clientOui,proto3" json:"client_oui,omitempty"`
	ClientTxRate            *wrapperspb.UInt32Value `protobuf:"bytes,12,opt,name=client_tx_rate,json=clientTxRate,proto3" json:"client_tx_rate,omitempty"`
	ClientRxRate            *wrapperspb.UInt32Value `protobuf:"bytes,13,opt,name=client_rx_rate,json=clientRxRate,proto3" json:"client_rx_rate,omitempty"`
	ClientPlatformType      *wrapperspb.StringValue `protobuf:"bytes,27,opt,name=client_platform_type,json=clientPlatformType,proto3" json:"client_platform_type,omitempty"`
	ClientAppVersion        *wrapperspb.StringValue `protobuf:"bytes,34,opt,name=client_app_version,json=clientAppVersion,proto3" json:"client_app_version,omitempty"`
	ClientAppBuild          *wrapperspb.UInt32Value `protobuf:"bytes,35,opt,name=client_app_build,json=clientAppBuild,proto3" json:"client_app_build,omitempty"`
	ClientRxPhyMode         *wrapperspb.UInt32Value `protobuf:"bytes,31,opt,name=client_rx_phy_mode,json=clientRxPhyMode,proto3" json:"client_rx_phy_mode,omitempty"`
	ClientRxSpatialStreams  *wrapperspb.UInt32Value `protobuf:"bytes,32,opt,name=client_rx_spatial_streams,json=clientRxSpatialStreams,proto3" json:"client_rx_spatial_streams,omitempty"`
	ClientRxMcs             *wrapperspb.UInt32Value `protobuf:"bytes,33,opt,name=client_rx_mcs,json=clientRxMcs,proto3" json:"client_rx_mcs,omitempty"`
	ClientDownloadStartTime *common.TimestampInfo   `protobuf:"bytes,4,opt,name=client_download_start_time,json=clientDownloadStartTime,proto3" json:"client_download_start_time,omitempty"`
	ClientUploadStartTime   *common.TimestampInfo   `protobuf:"bytes,5,opt,name=client_upload_start_time,json=clientUploadStartTime,proto3" json:"client_upload_start_time,omitempty"`
	ClientDownloadMbpsAvg   *wrapperspb.FloatValue  `protobuf:"bytes,6,opt,name=client_download_mbps_avg,json=clientDownloadMbpsAvg,proto3" json:"client_download_mbps_avg,omitempty"`
	ClientUploadMbpsAvg     *wrapperspb.FloatValue  `protobuf:"bytes,7,opt,name=client_upload_mbps_avg,json=clientUploadMbpsAvg,proto3" json:"client_upload_mbps_avg,omitempty"`
	ClientTarget            *wrapperspb.StringValue `protobuf:"bytes,28,opt,name=client_target,json=clientTarget,proto3" json:"client_target,omitempty"`
	ClientTcpStreams        *wrapperspb.UInt32Value `protobuf:"bytes,16,opt,name=client_tcp_streams,json=clientTcpStreams,proto3" json:"client_tcp_streams,omitempty"`
	RouterDownloadStartTime *common.TimestampInfo   `protobuf:"bytes,17,opt,name=router_download_start_time,json=routerDownloadStartTime,proto3" json:"router_download_start_time,omitempty"`
	RouterUploadStartTime   *common.TimestampInfo   `protobuf:"bytes,18,opt,name=router_upload_start_time,json=routerUploadStartTime,proto3" json:"router_upload_start_time,omitempty"`
	RouterDownloadMbpsAvg   *wrapperspb.FloatValue  `protobuf:"bytes,19,opt,name=router_download_mbps_avg,json=routerDownloadMbpsAvg,proto3" json:"router_download_mbps_avg,omitempty"`
	RouterUploadMbpsAvg     *wrapperspb.FloatValue  `protobuf:"bytes,20,opt,name=router_upload_mbps_avg,json=routerUploadMbpsAvg,proto3" json:"router_upload_mbps_avg,omitempty"`
	RouterTarget            *wrapperspb.StringValue `protobuf:"bytes,29,opt,name=router_target,json=routerTarget,proto3" json:"router_target,omitempty"`
	RouterTcpStreams        *wrapperspb.UInt32Value `protobuf:"bytes,22,opt,name=router_tcp_streams,json=routerTcpStreams,proto3" json:"router_tcp_streams,omitempty"`
	WifiDownloadStartTime   *common.TimestampInfo   `protobuf:"bytes,23,opt,name=wifi_download_start_time,json=wifiDownloadStartTime,proto3" json:"wifi_download_start_time,omitempty"`
	WifiUploadStartTime     *common.TimestampInfo   `protobuf:"bytes,24,opt,name=wifi_upload_start_time,json=wifiUploadStartTime,proto3" json:"wifi_upload_start_time,omitempty"`
	WifiDownloadMbpsAvg     *wrapperspb.FloatValue  `protobuf:"bytes,25,opt,name=wifi_download_mbps_avg,json=wifiDownloadMbpsAvg,proto3" json:"wifi_download_mbps_avg,omitempty"`
	WifiUploadMbpsAvg       *wrapperspb.FloatValue  `protobuf:"bytes,26,opt,name=wifi_upload_mbps_avg,json=wifiUploadMbpsAvg,proto3" json:"wifi_upload_mbps_avg,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *StarlinkRouterClientSpeedtests) Reset() {
	*x = StarlinkRouterClientSpeedtests{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarlinkRouterClientSpeedtests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarlinkRouterClientSpeedtests) ProtoMessage() {}

func (x *StarlinkRouterClientSpeedtests) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarlinkRouterClientSpeedtests.ProtoReflect.Descriptor instead.
func (*StarlinkRouterClientSpeedtests) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{47}
}

func (x *StarlinkRouterClientSpeedtests) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StarlinkRouterClientSpeedtests) GetDataRecord() *common.TimestampInfo {
	if x != nil {
		return x.DataRecord
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *StarlinkRouterClientSpeedtests) GetSpeedtestId() *wrapperspb.StringValue {
	if x != nil {
		return x.SpeedtestId
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientRssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientRssi
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetRouterRssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.RouterRssi
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientIface() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientIface
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientOui() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientOui
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientTxRate() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientTxRate
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientRxRate() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientRxRate
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientPlatformType() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientPlatformType
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientAppVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientAppVersion
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientAppBuild() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientAppBuild
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientRxPhyMode() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientRxPhyMode
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientRxSpatialStreams() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientRxSpatialStreams
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientRxMcs() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientRxMcs
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientDownloadStartTime() *common.TimestampInfo {
	if x != nil {
		return x.ClientDownloadStartTime
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientUploadStartTime() *common.TimestampInfo {
	if x != nil {
		return x.ClientUploadStartTime
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientDownloadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientDownloadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientUploadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientUploadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientTarget() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientTarget
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetClientTcpStreams() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientTcpStreams
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetRouterDownloadStartTime() *common.TimestampInfo {
	if x != nil {
		return x.RouterDownloadStartTime
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetRouterUploadStartTime() *common.TimestampInfo {
	if x != nil {
		return x.RouterUploadStartTime
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetRouterDownloadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.RouterDownloadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetRouterUploadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.RouterUploadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetRouterTarget() *wrapperspb.StringValue {
	if x != nil {
		return x.RouterTarget
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetRouterTcpStreams() *wrapperspb.UInt32Value {
	if x != nil {
		return x.RouterTcpStreams
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetWifiDownloadStartTime() *common.TimestampInfo {
	if x != nil {
		return x.WifiDownloadStartTime
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetWifiUploadStartTime() *common.TimestampInfo {
	if x != nil {
		return x.WifiUploadStartTime
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetWifiDownloadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.WifiDownloadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterClientSpeedtests) GetWifiUploadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.WifiUploadMbpsAvg
	}
	return nil
}

type StarlinkRouterClients struct {
	state                          protoimpl.MessageState  `protogen:"open.v1"`
	RouterId                       string                  `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	Timestamp                      *common.TimestampInfo   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId                       uint32                  `protobuf:"varint,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientTelemIndex               string                  `protobuf:"bytes,4,opt,name=client_telem_index,json=clientTelemIndex,proto3" json:"client_telem_index,omitempty"`
	RouterHw                       *wrapperspb.StringValue `protobuf:"bytes,119,opt,name=router_hw,json=routerHw,proto3" json:"router_hw,omitempty"`
	RouterSw                       *wrapperspb.StringValue `protobuf:"bytes,120,opt,name=router_sw,json=routerSw,proto3" json:"router_sw,omitempty"`
	RouterUptimeS                  *wrapperspb.UInt32Value `protobuf:"bytes,137,opt,name=router_uptime_s,json=routerUptimeS,proto3" json:"router_uptime_s,omitempty"`
	ClientRouterId                 *wrapperspb.StringValue `protobuf:"bytes,121,opt,name=client_router_id,json=clientRouterId,proto3" json:"client_router_id,omitempty"`
	ClientHw                       *wrapperspb.StringValue `protobuf:"bytes,122,opt,name=client_hw,json=clientHw,proto3" json:"client_hw,omitempty"`
	ClientSw                       *wrapperspb.StringValue `protobuf:"bytes,123,opt,name=client_sw,json=clientSw,proto3" json:"client_sw,omitempty"`
	Oui                            *wrapperspb.StringValue `protobuf:"bytes,101,opt,name=oui,proto3" json:"oui,omitempty"`
	UpstreamId                     *wrapperspb.StringValue `protobuf:"bytes,102,opt,name=upstream_id,json=upstreamId,proto3" json:"upstream_id,omitempty"`
	IsRepeater                     *wrapperspb.BoolValue   `protobuf:"bytes,103,opt,name=is_repeater,json=isRepeater,proto3" json:"is_repeater,omitempty"`
	ConnectedS                     *wrapperspb.UInt32Value `protobuf:"bytes,104,opt,name=connected_s,json=connectedS,proto3" json:"connected_s,omitempty"`
	Interface                      *wrapperspb.StringValue `protobuf:"bytes,105,opt,name=interface,proto3" json:"interface,omitempty"`
	RadioChannel                   *wrapperspb.UInt32Value `protobuf:"bytes,106,opt,name=radio_channel,json=radioChannel,proto3" json:"radio_channel,omitempty"`
	Rssi                           *wrapperspb.FloatValue  `protobuf:"bytes,107,opt,name=rssi,proto3" json:"rssi,omitempty"`
	RxMcs                          *wrapperspb.UInt32Value `protobuf:"bytes,108,opt,name=rx_mcs,json=rxMcs,proto3" json:"rx_mcs,omitempty"`
	TxMcs                          *wrapperspb.UInt32Value `protobuf:"bytes,109,opt,name=tx_mcs,json=txMcs,proto3" json:"tx_mcs,omitempty"`
	RxRate                         *wrapperspb.UInt32Value `protobuf:"bytes,110,opt,name=rx_rate,json=rxRate,proto3" json:"rx_rate,omitempty"`
	TxRate                         *wrapperspb.UInt32Value `protobuf:"bytes,111,opt,name=tx_rate,json=txRate,proto3" json:"tx_rate,omitempty"`
	RxBandwidth                    *wrapperspb.UInt32Value `protobuf:"bytes,112,opt,name=rx_bandwidth,json=rxBandwidth,proto3" json:"rx_bandwidth,omitempty"`
	RxSpatialStreams               *wrapperspb.UInt32Value `protobuf:"bytes,113,opt,name=rx_spatial_streams,json=rxSpatialStreams,proto3" json:"rx_spatial_streams,omitempty"`
	RxPhyMode                      *wrapperspb.UInt32Value `protobuf:"bytes,114,opt,name=rx_phy_mode,json=rxPhyMode,proto3" json:"rx_phy_mode,omitempty"`
	MeshHops                       *wrapperspb.UInt32Value `protobuf:"bytes,118,opt,name=mesh_hops,json=meshHops,proto3" json:"mesh_hops,omitempty"`
	SpeedtestUploadMbps            *wrapperspb.FloatValue  `protobuf:"bytes,124,opt,name=speedtest_upload_mbps,json=speedtestUploadMbps,proto3" json:"speedtest_upload_mbps,omitempty"`
	SpeedtestDownloadMbps          *wrapperspb.FloatValue  `protobuf:"bytes,125,opt,name=speedtest_download_mbps,json=speedtestDownloadMbps,proto3" json:"speedtest_download_mbps,omitempty"`
	SiteSurveyRssi                 *wrapperspb.FloatValue  `protobuf:"bytes,127,opt,name=site_survey_rssi,json=siteSurveyRssi,proto3" json:"site_survey_rssi,omitempty"`
	SiteSurveyEstRxRate            *wrapperspb.FloatValue  `protobuf:"bytes,128,opt,name=site_survey_est_rx_rate,json=siteSurveyEstRxRate,proto3" json:"site_survey_est_rx_rate,omitempty"`
	EstControllerThroughputMbps    *wrapperspb.UInt32Value `protobuf:"bytes,129,opt,name=est_controller_throughput_mbps,json=estControllerThroughputMbps,proto3" json:"est_controller_throughput_mbps,omitempty"`
	PingDropRateLast_1H            *wrapperspb.FloatValue  `protobuf:"bytes,115,opt,name=ping_drop_rate_last_1h,json=pingDropRateLast1h,proto3" json:"ping_drop_rate_last_1h,omitempty"`
	PingLatencyLast_1H             *wrapperspb.FloatValue  `protobuf:"bytes,116,opt,name=ping_latency_last_1h,json=pingLatencyLast1h,proto3" json:"ping_latency_last_1h,omitempty"`
	SteerState                     *wrapperspb.StringValue `protobuf:"bytes,117,opt,name=steer_state,json=steerState,proto3" json:"steer_state,omitempty"`
	Blocked                        *wrapperspb.BoolValue   `protobuf:"bytes,126,opt,name=blocked,proto3" json:"blocked,omitempty"`
	ThroughputLimitedLastFired     *common.TimestampInfo   `protobuf:"bytes,150,opt,name=throughput_limited_last_fired,json=throughputLimitedLastFired,proto3" json:"throughput_limited_last_fired,omitempty"`
	HasDhcpV4Lease                 *wrapperspb.BoolValue   `protobuf:"bytes,130,opt,name=has_dhcp_v4_lease,json=hasDhcpV4Lease,proto3" json:"has_dhcp_v4_lease,omitempty"`
	Ipv4Address                    *wrapperspb.StringValue `protobuf:"bytes,131,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	HasHostname                    *wrapperspb.BoolValue   `protobuf:"bytes,132,opt,name=has_hostname,json=hasHostname,proto3" json:"has_hostname,omitempty"`
	DhcpV4LeaseIsActive            *wrapperspb.BoolValue   `protobuf:"bytes,133,opt,name=dhcp_v4_lease_is_active,json=dhcpV4LeaseIsActive,proto3" json:"dhcp_v4_lease_is_active,omitempty"`
	DhcpV4LeaseWasRenewed          *wrapperspb.BoolValue   `protobuf:"bytes,134,opt,name=dhcp_v4_lease_was_renewed,json=dhcpV4LeaseWasRenewed,proto3" json:"dhcp_v4_lease_was_renewed,omitempty"`
	SecondsUntilDhcpV4LeaseExpires *wrapperspb.FloatValue  `protobuf:"bytes,135,opt,name=seconds_until_dhcp_v4_lease_expires,json=secondsUntilDhcpV4LeaseExpires,proto3" json:"seconds_until_dhcp_v4_lease_expires,omitempty"`
	DissociationsUnder_10S         *wrapperspb.UInt32Value `protobuf:"bytes,138,opt,name=dissociations_under_10s,json=dissociationsUnder10s,proto3" json:"dissociations_under_10s,omitempty"`
	DissociationsUnder_30S         *wrapperspb.UInt32Value `protobuf:"bytes,139,opt,name=dissociations_under_30s,json=dissociationsUnder30s,proto3" json:"dissociations_under_30s,omitempty"`
	DissociationsUnder_60S         *wrapperspb.UInt32Value `protobuf:"bytes,140,opt,name=dissociations_under_60s,json=dissociationsUnder60s,proto3" json:"dissociations_under_60s,omitempty"`
	DissociationsUnder_120S        *wrapperspb.UInt32Value `protobuf:"bytes,141,opt,name=dissociations_under_120s,json=dissociationsUnder120s,proto3" json:"dissociations_under_120s,omitempty"`
	SecondsToConnTcpIpv4           *wrapperspb.FloatValue  `protobuf:"bytes,142,opt,name=seconds_to_conn_tcp_ipv4,json=secondsToConnTcpIpv4,proto3" json:"seconds_to_conn_tcp_ipv4,omitempty"`
	SecondsToConnTcpIpv6           *wrapperspb.FloatValue  `protobuf:"bytes,143,opt,name=seconds_to_conn_tcp_ipv6,json=secondsToConnTcpIpv6,proto3" json:"seconds_to_conn_tcp_ipv6,omitempty"`
	SecondsToConnUdpIpv4           *wrapperspb.FloatValue  `protobuf:"bytes,144,opt,name=seconds_to_conn_udp_ipv4,json=secondsToConnUdpIpv4,proto3" json:"seconds_to_conn_udp_ipv4,omitempty"`
	SecondsToConnUdpIpv6           *wrapperspb.FloatValue  `protobuf:"bytes,145,opt,name=seconds_to_conn_udp_ipv6,json=secondsToConnUdpIpv6,proto3" json:"seconds_to_conn_udp_ipv6,omitempty"`
	FlowsTcpIpv4                   *wrapperspb.UInt32Value `protobuf:"bytes,146,opt,name=flows_tcp_ipv4,json=flowsTcpIpv4,proto3" json:"flows_tcp_ipv4,omitempty"`
	FlowsTcpIpv6                   *wrapperspb.UInt32Value `protobuf:"bytes,147,opt,name=flows_tcp_ipv6,json=flowsTcpIpv6,proto3" json:"flows_tcp_ipv6,omitempty"`
	FlowsUdpIpv4                   *wrapperspb.UInt32Value `protobuf:"bytes,148,opt,name=flows_udp_ipv4,json=flowsUdpIpv4,proto3" json:"flows_udp_ipv4,omitempty"`
	FlowsUdpIpv6                   *wrapperspb.UInt32Value `protobuf:"bytes,149,opt,name=flows_udp_ipv6,json=flowsUdpIpv6,proto3" json:"flows_udp_ipv6,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *StarlinkRouterClients) Reset() {
	*x = StarlinkRouterClients{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarlinkRouterClients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarlinkRouterClients) ProtoMessage() {}

func (x *StarlinkRouterClients) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarlinkRouterClients.ProtoReflect.Descriptor instead.
func (*StarlinkRouterClients) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{48}
}

func (x *StarlinkRouterClients) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *StarlinkRouterClients) GetTimestamp() *common.TimestampInfo {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StarlinkRouterClients) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *StarlinkRouterClients) GetClientTelemIndex() string {
	if x != nil {
		return x.ClientTelemIndex
	}
	return ""
}

func (x *StarlinkRouterClients) GetRouterHw() *wrapperspb.StringValue {
	if x != nil {
		return x.RouterHw
	}
	return nil
}

func (x *StarlinkRouterClients) GetRouterSw() *wrapperspb.StringValue {
	if x != nil {
		return x.RouterSw
	}
	return nil
}

func (x *StarlinkRouterClients) GetRouterUptimeS() *wrapperspb.UInt32Value {
	if x != nil {
		return x.RouterUptimeS
	}
	return nil
}

func (x *StarlinkRouterClients) GetClientRouterId() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientRouterId
	}
	return nil
}

func (x *StarlinkRouterClients) GetClientHw() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientHw
	}
	return nil
}

func (x *StarlinkRouterClients) GetClientSw() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientSw
	}
	return nil
}

func (x *StarlinkRouterClients) GetOui() *wrapperspb.StringValue {
	if x != nil {
		return x.Oui
	}
	return nil
}

func (x *StarlinkRouterClients) GetUpstreamId() *wrapperspb.StringValue {
	if x != nil {
		return x.UpstreamId
	}
	return nil
}

func (x *StarlinkRouterClients) GetIsRepeater() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsRepeater
	}
	return nil
}

func (x *StarlinkRouterClients) GetConnectedS() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ConnectedS
	}
	return nil
}

func (x *StarlinkRouterClients) GetInterface() *wrapperspb.StringValue {
	if x != nil {
		return x.Interface
	}
	return nil
}

func (x *StarlinkRouterClients) GetRadioChannel() *wrapperspb.UInt32Value {
	if x != nil {
		return x.RadioChannel
	}
	return nil
}

func (x *StarlinkRouterClients) GetRssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Rssi
	}
	return nil
}

func (x *StarlinkRouterClients) GetRxMcs() *wrapperspb.UInt32Value {
	if x != nil {
		return x.RxMcs
	}
	return nil
}

func (x *StarlinkRouterClients) GetTxMcs() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TxMcs
	}
	return nil
}

func (x *StarlinkRouterClients) GetRxRate() *wrapperspb.UInt32Value {
	if x != nil {
		return x.RxRate
	}
	return nil
}

func (x *StarlinkRouterClients) GetTxRate() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TxRate
	}
	return nil
}

func (x *StarlinkRouterClients) GetRxBandwidth() *wrapperspb.UInt32Value {
	if x != nil {
		return x.RxBandwidth
	}
	return nil
}

func (x *StarlinkRouterClients) GetRxSpatialStreams() *wrapperspb.UInt32Value {
	if x != nil {
		return x.RxSpatialStreams
	}
	return nil
}

func (x *StarlinkRouterClients) GetRxPhyMode() *wrapperspb.UInt32Value {
	if x != nil {
		return x.RxPhyMode
	}
	return nil
}

func (x *StarlinkRouterClients) GetMeshHops() *wrapperspb.UInt32Value {
	if x != nil {
		return x.MeshHops
	}
	return nil
}

func (x *StarlinkRouterClients) GetSpeedtestUploadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestUploadMbps
	}
	return nil
}

func (x *StarlinkRouterClients) GetSpeedtestDownloadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestDownloadMbps
	}
	return nil
}

func (x *StarlinkRouterClients) GetSiteSurveyRssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.SiteSurveyRssi
	}
	return nil
}

func (x *StarlinkRouterClients) GetSiteSurveyEstRxRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.SiteSurveyEstRxRate
	}
	return nil
}

func (x *StarlinkRouterClients) GetEstControllerThroughputMbps() *wrapperspb.UInt32Value {
	if x != nil {
		return x.EstControllerThroughputMbps
	}
	return nil
}

func (x *StarlinkRouterClients) GetPingDropRateLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDropRateLast_1H
	}
	return nil
}

func (x *StarlinkRouterClients) GetPingLatencyLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingLatencyLast_1H
	}
	return nil
}

func (x *StarlinkRouterClients) GetSteerState() *wrapperspb.StringValue {
	if x != nil {
		return x.SteerState
	}
	return nil
}

func (x *StarlinkRouterClients) GetBlocked() *wrapperspb.BoolValue {
	if x != nil {
		return x.Blocked
	}
	return nil
}

func (x *StarlinkRouterClients) GetThroughputLimitedLastFired() *common.TimestampInfo {
	if x != nil {
		return x.ThroughputLimitedLastFired
	}
	return nil
}

func (x *StarlinkRouterClients) GetHasDhcpV4Lease() *wrapperspb.BoolValue {
	if x != nil {
		return x.HasDhcpV4Lease
	}
	return nil
}

func (x *StarlinkRouterClients) GetIpv4Address() *wrapperspb.StringValue {
	if x != nil {
		return x.Ipv4Address
	}
	return nil
}

func (x *StarlinkRouterClients) GetHasHostname() *wrapperspb.BoolValue {
	if x != nil {
		return x.HasHostname
	}
	return nil
}

func (x *StarlinkRouterClients) GetDhcpV4LeaseIsActive() *wrapperspb.BoolValue {
	if x != nil {
		return x.DhcpV4LeaseIsActive
	}
	return nil
}

func (x *StarlinkRouterClients) GetDhcpV4LeaseWasRenewed() *wrapperspb.BoolValue {
	if x != nil {
		return x.DhcpV4LeaseWasRenewed
	}
	return nil
}

func (x *StarlinkRouterClients) GetSecondsUntilDhcpV4LeaseExpires() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsUntilDhcpV4LeaseExpires
	}
	return nil
}

func (x *StarlinkRouterClients) GetDissociationsUnder_10S() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DissociationsUnder_10S
	}
	return nil
}

func (x *StarlinkRouterClients) GetDissociationsUnder_30S() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DissociationsUnder_30S
	}
	return nil
}

func (x *StarlinkRouterClients) GetDissociationsUnder_60S() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DissociationsUnder_60S
	}
	return nil
}

func (x *StarlinkRouterClients) GetDissociationsUnder_120S() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DissociationsUnder_120S
	}
	return nil
}

func (x *StarlinkRouterClients) GetSecondsToConnTcpIpv4() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToConnTcpIpv4
	}
	return nil
}

func (x *StarlinkRouterClients) GetSecondsToConnTcpIpv6() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToConnTcpIpv6
	}
	return nil
}

func (x *StarlinkRouterClients) GetSecondsToConnUdpIpv4() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToConnUdpIpv4
	}
	return nil
}

func (x *StarlinkRouterClients) GetSecondsToConnUdpIpv6() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToConnUdpIpv6
	}
	return nil
}

func (x *StarlinkRouterClients) GetFlowsTcpIpv4() *wrapperspb.UInt32Value {
	if x != nil {
		return x.FlowsTcpIpv4
	}
	return nil
}

func (x *StarlinkRouterClients) GetFlowsTcpIpv6() *wrapperspb.UInt32Value {
	if x != nil {
		return x.FlowsTcpIpv6
	}
	return nil
}

func (x *StarlinkRouterClients) GetFlowsUdpIpv4() *wrapperspb.UInt32Value {
	if x != nil {
		return x.FlowsUdpIpv4
	}
	return nil
}

func (x *StarlinkRouterClients) GetFlowsUdpIpv6() *wrapperspb.UInt32Value {
	if x != nil {
		return x.FlowsUdpIpv6
	}
	return nil
}

type StarlinkRouterClientTesterRun struct {
	state                    protoimpl.MessageState  `protogen:"open.v1"`
	ClientTesterRouterId     string                  `protobuf:"bytes,1,opt,name=client_tester_router_id,json=clientTesterRouterId,proto3" json:"client_tester_router_id,omitempty"`
	Timestamp                *common.TimestampInfo   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientIfaceName          *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=client_iface_name,json=clientIfaceName,proto3" json:"client_iface_name,omitempty"`
	TargetSsid               *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=target_ssid,json=targetSsid,proto3" json:"target_ssid,omitempty"`
	TargetHasPassword        *wrapperspb.BoolValue   `protobuf:"bytes,5,opt,name=target_has_password,json=targetHasPassword,proto3" json:"target_has_password,omitempty"`
	TargetAuth               *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=target_auth,json=targetAuth,proto3" json:"target_auth,omitempty"`
	TargetEncryption         *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=target_encryption,json=targetEncryption,proto3" json:"target_encryption,omitempty"`
	TargetBssid              *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=target_bssid,json=targetBssid,proto3" json:"target_bssid,omitempty"`
	TargetIrttServer         *wrapperspb.StringValue `protobuf:"bytes,25,opt,name=target_irtt_server,json=targetIrttServer,proto3" json:"target_irtt_server,omitempty"`
	Iteration                *wrapperspb.UInt32Value `protobuf:"bytes,9,opt,name=iteration,proto3" json:"iteration,omitempty"`
	ErrorCode                *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	SecondsToAssociate       *wrapperspb.FloatValue  `protobuf:"bytes,11,opt,name=seconds_to_associate,json=secondsToAssociate,proto3" json:"seconds_to_associate,omitempty"`
	SecondsToLease           *wrapperspb.FloatValue  `protobuf:"bytes,12,opt,name=seconds_to_lease,json=secondsToLease,proto3" json:"seconds_to_lease,omitempty"`
	SecondsToResolveRouter   *wrapperspb.FloatValue  `protobuf:"bytes,13,opt,name=seconds_to_resolve_router,json=secondsToResolveRouter,proto3" json:"seconds_to_resolve_router,omitempty"`
	SecondsToResolveInternet *wrapperspb.FloatValue  `protobuf:"bytes,14,opt,name=seconds_to_resolve_internet,json=secondsToResolveInternet,proto3" json:"seconds_to_resolve_internet,omitempty"`
	SecondsToPingDish        *wrapperspb.FloatValue  `protobuf:"bytes,15,opt,name=seconds_to_ping_dish,json=secondsToPingDish,proto3" json:"seconds_to_ping_dish,omitempty"`
	V4IrttTestDurationS      *wrapperspb.FloatValue  `protobuf:"bytes,16,opt,name=v4_irtt_test_duration_s,json=v4IrttTestDurationS,proto3" json:"v4_irtt_test_duration_s,omitempty"`
	V4IrttRttLatencyMinMs    *wrapperspb.FloatValue  `protobuf:"bytes,17,opt,name=v4_irtt_rtt_latency_min_ms,json=v4IrttRttLatencyMinMs,proto3" json:"v4_irtt_rtt_latency_min_ms,omitempty"`
	V4IrttRttLatencyMeanMs   *wrapperspb.FloatValue  `protobuf:"bytes,18,opt,name=v4_irtt_rtt_latency_mean_ms,json=v4IrttRttLatencyMeanMs,proto3" json:"v4_irtt_rtt_latency_mean_ms,omitempty"`
	V4IrttRttLatencyMedianMs *wrapperspb.FloatValue  `protobuf:"bytes,19,opt,name=v4_irtt_rtt_latency_median_ms,json=v4IrttRttLatencyMedianMs,proto3" json:"v4_irtt_rtt_latency_median_ms,omitempty"`
	V4IrttRttLatencyMaxMs    *wrapperspb.FloatValue  `protobuf:"bytes,20,opt,name=v4_irtt_rtt_latency_max_ms,json=v4IrttRttLatencyMaxMs,proto3" json:"v4_irtt_rtt_latency_max_ms,omitempty"`
	V4IrttRttLatencyStdDevMs *wrapperspb.FloatValue  `protobuf:"bytes,21,opt,name=v4_irtt_rtt_latency_std_dev_ms,json=v4IrttRttLatencyStdDevMs,proto3" json:"v4_irtt_rtt_latency_std_dev_ms,omitempty"`
	V4IrttPktsSent           *wrapperspb.UInt32Value `protobuf:"bytes,22,opt,name=v4_irtt_pkts_sent,json=v4IrttPktsSent,proto3" json:"v4_irtt_pkts_sent,omitempty"`
	V4IrttPktsRecv           *wrapperspb.UInt32Value `protobuf:"bytes,23,opt,name=v4_irtt_pkts_recv,json=v4IrttPktsRecv,proto3" json:"v4_irtt_pkts_recv,omitempty"`
	V4IrttLossPercent        *wrapperspb.FloatValue  `protobuf:"bytes,24,opt,name=v4_irtt_loss_percent,json=v4IrttLossPercent,proto3" json:"v4_irtt_loss_percent,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *StarlinkRouterClientTesterRun) Reset() {
	*x = StarlinkRouterClientTesterRun{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarlinkRouterClientTesterRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarlinkRouterClientTesterRun) ProtoMessage() {}

func (x *StarlinkRouterClientTesterRun) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarlinkRouterClientTesterRun.ProtoReflect.Descriptor instead.
func (*StarlinkRouterClientTesterRun) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{49}
}

func (x *StarlinkRouterClientTesterRun) GetClientTesterRouterId() string {
	if x != nil {
		return x.ClientTesterRouterId
	}
	return ""
}

func (x *StarlinkRouterClientTesterRun) GetTimestamp() *common.TimestampInfo {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetClientIfaceName() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientIfaceName
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetTargetSsid() *wrapperspb.StringValue {
	if x != nil {
		return x.TargetSsid
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetTargetHasPassword() *wrapperspb.BoolValue {
	if x != nil {
		return x.TargetHasPassword
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetTargetAuth() *wrapperspb.StringValue {
	if x != nil {
		return x.TargetAuth
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetTargetEncryption() *wrapperspb.StringValue {
	if x != nil {
		return x.TargetEncryption
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetTargetBssid() *wrapperspb.StringValue {
	if x != nil {
		return x.TargetBssid
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetTargetIrttServer() *wrapperspb.StringValue {
	if x != nil {
		return x.TargetIrttServer
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetIteration() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Iteration
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetErrorCode() *wrapperspb.StringValue {
	if x != nil {
		return x.ErrorCode
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetSecondsToAssociate() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToAssociate
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetSecondsToLease() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToLease
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetSecondsToResolveRouter() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToResolveRouter
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetSecondsToResolveInternet() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToResolveInternet
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetSecondsToPingDish() *wrapperspb.FloatValue {
	if x != nil {
		return x.SecondsToPingDish
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttTestDurationS() *wrapperspb.FloatValue {
	if x != nil {
		return x.V4IrttTestDurationS
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttRttLatencyMinMs() *wrapperspb.FloatValue {
	if x != nil {
		return x.V4IrttRttLatencyMinMs
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttRttLatencyMeanMs() *wrapperspb.FloatValue {
	if x != nil {
		return x.V4IrttRttLatencyMeanMs
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttRttLatencyMedianMs() *wrapperspb.FloatValue {
	if x != nil {
		return x.V4IrttRttLatencyMedianMs
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttRttLatencyMaxMs() *wrapperspb.FloatValue {
	if x != nil {
		return x.V4IrttRttLatencyMaxMs
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttRttLatencyStdDevMs() *wrapperspb.FloatValue {
	if x != nil {
		return x.V4IrttRttLatencyStdDevMs
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttPktsSent() *wrapperspb.UInt32Value {
	if x != nil {
		return x.V4IrttPktsSent
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttPktsRecv() *wrapperspb.UInt32Value {
	if x != nil {
		return x.V4IrttPktsRecv
	}
	return nil
}

func (x *StarlinkRouterClientTesterRun) GetV4IrttLossPercent() *wrapperspb.FloatValue {
	if x != nil {
		return x.V4IrttLossPercent
	}
	return nil
}

type WifiSetClientGivenNameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	ClientName    *ClientName   `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	ClientConfig  *ClientConfig `protobuf:"bytes,2,opt,name=client_config,json=clientConfig,proto3" json:"client_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSetClientGivenNameRequest) Reset() {
	*x = WifiSetClientGivenNameRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSetClientGivenNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetClientGivenNameRequest) ProtoMessage() {}

func (x *WifiSetClientGivenNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetClientGivenNameRequest.ProtoReflect.Descriptor instead.
func (*WifiSetClientGivenNameRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{50}
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *WifiSetClientGivenNameRequest) GetClientName() *ClientName {
	if x != nil {
		return x.ClientName
	}
	return nil
}

func (x *WifiSetClientGivenNameRequest) GetClientConfig() *ClientConfig {
	if x != nil {
		return x.ClientConfig
	}
	return nil
}

type WifiSelfTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSelfTestRequest) Reset() {
	*x = WifiSelfTestRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSelfTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSelfTestRequest) ProtoMessage() {}

func (x *WifiSelfTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSelfTestRequest.ProtoReflect.Descriptor instead.
func (*WifiSelfTestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{51}
}

type WifiSelfTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SelfTest      *WifiSelfTest          `protobuf:"bytes,1,opt,name=self_test,json=selfTest,proto3" json:"self_test,omitempty"`
	Json          string                 `protobuf:"bytes,2,opt,name=json,proto3" json:"json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSelfTestResponse) Reset() {
	*x = WifiSelfTestResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSelfTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSelfTestResponse) ProtoMessage() {}

func (x *WifiSelfTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSelfTestResponse.ProtoReflect.Descriptor instead.
func (*WifiSelfTestResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{52}
}

func (x *WifiSelfTestResponse) GetSelfTest() *WifiSelfTest {
	if x != nil {
		return x.SelfTest
	}
	return nil
}

func (x *WifiSelfTestResponse) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type WifiRunSelfTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiRunSelfTestRequest) Reset() {
	*x = WifiRunSelfTestRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiRunSelfTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiRunSelfTestRequest) ProtoMessage() {}

func (x *WifiRunSelfTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiRunSelfTestRequest.ProtoReflect.Descriptor instead.
func (*WifiRunSelfTestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{53}
}

type WifiRfTestRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NumMeasurements  uint32                 `protobuf:"varint,1,opt,name=num_measurements,json=numMeasurements,proto3" json:"num_measurements,omitempty"`
	Channel_2Ghz     uint32                 `protobuf:"varint,2,opt,name=channel_2ghz,json=channel2ghz,proto3" json:"channel_2ghz,omitempty"`
	Channel_5Ghz     uint32                 `protobuf:"varint,3,opt,name=channel_5ghz,json=channel5ghz,proto3" json:"channel_5ghz,omitempty"`
	Channel_5GhzHigh uint32                 `protobuf:"varint,4,opt,name=channel_5ghz_high,json=channel5ghzHigh,proto3" json:"channel_5ghz_high,omitempty"`
	Mcs_2Ghz         uint32                 `protobuf:"varint,5,opt,name=mcs_2ghz,json=mcs2ghz,proto3" json:"mcs_2ghz,omitempty"`
	Mcs_5Ghz         uint32                 `protobuf:"varint,6,opt,name=mcs_5ghz,json=mcs5ghz,proto3" json:"mcs_5ghz,omitempty"`
	Mcs_5GhzHigh     uint32                 `protobuf:"varint,7,opt,name=mcs_5ghz_high,json=mcs5ghzHigh,proto3" json:"mcs_5ghz_high,omitempty"`
	PhyMode_2Ghz     uint32                 `protobuf:"varint,8,opt,name=phy_mode_2ghz,json=phyMode2ghz,proto3" json:"phy_mode_2ghz,omitempty"`
	PhyMode_5Ghz     uint32                 `protobuf:"varint,9,opt,name=phy_mode_5ghz,json=phyMode5ghz,proto3" json:"phy_mode_5ghz,omitempty"`
	PhyMode_5GhzHigh uint32                 `protobuf:"varint,10,opt,name=phy_mode_5ghz_high,json=phyMode5ghzHigh,proto3" json:"phy_mode_5ghz_high,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WifiRfTestRequest) Reset() {
	*x = WifiRfTestRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiRfTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiRfTestRequest) ProtoMessage() {}

func (x *WifiRfTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiRfTestRequest.ProtoReflect.Descriptor instead.
func (*WifiRfTestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{54}
}

func (x *WifiRfTestRequest) GetNumMeasurements() uint32 {
	if x != nil {
		return x.NumMeasurements
	}
	return 0
}

func (x *WifiRfTestRequest) GetChannel_2Ghz() uint32 {
	if x != nil {
		return x.Channel_2Ghz
	}
	return 0
}

func (x *WifiRfTestRequest) GetChannel_5Ghz() uint32 {
	if x != nil {
		return x.Channel_5Ghz
	}
	return 0
}

func (x *WifiRfTestRequest) GetChannel_5GhzHigh() uint32 {
	if x != nil {
		return x.Channel_5GhzHigh
	}
	return 0
}

func (x *WifiRfTestRequest) GetMcs_2Ghz() uint32 {
	if x != nil {
		return x.Mcs_2Ghz
	}
	return 0
}

func (x *WifiRfTestRequest) GetMcs_5Ghz() uint32 {
	if x != nil {
		return x.Mcs_5Ghz
	}
	return 0
}

func (x *WifiRfTestRequest) GetMcs_5GhzHigh() uint32 {
	if x != nil {
		return x.Mcs_5GhzHigh
	}
	return 0
}

func (x *WifiRfTestRequest) GetPhyMode_2Ghz() uint32 {
	if x != nil {
		return x.PhyMode_2Ghz
	}
	return 0
}

func (x *WifiRfTestRequest) GetPhyMode_5Ghz() uint32 {
	if x != nil {
		return x.PhyMode_5Ghz
	}
	return 0
}

func (x *WifiRfTestRequest) GetPhyMode_5GhzHigh() uint32 {
	if x != nil {
		return x.PhyMode_5GhzHigh
	}
	return 0
}

type WifiRfTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        string                 `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiRfTestResponse) Reset() {
	*x = WifiRfTestResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiRfTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiRfTestResponse) ProtoMessage() {}

func (x *WifiRfTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiRfTestResponse.ProtoReflect.Descriptor instead.
func (*WifiRfTestResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{55}
}

func (x *WifiRfTestResponse) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

type WifiGetFirewallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetFirewallRequest) Reset() {
	*x = WifiGetFirewallRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetFirewallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetFirewallRequest) ProtoMessage() {}

func (x *WifiGetFirewallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetFirewallRequest.ProtoReflect.Descriptor instead.
func (*WifiGetFirewallRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{56}
}

type WifiGetFirewallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iptables      string                 `protobuf:"bytes,1,opt,name=iptables,proto3" json:"iptables,omitempty"`
	Iptables_6    string                 `protobuf:"bytes,2,opt,name=iptables_6,json=iptables6,proto3" json:"iptables_6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGetFirewallResponse) Reset() {
	*x = WifiGetFirewallResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetFirewallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetFirewallResponse) ProtoMessage() {}

func (x *WifiGetFirewallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetFirewallResponse.ProtoReflect.Descriptor instead.
func (*WifiGetFirewallResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{57}
}

func (x *WifiGetFirewallResponse) GetIptables() string {
	if x != nil {
		return x.Iptables
	}
	return ""
}

func (x *WifiGetFirewallResponse) GetIptables_6() string {
	if x != nil {
		return x.Iptables_6
	}
	return ""
}

type WifiTogglePoeNegotiationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        bool                   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiTogglePoeNegotiationRequest) Reset() {
	*x = WifiTogglePoeNegotiationRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiTogglePoeNegotiationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiTogglePoeNegotiationRequest) ProtoMessage() {}

func (x *WifiTogglePoeNegotiationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiTogglePoeNegotiationRequest.ProtoReflect.Descriptor instead.
func (*WifiTogglePoeNegotiationRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{58}
}

func (x *WifiTogglePoeNegotiationRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type WifiCalibrationModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiCalibrationModeRequest) Reset() {
	*x = WifiCalibrationModeRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiCalibrationModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiCalibrationModeRequest) ProtoMessage() {}

func (x *WifiCalibrationModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiCalibrationModeRequest.ProtoReflect.Descriptor instead.
func (*WifiCalibrationModeRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{59}
}

type StarlinkRouterHourlyMetricsV2 struct {
	state                               protoimpl.MessageState  `protogen:"open.v1"`
	Id                                  *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TimestampDate                       *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=timestamp_date,json=timestampDate,proto3" json:"timestamp_date,omitempty"`
	TimestampHour                       *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=timestamp_hour,json=timestampHour,proto3" json:"timestamp_hour,omitempty"`
	SysHwGen                            *wrapperspb.UInt32Value `protobuf:"bytes,4,opt,name=sys_hw_gen,json=sysHwGen,proto3" json:"sys_hw_gen,omitempty"`
	SysSw                               *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=sys_sw,json=sysSw,proto3" json:"sys_sw,omitempty"`
	SysCountry                          *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=sys_country,json=sysCountry,proto3" json:"sys_country,omitempty"`
	SysIsDev                            *wrapperspb.BoolValue   `protobuf:"bytes,7,opt,name=sys_is_dev,json=sysIsDev,proto3" json:"sys_is_dev,omitempty"`
	SysAllocFds                         *wrapperspb.UInt32Value `protobuf:"bytes,8,opt,name=sys_alloc_fds,json=sysAllocFds,proto3" json:"sys_alloc_fds,omitempty"`
	SysCpuUsage                         *wrapperspb.FloatValue  `protobuf:"bytes,9,opt,name=sys_cpu_usage,json=sysCpuUsage,proto3" json:"sys_cpu_usage,omitempty"`
	SysMemFreeKb                        *wrapperspb.FloatValue  `protobuf:"bytes,10,opt,name=sys_mem_free_kb,json=sysMemFreeKb,proto3" json:"sys_mem_free_kb,omitempty"`
	SysBootcount                        *wrapperspb.Int32Value  `protobuf:"bytes,11,opt,name=sys_bootcount,json=sysBootcount,proto3" json:"sys_bootcount,omitempty"`
	SysPartitionsEqual                  *wrapperspb.BoolValue   `protobuf:"bytes,12,opt,name=sys_partitions_equal,json=sysPartitionsEqual,proto3" json:"sys_partitions_equal,omitempty"`
	SysUptimeSeconds                    *wrapperspb.UInt32Value `protobuf:"bytes,13,opt,name=sys_uptime_seconds,json=sysUptimeSeconds,proto3" json:"sys_uptime_seconds,omitempty"`
	SysAntiRollbackVersion              *wrapperspb.Int32Value  `protobuf:"bytes,14,opt,name=sys_anti_rollback_version,json=sysAntiRollbackVersion,proto3" json:"sys_anti_rollback_version,omitempty"`
	Radios_2GhzChannel                  *wrapperspb.UInt32Value `protobuf:"bytes,100,opt,name=radios_2ghz_channel,json=radios2ghzChannel,proto3" json:"radios_2ghz_channel,omitempty"`
	Radios_2GhzAntenna1Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,101,opt,name=radios_2ghz_antenna1_rssi,json=radios2ghzAntenna1Rssi,proto3" json:"radios_2ghz_antenna1_rssi,omitempty"`
	Radios_2GhzAntenna2Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,102,opt,name=radios_2ghz_antenna2_rssi,json=radios2ghzAntenna2Rssi,proto3" json:"radios_2ghz_antenna2_rssi,omitempty"`
	Radios_2GhzAntenna3Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,103,opt,name=radios_2ghz_antenna3_rssi,json=radios2ghzAntenna3Rssi,proto3" json:"radios_2ghz_antenna3_rssi,omitempty"`
	Radios_2GhzIfaceCount               *wrapperspb.UInt32Value `protobuf:"bytes,104,opt,name=radios_2ghz_iface_count,json=radios2ghzIfaceCount,proto3" json:"radios_2ghz_iface_count,omitempty"`
	Radios_2GhzChanBusyFraction         *wrapperspb.FloatValue  `protobuf:"bytes,105,opt,name=radios_2ghz_chan_busy_fraction,json=radios2ghzChanBusyFraction,proto3" json:"radios_2ghz_chan_busy_fraction,omitempty"`
	Radios_2GhzEdccaFraction            *wrapperspb.FloatValue  `protobuf:"bytes,106,opt,name=radios_2ghz_edcca_fraction,json=radios2ghzEdccaFraction,proto3" json:"radios_2ghz_edcca_fraction,omitempty"`
	Radios_2GhzOverlappingBssFraction   *wrapperspb.FloatValue  `protobuf:"bytes,107,opt,name=radios_2ghz_overlapping_bss_fraction,json=radios2ghzOverlappingBssFraction,proto3" json:"radios_2ghz_overlapping_bss_fraction,omitempty"`
	Radios_2GhzRxBytes                  *wrapperspb.UInt32Value `protobuf:"bytes,108,opt,name=radios_2ghz_rx_bytes,json=radios2ghzRxBytes,proto3" json:"radios_2ghz_rx_bytes,omitempty"`
	Radios_2GhzRxPackets                *wrapperspb.UInt32Value `protobuf:"bytes,109,opt,name=radios_2ghz_rx_packets,json=radios2ghzRxPackets,proto3" json:"radios_2ghz_rx_packets,omitempty"`
	Radios_2GhzRxErrors                 *wrapperspb.UInt32Value `protobuf:"bytes,110,opt,name=radios_2ghz_rx_errors,json=radios2ghzRxErrors,proto3" json:"radios_2ghz_rx_errors,omitempty"`
	Radios_2GhzRxFrameErrors            *wrapperspb.UInt32Value `protobuf:"bytes,111,opt,name=radios_2ghz_rx_frame_errors,json=radios2ghzRxFrameErrors,proto3" json:"radios_2ghz_rx_frame_errors,omitempty"`
	Radios_2GhzRxPacketErrorRate        *wrapperspb.FloatValue  `protobuf:"bytes,112,opt,name=radios_2ghz_rx_packet_error_rate,json=radios2ghzRxPacketErrorRate,proto3" json:"radios_2ghz_rx_packet_error_rate,omitempty"`
	Radios_2GhzRxAirtimeFraction        *wrapperspb.FloatValue  `protobuf:"bytes,113,opt,name=radios_2ghz_rx_airtime_fraction,json=radios2ghzRxAirtimeFraction,proto3" json:"radios_2ghz_rx_airtime_fraction,omitempty"`
	Radios_2GhzTxBytes                  *wrapperspb.UInt32Value `protobuf:"bytes,114,opt,name=radios_2ghz_tx_bytes,json=radios2ghzTxBytes,proto3" json:"radios_2ghz_tx_bytes,omitempty"`
	Radios_2GhzTxPackets                *wrapperspb.UInt32Value `protobuf:"bytes,115,opt,name=radios_2ghz_tx_packets,json=radios2ghzTxPackets,proto3" json:"radios_2ghz_tx_packets,omitempty"`
	Radios_2GhzTxErrors                 *wrapperspb.UInt32Value `protobuf:"bytes,116,opt,name=radios_2ghz_tx_errors,json=radios2ghzTxErrors,proto3" json:"radios_2ghz_tx_errors,omitempty"`
	Radios_2GhzTxPacketErrorRate        *wrapperspb.FloatValue  `protobuf:"bytes,117,opt,name=radios_2ghz_tx_packet_error_rate,json=radios2ghzTxPacketErrorRate,proto3" json:"radios_2ghz_tx_packet_error_rate,omitempty"`
	Radios_2GhzTxAirtimeFraction        *wrapperspb.FloatValue  `protobuf:"bytes,118,opt,name=radios_2ghz_tx_airtime_fraction,json=radios2ghzTxAirtimeFraction,proto3" json:"radios_2ghz_tx_airtime_fraction,omitempty"`
	Radios_5GhzChannel                  *wrapperspb.UInt32Value `protobuf:"bytes,119,opt,name=radios_5ghz_channel,json=radios5ghzChannel,proto3" json:"radios_5ghz_channel,omitempty"`
	Radios_5GhzAntenna1Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,120,opt,name=radios_5ghz_antenna1_rssi,json=radios5ghzAntenna1Rssi,proto3" json:"radios_5ghz_antenna1_rssi,omitempty"`
	Radios_5GhzAntenna2Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,121,opt,name=radios_5ghz_antenna2_rssi,json=radios5ghzAntenna2Rssi,proto3" json:"radios_5ghz_antenna2_rssi,omitempty"`
	Radios_5GhzAntenna3Rssi             *wrapperspb.FloatValue  `protobuf:"bytes,122,opt,name=radios_5ghz_antenna3_rssi,json=radios5ghzAntenna3Rssi,proto3" json:"radios_5ghz_antenna3_rssi,omitempty"`
	Radios_5GhzIfaceCount               *wrapperspb.UInt32Value `protobuf:"bytes,123,opt,name=radios_5ghz_iface_count,json=radios5ghzIfaceCount,proto3" json:"radios_5ghz_iface_count,omitempty"`
	Radios_5GhzChanBusyFraction         *wrapperspb.FloatValue  `protobuf:"bytes,124,opt,name=radios_5ghz_chan_busy_fraction,json=radios5ghzChanBusyFraction,proto3" json:"radios_5ghz_chan_busy_fraction,omitempty"`
	Radios_5GhzEdccaFraction            *wrapperspb.FloatValue  `protobuf:"bytes,125,opt,name=radios_5ghz_edcca_fraction,json=radios5ghzEdccaFraction,proto3" json:"radios_5ghz_edcca_fraction,omitempty"`
	Radios_5GhzOverlappingBssFraction   *wrapperspb.FloatValue  `protobuf:"bytes,126,opt,name=radios_5ghz_overlapping_bss_fraction,json=radios5ghzOverlappingBssFraction,proto3" json:"radios_5ghz_overlapping_bss_fraction,omitempty"`
	Radios_5GhzRxBytes                  *wrapperspb.UInt32Value `protobuf:"bytes,127,opt,name=radios_5ghz_rx_bytes,json=radios5ghzRxBytes,proto3" json:"radios_5ghz_rx_bytes,omitempty"`
	Radios_5GhzRxPackets                *wrapperspb.UInt32Value `protobuf:"bytes,128,opt,name=radios_5ghz_rx_packets,json=radios5ghzRxPackets,proto3" json:"radios_5ghz_rx_packets,omitempty"`
	Radios_5GhzRxErrors                 *wrapperspb.UInt32Value `protobuf:"bytes,129,opt,name=radios_5ghz_rx_errors,json=radios5ghzRxErrors,proto3" json:"radios_5ghz_rx_errors,omitempty"`
	Radios_5GhzRxFrameErrors            *wrapperspb.UInt32Value `protobuf:"bytes,130,opt,name=radios_5ghz_rx_frame_errors,json=radios5ghzRxFrameErrors,proto3" json:"radios_5ghz_rx_frame_errors,omitempty"`
	Radios_5GhzRxPacketErrorRate        *wrapperspb.FloatValue  `protobuf:"bytes,131,opt,name=radios_5ghz_rx_packet_error_rate,json=radios5ghzRxPacketErrorRate,proto3" json:"radios_5ghz_rx_packet_error_rate,omitempty"`
	Radios_5GhzRxAirtimeFraction        *wrapperspb.FloatValue  `protobuf:"bytes,132,opt,name=radios_5ghz_rx_airtime_fraction,json=radios5ghzRxAirtimeFraction,proto3" json:"radios_5ghz_rx_airtime_fraction,omitempty"`
	Radios_5GhzTxBytes                  *wrapperspb.UInt32Value `protobuf:"bytes,133,opt,name=radios_5ghz_tx_bytes,json=radios5ghzTxBytes,proto3" json:"radios_5ghz_tx_bytes,omitempty"`
	Radios_5GhzTxPackets                *wrapperspb.UInt32Value `protobuf:"bytes,134,opt,name=radios_5ghz_tx_packets,json=radios5ghzTxPackets,proto3" json:"radios_5ghz_tx_packets,omitempty"`
	Radios_5GhzTxErrors                 *wrapperspb.UInt32Value `protobuf:"bytes,135,opt,name=radios_5ghz_tx_errors,json=radios5ghzTxErrors,proto3" json:"radios_5ghz_tx_errors,omitempty"`
	Radios_5GhzTxPacketErrorRate        *wrapperspb.FloatValue  `protobuf:"bytes,136,opt,name=radios_5ghz_tx_packet_error_rate,json=radios5ghzTxPacketErrorRate,proto3" json:"radios_5ghz_tx_packet_error_rate,omitempty"`
	Radios_5GhzTxAirtimeFraction        *wrapperspb.FloatValue  `protobuf:"bytes,137,opt,name=radios_5ghz_tx_airtime_fraction,json=radios5ghzTxAirtimeFraction,proto3" json:"radios_5ghz_tx_airtime_fraction,omitempty"`
	Radios_2GhzThermalTemp              *wrapperspb.FloatValue  `protobuf:"bytes,200,opt,name=radios_2ghz_thermal_temp,json=radios2ghzThermalTemp,proto3" json:"radios_2ghz_thermal_temp,omitempty"`
	Radios_5GhzThermalTemp              *wrapperspb.FloatValue  `protobuf:"bytes,201,opt,name=radios_5ghz_thermal_temp,json=radios5ghzThermalTemp,proto3" json:"radios_5ghz_thermal_temp,omitempty"`
	Radios_2GhzThermalDutyCycle         *wrapperspb.FloatValue  `protobuf:"bytes,202,opt,name=radios_2ghz_thermal_duty_cycle,json=radios2ghzThermalDutyCycle,proto3" json:"radios_2ghz_thermal_duty_cycle,omitempty"`
	Radios_5GhzThermalDutyCycle         *wrapperspb.FloatValue  `protobuf:"bytes,203,opt,name=radios_5ghz_thermal_duty_cycle,json=radios5ghzThermalDutyCycle,proto3" json:"radios_5ghz_thermal_duty_cycle,omitempty"`
	Radios_2GhzThermalThrottledSeconds  *wrapperspb.UInt32Value `protobuf:"bytes,204,opt,name=radios_2ghz_thermal_throttled_seconds,json=radios2ghzThermalThrottledSeconds,proto3" json:"radios_2ghz_thermal_throttled_seconds,omitempty"`
	Radios_5GhzThermalThrottledSeconds  *wrapperspb.UInt32Value `protobuf:"bytes,205,opt,name=radios_5ghz_thermal_throttled_seconds,json=radios5ghzThermalThrottledSeconds,proto3" json:"radios_5ghz_thermal_throttled_seconds,omitempty"`
	IfacesLanEthRxBytes                 *wrapperspb.UInt32Value `protobuf:"bytes,300,opt,name=ifaces_lan_eth_rx_bytes,json=ifacesLanEthRxBytes,proto3" json:"ifaces_lan_eth_rx_bytes,omitempty"`
	IfacesLanEthRxPackets               *wrapperspb.UInt32Value `protobuf:"bytes,301,opt,name=ifaces_lan_eth_rx_packets,json=ifacesLanEthRxPackets,proto3" json:"ifaces_lan_eth_rx_packets,omitempty"`
	IfacesLanEthRxErrors                *wrapperspb.UInt32Value `protobuf:"bytes,302,opt,name=ifaces_lan_eth_rx_errors,json=ifacesLanEthRxErrors,proto3" json:"ifaces_lan_eth_rx_errors,omitempty"`
	IfacesLanEthRxFrameErrors           *wrapperspb.UInt32Value `protobuf:"bytes,303,opt,name=ifaces_lan_eth_rx_frame_errors,json=ifacesLanEthRxFrameErrors,proto3" json:"ifaces_lan_eth_rx_frame_errors,omitempty"`
	IfacesLanEthTxBytes                 *wrapperspb.UInt32Value `protobuf:"bytes,304,opt,name=ifaces_lan_eth_tx_bytes,json=ifacesLanEthTxBytes,proto3" json:"ifaces_lan_eth_tx_bytes,omitempty"`
	IfacesLanEthTxPackets               *wrapperspb.UInt32Value `protobuf:"bytes,305,opt,name=ifaces_lan_eth_tx_packets,json=ifacesLanEthTxPackets,proto3" json:"ifaces_lan_eth_tx_packets,omitempty"`
	IfacesLanEthTxErrors                *wrapperspb.UInt32Value `protobuf:"bytes,306,opt,name=ifaces_lan_eth_tx_errors,json=ifacesLanEthTxErrors,proto3" json:"ifaces_lan_eth_tx_errors,omitempty"`
	IfacesWanEthRxBytes                 *wrapperspb.UInt32Value `protobuf:"bytes,307,opt,name=ifaces_wan_eth_rx_bytes,json=ifacesWanEthRxBytes,proto3" json:"ifaces_wan_eth_rx_bytes,omitempty"`
	IfacesWanEthRxPackets               *wrapperspb.UInt32Value `protobuf:"bytes,308,opt,name=ifaces_wan_eth_rx_packets,json=ifacesWanEthRxPackets,proto3" json:"ifaces_wan_eth_rx_packets,omitempty"`
	IfacesWanEthRxErrors                *wrapperspb.UInt32Value `protobuf:"bytes,309,opt,name=ifaces_wan_eth_rx_errors,json=ifacesWanEthRxErrors,proto3" json:"ifaces_wan_eth_rx_errors,omitempty"`
	IfacesWanEthRxFrameErrors           *wrapperspb.UInt32Value `protobuf:"bytes,310,opt,name=ifaces_wan_eth_rx_frame_errors,json=ifacesWanEthRxFrameErrors,proto3" json:"ifaces_wan_eth_rx_frame_errors,omitempty"`
	IfacesWanEthTxBytes                 *wrapperspb.UInt32Value `protobuf:"bytes,311,opt,name=ifaces_wan_eth_tx_bytes,json=ifacesWanEthTxBytes,proto3" json:"ifaces_wan_eth_tx_bytes,omitempty"`
	IfacesWanEthTxPackets               *wrapperspb.UInt32Value `protobuf:"bytes,312,opt,name=ifaces_wan_eth_tx_packets,json=ifacesWanEthTxPackets,proto3" json:"ifaces_wan_eth_tx_packets,omitempty"`
	IfacesWanEthTxErrors                *wrapperspb.UInt32Value `protobuf:"bytes,313,opt,name=ifaces_wan_eth_tx_errors,json=ifacesWanEthTxErrors,proto3" json:"ifaces_wan_eth_tx_errors,omitempty"`
	Clients                             *wrapperspb.UInt32Value `protobuf:"bytes,400,opt,name=clients,proto3" json:"clients,omitempty"`
	Clients_2Ghz                        *wrapperspb.UInt32Value `protobuf:"bytes,401,opt,name=clients_2ghz,json=clients2ghz,proto3" json:"clients_2ghz,omitempty"`
	Clients_5Ghz                        *wrapperspb.UInt32Value `protobuf:"bytes,402,opt,name=clients_5ghz,json=clients5ghz,proto3" json:"clients_5ghz,omitempty"`
	ClientsEth                          *wrapperspb.UInt32Value `protobuf:"bytes,403,opt,name=clients_eth,json=clientsEth,proto3" json:"clients_eth,omitempty"`
	ClientsRepeater                     *wrapperspb.UInt32Value `protobuf:"bytes,404,opt,name=clients_repeater,json=clientsRepeater,proto3" json:"clients_repeater,omitempty"`
	ClientsRepeater_2Ghz                *wrapperspb.UInt32Value `protobuf:"bytes,405,opt,name=clients_repeater_2ghz,json=clientsRepeater2ghz,proto3" json:"clients_repeater_2ghz,omitempty"`
	ClientsRepeater_5Ghz                *wrapperspb.UInt32Value `protobuf:"bytes,406,opt,name=clients_repeater_5ghz,json=clientsRepeater5ghz,proto3" json:"clients_repeater_5ghz,omitempty"`
	ClientsRepeaterEth                  *wrapperspb.UInt32Value `protobuf:"bytes,407,opt,name=clients_repeater_eth,json=clientsRepeaterEth,proto3" json:"clients_repeater_eth,omitempty"`
	MeshHops                            *wrapperspb.UInt32Value `protobuf:"bytes,408,opt,name=mesh_hops,json=meshHops,proto3" json:"mesh_hops,omitempty"`
	MeshOneHopRssiAvg_2Ghz              *wrapperspb.FloatValue  `protobuf:"bytes,409,opt,name=mesh_one_hop_rssi_avg_2ghz,json=meshOneHopRssiAvg2ghz,proto3" json:"mesh_one_hop_rssi_avg_2ghz,omitempty"`
	MeshOneHopRssiAvg_5Ghz              *wrapperspb.FloatValue  `protobuf:"bytes,410,opt,name=mesh_one_hop_rssi_avg_5ghz,json=meshOneHopRssiAvg5ghz,proto3" json:"mesh_one_hop_rssi_avg_5ghz,omitempty"`
	MeshTwoHopRssiAvg_2Ghz              *wrapperspb.FloatValue  `protobuf:"bytes,411,opt,name=mesh_two_hop_rssi_avg_2ghz,json=meshTwoHopRssiAvg2ghz,proto3" json:"mesh_two_hop_rssi_avg_2ghz,omitempty"`
	MeshTwoHopRssiAvg_5Ghz              *wrapperspb.FloatValue  `protobuf:"bytes,412,opt,name=mesh_two_hop_rssi_avg_5ghz,json=meshTwoHopRssiAvg5ghz,proto3" json:"mesh_two_hop_rssi_avg_5ghz,omitempty"`
	PingSecondsSinceLast_1SOutage       *wrapperspb.FloatValue  `protobuf:"bytes,600,opt,name=ping_seconds_since_last_1s_outage,json=pingSecondsSinceLast1sOutage,proto3" json:"ping_seconds_since_last_1s_outage,omitempty"`
	PingSecondsSinceLast_2SOutage       *wrapperspb.FloatValue  `protobuf:"bytes,601,opt,name=ping_seconds_since_last_2s_outage,json=pingSecondsSinceLast2sOutage,proto3" json:"ping_seconds_since_last_2s_outage,omitempty"`
	PingSecondsSinceLast_5SOutage       *wrapperspb.FloatValue  `protobuf:"bytes,602,opt,name=ping_seconds_since_last_5s_outage,json=pingSecondsSinceLast5sOutage,proto3" json:"ping_seconds_since_last_5s_outage,omitempty"`
	PingSecondsSinceLast_60SOutage      *wrapperspb.FloatValue  `protobuf:"bytes,603,opt,name=ping_seconds_since_last_60s_outage,json=pingSecondsSinceLast60sOutage,proto3" json:"ping_seconds_since_last_60s_outage,omitempty"`
	PingSecondsSinceLast_300SOutage     *wrapperspb.FloatValue  `protobuf:"bytes,604,opt,name=ping_seconds_since_last_300s_outage,json=pingSecondsSinceLast300sOutage,proto3" json:"ping_seconds_since_last_300s_outage,omitempty"`
	PingDropRate                        *wrapperspb.FloatValue  `protobuf:"bytes,605,opt,name=ping_drop_rate,json=pingDropRate,proto3" json:"ping_drop_rate,omitempty"`
	PingDropRateLast_1H                 *wrapperspb.FloatValue  `protobuf:"bytes,606,opt,name=ping_drop_rate_last_1h,json=pingDropRateLast1h,proto3" json:"ping_drop_rate_last_1h,omitempty"`
	PingLatency                         *wrapperspb.FloatValue  `protobuf:"bytes,607,opt,name=ping_latency,json=pingLatency,proto3" json:"ping_latency,omitempty"`
	PingDishSecondsSinceLast_1SOutage   *wrapperspb.FloatValue  `protobuf:"bytes,610,opt,name=ping_dish_seconds_since_last_1s_outage,json=pingDishSecondsSinceLast1sOutage,proto3" json:"ping_dish_seconds_since_last_1s_outage,omitempty"`
	PingDishSecondsSinceLast_2SOutage   *wrapperspb.FloatValue  `protobuf:"bytes,611,opt,name=ping_dish_seconds_since_last_2s_outage,json=pingDishSecondsSinceLast2sOutage,proto3" json:"ping_dish_seconds_since_last_2s_outage,omitempty"`
	PingDishSecondsSinceLast_5SOutage   *wrapperspb.FloatValue  `protobuf:"bytes,612,opt,name=ping_dish_seconds_since_last_5s_outage,json=pingDishSecondsSinceLast5sOutage,proto3" json:"ping_dish_seconds_since_last_5s_outage,omitempty"`
	PingDishSecondsSinceLast_60SOutage  *wrapperspb.FloatValue  `protobuf:"bytes,613,opt,name=ping_dish_seconds_since_last_60s_outage,json=pingDishSecondsSinceLast60sOutage,proto3" json:"ping_dish_seconds_since_last_60s_outage,omitempty"`
	PingDishSecondsSinceLast_300SOutage *wrapperspb.FloatValue  `protobuf:"bytes,614,opt,name=ping_dish_seconds_since_last_300s_outage,json=pingDishSecondsSinceLast300sOutage,proto3" json:"ping_dish_seconds_since_last_300s_outage,omitempty"`
	PingDishDropRate                    *wrapperspb.FloatValue  `protobuf:"bytes,615,opt,name=ping_dish_drop_rate,json=pingDishDropRate,proto3" json:"ping_dish_drop_rate,omitempty"`
	PingDishDropRateLast_1H             *wrapperspb.FloatValue  `protobuf:"bytes,616,opt,name=ping_dish_drop_rate_last_1h,json=pingDishDropRateLast1h,proto3" json:"ping_dish_drop_rate_last_1h,omitempty"`
	PingDishLatency                     *wrapperspb.FloatValue  `protobuf:"bytes,617,opt,name=ping_dish_latency,json=pingDishLatency,proto3" json:"ping_dish_latency,omitempty"`
	ClientSpeedtestRouterDownloadMbps   *wrapperspb.FloatValue  `protobuf:"bytes,700,opt,name=client_speedtest_router_download_mbps,json=clientSpeedtestRouterDownloadMbps,proto3" json:"client_speedtest_router_download_mbps,omitempty"`
	ClientSpeedtestRouterUploadMbps     *wrapperspb.FloatValue  `protobuf:"bytes,701,opt,name=client_speedtest_router_upload_mbps,json=clientSpeedtestRouterUploadMbps,proto3" json:"client_speedtest_router_upload_mbps,omitempty"`
	ClientSpeedtestRouterRssi           *wrapperspb.FloatValue  `protobuf:"bytes,702,opt,name=client_speedtest_router_rssi,json=clientSpeedtestRouterRssi,proto3" json:"client_speedtest_router_rssi,omitempty"`
	ClientSpeedtestWifiDownloadMbps     *wrapperspb.FloatValue  `protobuf:"bytes,703,opt,name=client_speedtest_wifi_download_mbps,json=clientSpeedtestWifiDownloadMbps,proto3" json:"client_speedtest_wifi_download_mbps,omitempty"`
	ClientSpeedtestWifiUploadMbps       *wrapperspb.FloatValue  `protobuf:"bytes,704,opt,name=client_speedtest_wifi_upload_mbps,json=clientSpeedtestWifiUploadMbps,proto3" json:"client_speedtest_wifi_upload_mbps,omitempty"`
	ClientSpeedtestClientDownloadMbps   *wrapperspb.FloatValue  `protobuf:"bytes,705,opt,name=client_speedtest_client_download_mbps,json=clientSpeedtestClientDownloadMbps,proto3" json:"client_speedtest_client_download_mbps,omitempty"`
	ClientSpeedtestClientUploadMbps     *wrapperspb.FloatValue  `protobuf:"bytes,706,opt,name=client_speedtest_client_upload_mbps,json=clientSpeedtestClientUploadMbps,proto3" json:"client_speedtest_client_upload_mbps,omitempty"`
	ClientSpeedtestClientRssi           *wrapperspb.FloatValue  `protobuf:"bytes,707,opt,name=client_speedtest_client_rssi,json=clientSpeedtestClientRssi,proto3" json:"client_speedtest_client_rssi,omitempty"`
	ClientSpeedtestClientIface          *wrapperspb.UInt32Value `protobuf:"bytes,708,opt,name=client_speedtest_client_iface,json=clientSpeedtestClientIface,proto3" json:"client_speedtest_client_iface,omitempty"`
	ClientSpeedtestClientOui            *wrapperspb.StringValue `protobuf:"bytes,709,opt,name=client_speedtest_client_oui,json=clientSpeedtestClientOui,proto3" json:"client_speedtest_client_oui,omitempty"`
	ClientSpeedtestClientTxRate         *wrapperspb.UInt32Value `protobuf:"bytes,710,opt,name=client_speedtest_client_tx_rate,json=clientSpeedtestClientTxRate,proto3" json:"client_speedtest_client_tx_rate,omitempty"`
	ClientSpeedtestClientRxRate         *wrapperspb.UInt32Value `protobuf:"bytes,711,opt,name=client_speedtest_client_rx_rate,json=clientSpeedtestClientRxRate,proto3" json:"client_speedtest_client_rx_rate,omitempty"`
	ClientSpeedtestClientPlatformType   *wrapperspb.UInt32Value `protobuf:"bytes,712,opt,name=client_speedtest_client_platform_type,json=clientSpeedtestClientPlatformType,proto3" json:"client_speedtest_client_platform_type,omitempty"`
	SpeedtestTcp_8DownloadMbpsAvg       *wrapperspb.FloatValue  `protobuf:"bytes,800,opt,name=speedtest_tcp_8_download_mbps_avg,json=speedtestTcp8DownloadMbpsAvg,proto3" json:"speedtest_tcp_8_download_mbps_avg,omitempty"`
	SpeedtestTcp_8DownloadMbpsMax       *wrapperspb.FloatValue  `protobuf:"bytes,801,opt,name=speedtest_tcp_8_download_mbps_max,json=speedtestTcp8DownloadMbpsMax,proto3" json:"speedtest_tcp_8_download_mbps_max,omitempty"`
	SpeedtestTcp_8UploadMbpsAvg         *wrapperspb.FloatValue  `protobuf:"bytes,802,opt,name=speedtest_tcp_8_upload_mbps_avg,json=speedtestTcp8UploadMbpsAvg,proto3" json:"speedtest_tcp_8_upload_mbps_avg,omitempty"`
	SpeedtestTcp_8UploadMbpsMax         *wrapperspb.FloatValue  `protobuf:"bytes,803,opt,name=speedtest_tcp_8_upload_mbps_max,json=speedtestTcp8UploadMbpsMax,proto3" json:"speedtest_tcp_8_upload_mbps_max,omitempty"`
	SpeedtestTcp_64DownloadMbpsAvg      *wrapperspb.FloatValue  `protobuf:"bytes,804,opt,name=speedtest_tcp_64_download_mbps_avg,json=speedtestTcp64DownloadMbpsAvg,proto3" json:"speedtest_tcp_64_download_mbps_avg,omitempty"`
	SpeedtestTcp_64DownloadMbpsMax      *wrapperspb.FloatValue  `protobuf:"bytes,805,opt,name=speedtest_tcp_64_download_mbps_max,json=speedtestTcp64DownloadMbpsMax,proto3" json:"speedtest_tcp_64_download_mbps_max,omitempty"`
	SpeedtestTcp_64UploadMbpsAvg        *wrapperspb.FloatValue  `protobuf:"bytes,806,opt,name=speedtest_tcp_64_upload_mbps_avg,json=speedtestTcp64UploadMbpsAvg,proto3" json:"speedtest_tcp_64_upload_mbps_avg,omitempty"`
	SpeedtestTcp_64UploadMbpsMax        *wrapperspb.FloatValue  `protobuf:"bytes,807,opt,name=speedtest_tcp_64_upload_mbps_max,json=speedtestTcp64UploadMbpsMax,proto3" json:"speedtest_tcp_64_upload_mbps_max,omitempty"`
	DishCellId                          *wrapperspb.UInt32Value `protobuf:"bytes,900,opt,name=dish_cell_id,json=dishCellId,proto3" json:"dish_cell_id,omitempty"`
	ConfigSetupComplete                 *wrapperspb.BoolValue   `protobuf:"bytes,1000,opt,name=config_setup_complete,json=configSetupComplete,proto3" json:"config_setup_complete,omitempty"`
	ConfigBandsSplit                    *wrapperspb.BoolValue   `protobuf:"bytes,1001,opt,name=config_bands_split,json=configBandsSplit,proto3" json:"config_bands_split,omitempty"`
	ConfigIsRepeater                    *wrapperspb.BoolValue   `protobuf:"bytes,1002,opt,name=config_is_repeater,json=configIsRepeater,proto3" json:"config_is_repeater,omitempty"`
	ConfigOpenNetwork                   *wrapperspb.BoolValue   `protobuf:"bytes,1003,opt,name=config_open_network,json=configOpenNetwork,proto3" json:"config_open_network,omitempty"`
	ConfigIsAviation                    *wrapperspb.BoolValue   `protobuf:"bytes,1004,opt,name=config_is_aviation,json=configIsAviation,proto3" json:"config_is_aviation,omitempty"`
	ConfigSecureDns                     *wrapperspb.BoolValue   `protobuf:"bytes,1005,opt,name=config_secure_dns,json=configSecureDns,proto3" json:"config_secure_dns,omitempty"`
	ConfigLegacy                        *wrapperspb.BoolValue   `protobuf:"bytes,1006,opt,name=config_legacy,json=configLegacy,proto3" json:"config_legacy,omitempty"`
	ConfigApMode                        *wrapperspb.BoolValue   `protobuf:"bytes,1007,opt,name=config_ap_mode,json=configApMode,proto3" json:"config_ap_mode,omitempty"`
	ConfigDfsEnabled                    *wrapperspb.BoolValue   `protobuf:"bytes,1008,opt,name=config_dfs_enabled,json=configDfsEnabled,proto3" json:"config_dfs_enabled,omitempty"`
	ConfigNetworkNameIsDefault          *wrapperspb.BoolValue   `protobuf:"bytes,1009,opt,name=config_network_name_is_default,json=configNetworkNameIsDefault,proto3" json:"config_network_name_is_default,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	ConfigRemoteSshEnabled *wrapperspb.BoolValue `protobuf:"bytes,1010,opt,name=config_remote_ssh_enabled,json=configRemoteSshEnabled,proto3" json:"config_remote_ssh_enabled,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StarlinkRouterHourlyMetricsV2) Reset() {
	*x = StarlinkRouterHourlyMetricsV2{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarlinkRouterHourlyMetricsV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarlinkRouterHourlyMetricsV2) ProtoMessage() {}

func (x *StarlinkRouterHourlyMetricsV2) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarlinkRouterHourlyMetricsV2.ProtoReflect.Descriptor instead.
func (*StarlinkRouterHourlyMetricsV2) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{60}
}

func (x *StarlinkRouterHourlyMetricsV2) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetTimestampDate() *wrapperspb.StringValue {
	if x != nil {
		return x.TimestampDate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetTimestampHour() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TimestampHour
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysHwGen() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysHwGen
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysSw() *wrapperspb.StringValue {
	if x != nil {
		return x.SysSw
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysCountry() *wrapperspb.StringValue {
	if x != nil {
		return x.SysCountry
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysIsDev() *wrapperspb.BoolValue {
	if x != nil {
		return x.SysIsDev
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysAllocFds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysAllocFds
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysCpuUsage() *wrapperspb.FloatValue {
	if x != nil {
		return x.SysCpuUsage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysMemFreeKb() *wrapperspb.FloatValue {
	if x != nil {
		return x.SysMemFreeKb
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysBootcount() *wrapperspb.Int32Value {
	if x != nil {
		return x.SysBootcount
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysPartitionsEqual() *wrapperspb.BoolValue {
	if x != nil {
		return x.SysPartitionsEqual
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysUptimeSeconds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SysUptimeSeconds
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSysAntiRollbackVersion() *wrapperspb.Int32Value {
	if x != nil {
		return x.SysAntiRollbackVersion
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzChannel() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzChannel
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzAntenna1Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna1Rssi
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzAntenna2Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna2Rssi
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzAntenna3Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzAntenna3Rssi
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzIfaceCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzIfaceCount
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzChanBusyFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzChanBusyFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzEdccaFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzEdccaFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzOverlappingBssFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzOverlappingBssFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzRxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzRxBytes
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzRxPackets() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzRxPackets
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzRxErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzRxErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzRxFrameErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzRxFrameErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzRxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzRxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzRxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzRxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzTxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzTxBytes
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzTxPackets() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzTxPackets
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzTxErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzTxErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzTxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzTxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzTxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzTxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzChannel() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzChannel
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzAntenna1Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna1Rssi
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzAntenna2Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna2Rssi
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzAntenna3Rssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzAntenna3Rssi
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzIfaceCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzIfaceCount
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzChanBusyFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzChanBusyFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzEdccaFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzEdccaFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzOverlappingBssFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzOverlappingBssFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzRxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzRxBytes
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzRxPackets() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzRxPackets
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzRxErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzRxErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzRxFrameErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzRxFrameErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzRxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzRxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzRxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzRxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzTxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzTxBytes
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzTxPackets() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzTxPackets
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzTxErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzTxErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzTxPacketErrorRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzTxPacketErrorRate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzTxAirtimeFraction() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzTxAirtimeFraction
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzThermalTemp() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzThermalTemp
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzThermalTemp() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzThermalTemp
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzThermalDutyCycle() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_2GhzThermalDutyCycle
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzThermalDutyCycle() *wrapperspb.FloatValue {
	if x != nil {
		return x.Radios_5GhzThermalDutyCycle
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_2GhzThermalThrottledSeconds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_2GhzThermalThrottledSeconds
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetRadios_5GhzThermalThrottledSeconds() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Radios_5GhzThermalThrottledSeconds
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesLanEthRxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesLanEthRxBytes
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesLanEthRxPackets() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesLanEthRxPackets
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesLanEthRxErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesLanEthRxErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesLanEthRxFrameErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesLanEthRxFrameErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesLanEthTxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesLanEthTxBytes
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesLanEthTxPackets() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesLanEthTxPackets
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesLanEthTxErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesLanEthTxErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesWanEthRxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesWanEthRxBytes
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesWanEthRxPackets() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesWanEthRxPackets
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesWanEthRxErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesWanEthRxErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesWanEthRxFrameErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesWanEthRxFrameErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesWanEthTxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesWanEthTxBytes
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesWanEthTxPackets() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesWanEthTxPackets
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetIfacesWanEthTxErrors() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IfacesWanEthTxErrors
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClients() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClients_2Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients_2Ghz
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClients_5Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Clients_5Ghz
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientsEth() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsEth
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientsRepeater() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeater
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientsRepeater_2Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeater_2Ghz
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientsRepeater_5Ghz() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeater_5Ghz
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientsRepeaterEth() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientsRepeaterEth
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetMeshHops() *wrapperspb.UInt32Value {
	if x != nil {
		return x.MeshHops
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetMeshOneHopRssiAvg_2Ghz() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshOneHopRssiAvg_2Ghz
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetMeshOneHopRssiAvg_5Ghz() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshOneHopRssiAvg_5Ghz
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetMeshTwoHopRssiAvg_2Ghz() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshTwoHopRssiAvg_2Ghz
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetMeshTwoHopRssiAvg_5Ghz() *wrapperspb.FloatValue {
	if x != nil {
		return x.MeshTwoHopRssiAvg_5Ghz
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingSecondsSinceLast_1SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_1SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingSecondsSinceLast_2SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_2SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingSecondsSinceLast_5SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_5SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingSecondsSinceLast_60SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_60SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingSecondsSinceLast_300SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingSecondsSinceLast_300SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDropRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDropRate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDropRateLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDropRateLast_1H
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingLatency() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingLatency
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDishSecondsSinceLast_1SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_1SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDishSecondsSinceLast_2SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_2SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDishSecondsSinceLast_5SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_5SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDishSecondsSinceLast_60SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_60SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDishSecondsSinceLast_300SOutage() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishSecondsSinceLast_300SOutage
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDishDropRate() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishDropRate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDishDropRateLast_1H() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishDropRateLast_1H
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetPingDishLatency() *wrapperspb.FloatValue {
	if x != nil {
		return x.PingDishLatency
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestRouterDownloadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestRouterDownloadMbps
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestRouterUploadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestRouterUploadMbps
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestRouterRssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestRouterRssi
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestWifiDownloadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestWifiDownloadMbps
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestWifiUploadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestWifiUploadMbps
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestClientDownloadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestClientDownloadMbps
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestClientUploadMbps() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestClientUploadMbps
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestClientRssi() *wrapperspb.FloatValue {
	if x != nil {
		return x.ClientSpeedtestClientRssi
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestClientIface() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientSpeedtestClientIface
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestClientOui() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientSpeedtestClientOui
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestClientTxRate() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientSpeedtestClientTxRate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestClientRxRate() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientSpeedtestClientRxRate
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetClientSpeedtestClientPlatformType() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ClientSpeedtestClientPlatformType
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSpeedtestTcp_8DownloadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_8DownloadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSpeedtestTcp_8DownloadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_8DownloadMbpsMax
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSpeedtestTcp_8UploadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_8UploadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSpeedtestTcp_8UploadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_8UploadMbpsMax
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSpeedtestTcp_64DownloadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_64DownloadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSpeedtestTcp_64DownloadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_64DownloadMbpsMax
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSpeedtestTcp_64UploadMbpsAvg() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_64UploadMbpsAvg
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetSpeedtestTcp_64UploadMbpsMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.SpeedtestTcp_64UploadMbpsMax
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetDishCellId() *wrapperspb.UInt32Value {
	if x != nil {
		return x.DishCellId
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigSetupComplete() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigSetupComplete
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigBandsSplit() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigBandsSplit
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigIsRepeater() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigIsRepeater
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigOpenNetwork() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigOpenNetwork
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigIsAviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigIsAviation
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigSecureDns() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigSecureDns
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigLegacy() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigLegacy
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigApMode() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigApMode
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigDfsEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigDfsEnabled
	}
	return nil
}

func (x *StarlinkRouterHourlyMetricsV2) GetConfigNetworkNameIsDefault() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigNetworkNameIsDefault
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *StarlinkRouterHourlyMetricsV2) GetConfigRemoteSshEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConfigRemoteSshEnabled
	}
	return nil
}

type WifiGuestInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGuestInfoRequest) Reset() {
	*x = WifiGuestInfoRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGuestInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGuestInfoRequest) ProtoMessage() {}

func (x *WifiGuestInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGuestInfoRequest.ProtoReflect.Descriptor instead.
func (*WifiGuestInfoRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{61}
}

type WifiGuestInfoResponse struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	IsGuest                   bool                   `protobuf:"varint,1,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	IsOnline                  bool                   `protobuf:"varint,2,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	RouterHardwareVersion     string                 `protobuf:"bytes,3,opt,name=router_hardware_version,json=routerHardwareVersion,proto3" json:"router_hardware_version,omitempty"`
	DishHardwareVersion       string                 `protobuf:"bytes,4,opt,name=dish_hardware_version,json=dishHardwareVersion,proto3" json:"dish_hardware_version,omitempty"`
	IsRouterAviationConformed bool                   `protobuf:"varint,5,opt,name=is_router_aviation_conformed,json=isRouterAviationConformed,proto3" json:"is_router_aviation_conformed,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *WifiGuestInfoResponse) Reset() {
	*x = WifiGuestInfoResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGuestInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGuestInfoResponse) ProtoMessage() {}

func (x *WifiGuestInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGuestInfoResponse.ProtoReflect.Descriptor instead.
func (*WifiGuestInfoResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{62}
}

func (x *WifiGuestInfoResponse) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *WifiGuestInfoResponse) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *WifiGuestInfoResponse) GetRouterHardwareVersion() string {
	if x != nil {
		return x.RouterHardwareVersion
	}
	return ""
}

func (x *WifiGuestInfoResponse) GetDishHardwareVersion() string {
	if x != nil {
		return x.DishHardwareVersion
	}
	return ""
}

func (x *WifiGuestInfoResponse) GetIsRouterAviationConformed() bool {
	if x != nil {
		return x.IsRouterAviationConformed
	}
	return false
}

type WifiFactoryTestCommandRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Command:
	//
	//	*WifiFactoryTestCommandRequest_IwprivCommand
	//	*WifiFactoryTestCommandRequest_IpLinkSetCommand
	//	*WifiFactoryTestCommandRequest_IpAddrSetCommand
	Command       isWifiFactoryTestCommandRequest_Command `protobuf_oneof:"command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiFactoryTestCommandRequest) Reset() {
	*x = WifiFactoryTestCommandRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiFactoryTestCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiFactoryTestCommandRequest) ProtoMessage() {}

func (x *WifiFactoryTestCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiFactoryTestCommandRequest.ProtoReflect.Descriptor instead.
func (*WifiFactoryTestCommandRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{63}
}

func (x *WifiFactoryTestCommandRequest) GetCommand() isWifiFactoryTestCommandRequest_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *WifiFactoryTestCommandRequest) GetIwprivCommand() *IwprivCommand {
	if x != nil {
		if x, ok := x.Command.(*WifiFactoryTestCommandRequest_IwprivCommand); ok {
			return x.IwprivCommand
		}
	}
	return nil
}

func (x *WifiFactoryTestCommandRequest) GetIpLinkSetCommand() *IpLinkSetCommand {
	if x != nil {
		if x, ok := x.Command.(*WifiFactoryTestCommandRequest_IpLinkSetCommand); ok {
			return x.IpLinkSetCommand
		}
	}
	return nil
}

func (x *WifiFactoryTestCommandRequest) GetIpAddrSetCommand() *IpAddrSetCommand {
	if x != nil {
		if x, ok := x.Command.(*WifiFactoryTestCommandRequest_IpAddrSetCommand); ok {
			return x.IpAddrSetCommand
		}
	}
	return nil
}

type isWifiFactoryTestCommandRequest_Command interface {
	isWifiFactoryTestCommandRequest_Command()
}

type WifiFactoryTestCommandRequest_IwprivCommand struct {
	IwprivCommand *IwprivCommand `protobuf:"bytes,1,opt,name=iwpriv_command,json=iwprivCommand,proto3,oneof"`
}

type WifiFactoryTestCommandRequest_IpLinkSetCommand struct {
	IpLinkSetCommand *IpLinkSetCommand `protobuf:"bytes,2,opt,name=ip_link_set_command,json=ipLinkSetCommand,proto3,oneof"`
}

type WifiFactoryTestCommandRequest_IpAddrSetCommand struct {
	IpAddrSetCommand *IpAddrSetCommand `protobuf:"bytes,3,opt,name=ip_addr_set_command,json=ipAddrSetCommand,proto3,oneof"`
}

func (*WifiFactoryTestCommandRequest_IwprivCommand) isWifiFactoryTestCommandRequest_Command() {}

func (*WifiFactoryTestCommandRequest_IpLinkSetCommand) isWifiFactoryTestCommandRequest_Command() {}

func (*WifiFactoryTestCommandRequest_IpAddrSetCommand) isWifiFactoryTestCommandRequest_Command() {}

type WifiFactoryTestCommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      string                 `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiFactoryTestCommandResponse) Reset() {
	*x = WifiFactoryTestCommandResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiFactoryTestCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiFactoryTestCommandResponse) ProtoMessage() {}

func (x *WifiFactoryTestCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiFactoryTestCommandResponse.ProtoReflect.Descriptor instead.
func (*WifiFactoryTestCommandResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{64}
}

func (x *WifiFactoryTestCommandResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type IwprivCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iface         string                 `protobuf:"bytes,1,opt,name=iface,proto3" json:"iface,omitempty"`
	Arg           string                 `protobuf:"bytes,2,opt,name=arg,proto3" json:"arg,omitempty"`
	Ioctl         IwprivCommand_Ioctl    `protobuf:"varint,3,opt,name=ioctl,proto3,enum=SpaceX.API.Device.IwprivCommand_Ioctl" json:"ioctl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IwprivCommand) Reset() {
	*x = IwprivCommand{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IwprivCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IwprivCommand) ProtoMessage() {}

func (x *IwprivCommand) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IwprivCommand.ProtoReflect.Descriptor instead.
func (*IwprivCommand) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{65}
}

func (x *IwprivCommand) GetIface() string {
	if x != nil {
		return x.Iface
	}
	return ""
}

func (x *IwprivCommand) GetArg() string {
	if x != nil {
		return x.Arg
	}
	return ""
}

func (x *IwprivCommand) GetIoctl() IwprivCommand_Ioctl {
	if x != nil {
		return x.Ioctl
	}
	return IwprivCommand_IOCTL_SET
}

type IpLinkSetCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iface         string                 `protobuf:"bytes,1,opt,name=iface,proto3" json:"iface,omitempty"`
	Up            bool                   `protobuf:"varint,2,opt,name=up,proto3" json:"up,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpLinkSetCommand) Reset() {
	*x = IpLinkSetCommand{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpLinkSetCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpLinkSetCommand) ProtoMessage() {}

func (x *IpLinkSetCommand) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpLinkSetCommand.ProtoReflect.Descriptor instead.
func (*IpLinkSetCommand) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{66}
}

func (x *IpLinkSetCommand) GetIface() string {
	if x != nil {
		return x.Iface
	}
	return ""
}

func (x *IpLinkSetCommand) GetUp() bool {
	if x != nil {
		return x.Up
	}
	return false
}

type IpAddrSetCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iface         string                 `protobuf:"bytes,1,opt,name=iface,proto3" json:"iface,omitempty"`
	Add           bool                   `protobuf:"varint,2,opt,name=add,proto3" json:"add,omitempty"`
	Cidr          string                 `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpAddrSetCommand) Reset() {
	*x = IpAddrSetCommand{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpAddrSetCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpAddrSetCommand) ProtoMessage() {}

func (x *IpAddrSetCommand) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpAddrSetCommand.ProtoReflect.Descriptor instead.
func (*IpAddrSetCommand) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{67}
}

func (x *IpAddrSetCommand) GetIface() string {
	if x != nil {
		return x.Iface
	}
	return ""
}

func (x *IpAddrSetCommand) GetAdd() bool {
	if x != nil {
		return x.Add
	}
	return false
}

func (x *IpAddrSetCommand) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

type WifiStartLocalTelemProxyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          int32                  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiStartLocalTelemProxyRequest) Reset() {
	*x = WifiStartLocalTelemProxyRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiStartLocalTelemProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiStartLocalTelemProxyRequest) ProtoMessage() {}

func (x *WifiStartLocalTelemProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiStartLocalTelemProxyRequest.ProtoReflect.Descriptor instead.
func (*WifiStartLocalTelemProxyRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{68}
}

func (x *WifiStartLocalTelemProxyRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type WifiBackhaulStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiBackhaulStatsRequest) Reset() {
	*x = WifiBackhaulStatsRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiBackhaulStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiBackhaulStatsRequest) ProtoMessage() {}

func (x *WifiBackhaulStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiBackhaulStatsRequest.ProtoReflect.Descriptor instead.
func (*WifiBackhaulStatsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{69}
}

type WifiBackhaulStatsResponse struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	Success        bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Bssid          string                  `protobuf:"bytes,2,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Iface          IfaceType               `protobuf:"varint,3,opt,name=iface,proto3,enum=SpaceX.API.Device.IfaceType" json:"iface,omitempty"`
	Preference     uint32                  `protobuf:"varint,4,opt,name=preference,proto3" json:"preference,omitempty"`
	SiteSurveyScan []*WifiSiteSurveyResult `protobuf:"bytes,5,rep,name=siteSurveyScan,proto3" json:"siteSurveyScan,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WifiBackhaulStatsResponse) Reset() {
	*x = WifiBackhaulStatsResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiBackhaulStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiBackhaulStatsResponse) ProtoMessage() {}

func (x *WifiBackhaulStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiBackhaulStatsResponse.ProtoReflect.Descriptor instead.
func (*WifiBackhaulStatsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{70}
}

func (x *WifiBackhaulStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WifiBackhaulStatsResponse) GetBssid() string {
	if x != nil {
		return x.Bssid
	}
	return ""
}

func (x *WifiBackhaulStatsResponse) GetIface() IfaceType {
	if x != nil {
		return x.Iface
	}
	return IfaceType_IFACE_TYPE_UNKNOWN
}

func (x *WifiBackhaulStatsResponse) GetPreference() uint32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

func (x *WifiBackhaulStatsResponse) GetSiteSurveyScan() []*WifiSiteSurveyResult {
	if x != nil {
		return x.SiteSurveyScan
	}
	return nil
}

type WifiToggleUmbilicalModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        bool                   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiToggleUmbilicalModeRequest) Reset() {
	*x = WifiToggleUmbilicalModeRequest{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiToggleUmbilicalModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiToggleUmbilicalModeRequest) ProtoMessage() {}

func (x *WifiToggleUmbilicalModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiToggleUmbilicalModeRequest.ProtoReflect.Descriptor instead.
func (*WifiToggleUmbilicalModeRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{71}
}

func (x *WifiToggleUmbilicalModeRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type WifiUpdateResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Stats         *WifiSoftwareUpdateStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiUpdateResponse) Reset() {
	*x = WifiUpdateResponse{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiUpdateResponse) ProtoMessage() {}

func (x *WifiUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiUpdateResponse.ProtoReflect.Descriptor instead.
func (*WifiUpdateResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{72}
}

func (x *WifiUpdateResponse) GetStats() *WifiSoftwareUpdateStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type SteerClientRequest_SteerTarget struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	Bssid string `protobuf:"bytes,1,opt,name=bssid,proto3" json:"bssid,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	Channel       int32 `protobuf:"varint,2,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SteerClientRequest_SteerTarget) Reset() {
	*x = SteerClientRequest_SteerTarget{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SteerClientRequest_SteerTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SteerClientRequest_SteerTarget) ProtoMessage() {}

func (x *SteerClientRequest_SteerTarget) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SteerClientRequest_SteerTarget.ProtoReflect.Descriptor instead.
func (*SteerClientRequest_SteerTarget) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{10, 0}
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *SteerClientRequest_SteerTarget) GetBssid() string {
	if x != nil {
		return x.Bssid
	}
	return ""
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *SteerClientRequest_SteerTarget) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type WifiBtmRequest_NeighborReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bssid         string                 `protobuf:"bytes,1,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Channel       uint32                 `protobuf:"varint,2,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiBtmRequest_NeighborReport) Reset() {
	*x = WifiBtmRequest_NeighborReport{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiBtmRequest_NeighborReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiBtmRequest_NeighborReport) ProtoMessage() {}

func (x *WifiBtmRequest_NeighborReport) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiBtmRequest_NeighborReport.ProtoReflect.Descriptor instead.
func (*WifiBtmRequest_NeighborReport) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{11, 0}
}

func (x *WifiBtmRequest_NeighborReport) GetBssid() string {
	if x != nil {
		return x.Bssid
	}
	return ""
}

func (x *WifiBtmRequest_NeighborReport) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type WifiSelfTest_TestResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	FailureReason string                 `protobuf:"bytes,3,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiSelfTest_TestResult) Reset() {
	*x = WifiSelfTest_TestResult{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiSelfTest_TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSelfTest_TestResult) ProtoMessage() {}

func (x *WifiSelfTest_TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSelfTest_TestResult.ProtoReflect.Descriptor instead.
func (*WifiSelfTest_TestResult) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{12, 0}
}

func (x *WifiSelfTest_TestResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WifiSelfTest_TestResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WifiSelfTest_TestResult) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

type WifiGetHistoryResponse_DnsResolverHistory struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DropRateLast_15S []float32              `protobuf:"fixed32,2,rep,packed,name=drop_rate_last_15s,json=dropRateLast15s,proto3" json:"drop_rate_last_15s,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WifiGetHistoryResponse_DnsResolverHistory) Reset() {
	*x = WifiGetHistoryResponse_DnsResolverHistory{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetHistoryResponse_DnsResolverHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetHistoryResponse_DnsResolverHistory) ProtoMessage() {}

func (x *WifiGetHistoryResponse_DnsResolverHistory) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetHistoryResponse_DnsResolverHistory.ProtoReflect.Descriptor instead.
func (*WifiGetHistoryResponse_DnsResolverHistory) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{26, 1}
}

func (x *WifiGetHistoryResponse_DnsResolverHistory) GetDropRateLast_15S() []float32 {
	if x != nil {
		return x.DropRateLast_15S
	}
	return nil
}

type WifiClient_RxStats struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Bytes                    uint64                 `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	CountErrors              uint64                 `protobuf:"varint,2,opt,name=count_errors,json=countErrors,proto3" json:"count_errors,omitempty"`
	PhyMode                  uint32                 `protobuf:"varint,13,opt,name=phy_mode,json=phyMode,proto3" json:"phy_mode,omitempty"`
	Nss                      int32                  `protobuf:"varint,3,opt,name=nss,proto3" json:"nss,omitempty"`
	RateMbps                 uint32                 `protobuf:"varint,8,opt,name=rate_mbps,json=rateMbps,proto3" json:"rate_mbps,omitempty"`
	RateMbpsLast_30S         float32                `protobuf:"fixed32,14,opt,name=rate_mbps_last_30s,json=rateMbpsLast30s,proto3" json:"rate_mbps_last_30s,omitempty"`
	RateMbpsLast_15S         float32                `protobuf:"fixed32,15,opt,name=rate_mbps_last_15s,json=rateMbpsLast15s,proto3" json:"rate_mbps_last_15s,omitempty"`
	RateMbpsLast_1MAvg       float32                `protobuf:"fixed32,16,opt,name=rate_mbps_last_1m_avg,json=rateMbpsLast1mAvg,proto3" json:"rate_mbps_last_1m_avg,omitempty"`
	ThroughputMbpsLast_1MAvg float32                `protobuf:"fixed32,17,opt,name=throughput_mbps_last_1m_avg,json=throughputMbpsLast1mAvg,proto3" json:"throughput_mbps_last_1m_avg,omitempty"`
	Mcs                      uint32                 `protobuf:"varint,5,opt,name=mcs,proto3" json:"mcs,omitempty"`
	Bandwidth                uint32                 `protobuf:"varint,6,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	GuardNs                  uint32                 `protobuf:"varint,7,opt,name=guard_ns,json=guardNs,proto3" json:"guard_ns,omitempty"`
	AirtimeFractionLast_1S   float32                `protobuf:"fixed32,9,opt,name=airtime_fraction_last_1s,json=airtimeFractionLast1s,proto3" json:"airtime_fraction_last_1s,omitempty"`
	SampledPackets           uint32                 `protobuf:"varint,10,opt,name=sampled_packets,json=sampledPackets,proto3" json:"sampled_packets,omitempty"`
	SampledPacketsRetried    uint32                 `protobuf:"varint,11,opt,name=sampled_packets_retried,json=sampledPacketsRetried,proto3" json:"sampled_packets_retried,omitempty"`
	SampledPacketsDropped    uint32                 `protobuf:"varint,12,opt,name=sampled_packets_dropped,json=sampledPacketsDropped,proto3" json:"sampled_packets_dropped,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *WifiClient_RxStats) Reset() {
	*x = WifiClient_RxStats{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClient_RxStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient_RxStats) ProtoMessage() {}

func (x *WifiClient_RxStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient_RxStats.ProtoReflect.Descriptor instead.
func (*WifiClient_RxStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28, 0}
}

func (x *WifiClient_RxStats) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *WifiClient_RxStats) GetCountErrors() uint64 {
	if x != nil {
		return x.CountErrors
	}
	return 0
}

func (x *WifiClient_RxStats) GetPhyMode() uint32 {
	if x != nil {
		return x.PhyMode
	}
	return 0
}

func (x *WifiClient_RxStats) GetNss() int32 {
	if x != nil {
		return x.Nss
	}
	return 0
}

func (x *WifiClient_RxStats) GetRateMbps() uint32 {
	if x != nil {
		return x.RateMbps
	}
	return 0
}

func (x *WifiClient_RxStats) GetRateMbpsLast_30S() float32 {
	if x != nil {
		return x.RateMbpsLast_30S
	}
	return 0
}

func (x *WifiClient_RxStats) GetRateMbpsLast_15S() float32 {
	if x != nil {
		return x.RateMbpsLast_15S
	}
	return 0
}

func (x *WifiClient_RxStats) GetRateMbpsLast_1MAvg() float32 {
	if x != nil {
		return x.RateMbpsLast_1MAvg
	}
	return 0
}

func (x *WifiClient_RxStats) GetThroughputMbpsLast_1MAvg() float32 {
	if x != nil {
		return x.ThroughputMbpsLast_1MAvg
	}
	return 0
}

func (x *WifiClient_RxStats) GetMcs() uint32 {
	if x != nil {
		return x.Mcs
	}
	return 0
}

func (x *WifiClient_RxStats) GetBandwidth() uint32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *WifiClient_RxStats) GetGuardNs() uint32 {
	if x != nil {
		return x.GuardNs
	}
	return 0
}

func (x *WifiClient_RxStats) GetAirtimeFractionLast_1S() float32 {
	if x != nil {
		return x.AirtimeFractionLast_1S
	}
	return 0
}

func (x *WifiClient_RxStats) GetSampledPackets() uint32 {
	if x != nil {
		return x.SampledPackets
	}
	return 0
}

func (x *WifiClient_RxStats) GetSampledPacketsRetried() uint32 {
	if x != nil {
		return x.SampledPacketsRetried
	}
	return 0
}

func (x *WifiClient_RxStats) GetSampledPacketsDropped() uint32 {
	if x != nil {
		return x.SampledPacketsDropped
	}
	return 0
}

type WifiClient_TxStats struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Bytes                  uint64                 `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	SuccessBytes           uint64                 `protobuf:"varint,2,opt,name=success_bytes,json=successBytes,proto3" json:"success_bytes,omitempty"`
	PhyMode                uint32                 `protobuf:"varint,10,opt,name=phy_mode,json=phyMode,proto3" json:"phy_mode,omitempty"`
	Nss                    int32                  `protobuf:"varint,3,opt,name=nss,proto3" json:"nss,omitempty"`
	RateMbps               uint32                 `protobuf:"varint,8,opt,name=rate_mbps,json=rateMbps,proto3" json:"rate_mbps,omitempty"`
	RateMbpsLast_30S       float32                `protobuf:"fixed32,11,opt,name=rate_mbps_last_30s,json=rateMbpsLast30s,proto3" json:"rate_mbps_last_30s,omitempty"`
	RateMbpsLast_15S       float32                `protobuf:"fixed32,12,opt,name=rate_mbps_last_15s,json=rateMbpsLast15s,proto3" json:"rate_mbps_last_15s,omitempty"`
	Mcs                    uint32                 `protobuf:"varint,5,opt,name=mcs,proto3" json:"mcs,omitempty"`
	Bandwidth              uint32                 `protobuf:"varint,6,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	GuardNs                uint32                 `protobuf:"varint,7,opt,name=guard_ns,json=guardNs,proto3" json:"guard_ns,omitempty"`
	AirtimeFractionLast_1S float32                `protobuf:"fixed32,9,opt,name=airtime_fraction_last_1s,json=airtimeFractionLast1s,proto3" json:"airtime_fraction_last_1s,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *WifiClient_TxStats) Reset() {
	*x = WifiClient_TxStats{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClient_TxStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient_TxStats) ProtoMessage() {}

func (x *WifiClient_TxStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient_TxStats.ProtoReflect.Descriptor instead.
func (*WifiClient_TxStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28, 1}
}

func (x *WifiClient_TxStats) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *WifiClient_TxStats) GetSuccessBytes() uint64 {
	if x != nil {
		return x.SuccessBytes
	}
	return 0
}

func (x *WifiClient_TxStats) GetPhyMode() uint32 {
	if x != nil {
		return x.PhyMode
	}
	return 0
}

func (x *WifiClient_TxStats) GetNss() int32 {
	if x != nil {
		return x.Nss
	}
	return 0
}

func (x *WifiClient_TxStats) GetRateMbps() uint32 {
	if x != nil {
		return x.RateMbps
	}
	return 0
}

func (x *WifiClient_TxStats) GetRateMbpsLast_30S() float32 {
	if x != nil {
		return x.RateMbpsLast_30S
	}
	return 0
}

func (x *WifiClient_TxStats) GetRateMbpsLast_15S() float32 {
	if x != nil {
		return x.RateMbpsLast_15S
	}
	return 0
}

func (x *WifiClient_TxStats) GetMcs() uint32 {
	if x != nil {
		return x.Mcs
	}
	return 0
}

func (x *WifiClient_TxStats) GetBandwidth() uint32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *WifiClient_TxStats) GetGuardNs() uint32 {
	if x != nil {
		return x.GuardNs
	}
	return 0
}

func (x *WifiClient_TxStats) GetAirtimeFractionLast_1S() float32 {
	if x != nil {
		return x.AirtimeFractionLast_1S
	}
	return 0
}

type WifiClient_PingMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	InUnhappyHour_2S bool                   `protobuf:"varint,1,opt,name=in_unhappy_hour_2s,json=inUnhappyHour2s,proto3" json:"in_unhappy_hour_2s,omitempty"`
	InUnhappyHour_5S bool                   `protobuf:"varint,2,opt,name=in_unhappy_hour_5s,json=inUnhappyHour5s,proto3" json:"in_unhappy_hour_5s,omitempty"`
	DropRate_5M      float32                `protobuf:"fixed32,3,opt,name=drop_rate_5m,json=dropRate5m,proto3" json:"drop_rate_5m,omitempty"`
	Latency_5M       float32                `protobuf:"fixed32,4,opt,name=latency_5m,json=latency5m,proto3" json:"latency_5m,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WifiClient_PingMetrics) Reset() {
	*x = WifiClient_PingMetrics{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClient_PingMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient_PingMetrics) ProtoMessage() {}

func (x *WifiClient_PingMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient_PingMetrics.ProtoReflect.Descriptor instead.
func (*WifiClient_PingMetrics) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28, 2}
}

func (x *WifiClient_PingMetrics) GetInUnhappyHour_2S() bool {
	if x != nil {
		return x.InUnhappyHour_2S
	}
	return false
}

func (x *WifiClient_PingMetrics) GetInUnhappyHour_5S() bool {
	if x != nil {
		return x.InUnhappyHour_5S
	}
	return false
}

func (x *WifiClient_PingMetrics) GetDropRate_5M() float32 {
	if x != nil {
		return x.DropRate_5M
	}
	return 0
}

func (x *WifiClient_PingMetrics) GetLatency_5M() float32 {
	if x != nil {
		return x.Latency_5M
	}
	return 0
}

type WifiClient_FqcodelInfo struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	EnqsHiPrio            uint64                 `protobuf:"varint,1,opt,name=enqs_hi_prio,json=enqsHiPrio,proto3" json:"enqs_hi_prio,omitempty"`
	EnqsFqcodel           uint64                 `protobuf:"varint,2,opt,name=enqs_fqcodel,json=enqsFqcodel,proto3" json:"enqs_fqcodel,omitempty"`
	EnqsNew               uint64                 `protobuf:"varint,3,opt,name=enqs_new,json=enqsNew,proto3" json:"enqs_new,omitempty"`
	EnqsOld               uint64                 `protobuf:"varint,4,opt,name=enqs_old,json=enqsOld,proto3" json:"enqs_old,omitempty"`
	EnqsDropped           uint64                 `protobuf:"varint,5,opt,name=enqs_dropped,json=enqsDropped,proto3" json:"enqs_dropped,omitempty"`
	DeqsNew               uint64                 `protobuf:"varint,6,opt,name=deqs_new,json=deqsNew,proto3" json:"deqs_new,omitempty"`
	DeqsOld               uint64                 `protobuf:"varint,7,opt,name=deqs_old,json=deqsOld,proto3" json:"deqs_old,omitempty"`
	DeqsFlowNew           uint64                 `protobuf:"varint,8,opt,name=deqs_flow_new,json=deqsFlowNew,proto3" json:"deqs_flow_new,omitempty"`
	DeqsFlowOldDeficit    uint64                 `protobuf:"varint,9,opt,name=deqs_flow_old_deficit,json=deqsFlowOldDeficit,proto3" json:"deqs_flow_old_deficit,omitempty"`
	DeqsFlowOldStarvation uint64                 `protobuf:"varint,10,opt,name=deqs_flow_old_starvation,json=deqsFlowOldStarvation,proto3" json:"deqs_flow_old_starvation,omitempty"`
	DeqsDropped           uint64                 `protobuf:"varint,11,opt,name=deqs_dropped,json=deqsDropped,proto3" json:"deqs_dropped,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *WifiClient_FqcodelInfo) Reset() {
	*x = WifiClient_FqcodelInfo{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClient_FqcodelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient_FqcodelInfo) ProtoMessage() {}

func (x *WifiClient_FqcodelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient_FqcodelInfo.ProtoReflect.Descriptor instead.
func (*WifiClient_FqcodelInfo) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28, 3}
}

func (x *WifiClient_FqcodelInfo) GetEnqsHiPrio() uint64 {
	if x != nil {
		return x.EnqsHiPrio
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetEnqsFqcodel() uint64 {
	if x != nil {
		return x.EnqsFqcodel
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetEnqsNew() uint64 {
	if x != nil {
		return x.EnqsNew
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetEnqsOld() uint64 {
	if x != nil {
		return x.EnqsOld
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetEnqsDropped() uint64 {
	if x != nil {
		return x.EnqsDropped
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetDeqsNew() uint64 {
	if x != nil {
		return x.DeqsNew
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetDeqsOld() uint64 {
	if x != nil {
		return x.DeqsOld
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetDeqsFlowNew() uint64 {
	if x != nil {
		return x.DeqsFlowNew
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetDeqsFlowOldDeficit() uint64 {
	if x != nil {
		return x.DeqsFlowOldDeficit
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetDeqsFlowOldStarvation() uint64 {
	if x != nil {
		return x.DeqsFlowOldStarvation
	}
	return 0
}

func (x *WifiClient_FqcodelInfo) GetDeqsDropped() uint64 {
	if x != nil {
		return x.DeqsDropped
	}
	return 0
}

type WifiClient_Alerts struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ThroughputLimited bool                   `protobuf:"varint,1,opt,name=throughput_limited,json=throughputLimited,proto3" json:"throughput_limited,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *WifiClient_Alerts) Reset() {
	*x = WifiClient_Alerts{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClient_Alerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient_Alerts) ProtoMessage() {}

func (x *WifiClient_Alerts) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient_Alerts.ProtoReflect.Descriptor instead.
func (*WifiClient_Alerts) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28, 4}
}

func (x *WifiClient_Alerts) GetThroughputLimited() bool {
	if x != nil {
		return x.ThroughputLimited
	}
	return false
}

type WifiPersistentStats_Event struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Count                 uint32                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	LastOccurredTimestamp int64                  `protobuf:"varint,2,opt,name=last_occurred_timestamp,json=lastOccurredTimestamp,proto3" json:"last_occurred_timestamp,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *WifiPersistentStats_Event) Reset() {
	*x = WifiPersistentStats_Event{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiPersistentStats_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiPersistentStats_Event) ProtoMessage() {}

func (x *WifiPersistentStats_Event) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiPersistentStats_Event.ProtoReflect.Descriptor instead.
func (*WifiPersistentStats_Event) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{42, 0}
}

func (x *WifiPersistentStats_Event) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WifiPersistentStats_Event) GetLastOccurredTimestamp() int64 {
	if x != nil {
		return x.LastOccurredTimestamp
	}
	return 0
}

type RadioStats_ThermalStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Level uint32                 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
	Temp           uint32  `protobuf:"varint,2,opt,name=temp,proto3" json:"temp,omitempty"`
	Temp2          float64 `protobuf:"fixed64,3,opt,name=temp2,proto3" json:"temp2,omitempty"`
	PowerReduction uint32  `protobuf:"varint,4,opt,name=power_reduction,json=powerReduction,proto3" json:"power_reduction,omitempty"`
	DutyCycle      uint32  `protobuf:"varint,5,opt,name=duty_cycle,json=dutyCycle,proto3" json:"duty_cycle,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RadioStats_ThermalStatus) Reset() {
	*x = RadioStats_ThermalStatus{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RadioStats_ThermalStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioStats_ThermalStatus) ProtoMessage() {}

func (x *RadioStats_ThermalStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioStats_ThermalStatus.ProtoReflect.Descriptor instead.
func (*RadioStats_ThermalStatus) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{44, 0}
}

func (x *RadioStats_ThermalStatus) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/wifi.proto.
func (x *RadioStats_ThermalStatus) GetTemp() uint32 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *RadioStats_ThermalStatus) GetTemp2() float64 {
	if x != nil {
		return x.Temp2
	}
	return 0
}

func (x *RadioStats_ThermalStatus) GetPowerReduction() uint32 {
	if x != nil {
		return x.PowerReduction
	}
	return 0
}

func (x *RadioStats_ThermalStatus) GetDutyCycle() uint32 {
	if x != nil {
		return x.DutyCycle
	}
	return 0
}

type RadioStats_AntennaStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rssi1         float32                `protobuf:"fixed32,1,opt,name=rssi1,proto3" json:"rssi1,omitempty"`
	Rssi2         float32                `protobuf:"fixed32,2,opt,name=rssi2,proto3" json:"rssi2,omitempty"`
	Rssi3         float32                `protobuf:"fixed32,3,opt,name=rssi3,proto3" json:"rssi3,omitempty"`
	Rssi4         float32                `protobuf:"fixed32,4,opt,name=rssi4,proto3" json:"rssi4,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RadioStats_AntennaStatus) Reset() {
	*x = RadioStats_AntennaStatus{}
	mi := &file_spacex_api_device_wifi_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RadioStats_AntennaStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioStats_AntennaStatus) ProtoMessage() {}

func (x *RadioStats_AntennaStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioStats_AntennaStatus.ProtoReflect.Descriptor instead.
func (*RadioStats_AntennaStatus) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{44, 1}
}

func (x *RadioStats_AntennaStatus) GetRssi1() float32 {
	if x != nil {
		return x.Rssi1
	}
	return 0
}

func (x *RadioStats_AntennaStatus) GetRssi2() float32 {
	if x != nil {
		return x.Rssi2
	}
	return 0
}

func (x *RadioStats_AntennaStatus) GetRssi3() float32 {
	if x != nil {
		return x.Rssi3
	}
	return 0
}

func (x *RadioStats_AntennaStatus) GetRssi4() float32 {
	if x != nil {
		return x.Rssi4
	}
	return 0
}

var File_spacex_api_device_wifi_proto protoreflect.FileDescriptor

const file_spacex_api_device_wifi_proto_rawDesc = "" +
	"\n" +
	"\x1cspacex_api/device/wifi.proto\x12\x11SpaceX.API.Device\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1espacex_api/device/common.proto\x1a#spacex_api/device/wifi_config.proto\x1a!spacex_api/device/wifi_util.proto\x1a.spacex_api/telemetron/public/common/time.proto\x1a8spacex/api/satellites/network/ut_disablement_codes.proto\"F\n" +
	"\vWifiClients\x127\n" +
	"\aclients\x18\x01 \x03(\v2\x1d.SpaceX.API.Device.WifiClientR\aclients\"\xa9\x03\n" +
	"\fToController\x12\x1f\n" +
	"\vapi_version\x18\x04 \x01(\x05R\n" +
	"apiVersion\x123\n" +
	"\x16api_version_other_side\x18\a \x01(\x05R\x13apiVersionOtherSide\x12=\n" +
	"\x1bready_for_multiple_networks\x18\x06 \x01(\bR\x18readyForMultipleNetworks\x12:\n" +
	"\aclients\x18\x01 \x01(\v2\x1e.SpaceX.API.Device.WifiClientsH\x00R\aclients\x12>\n" +
	"\tmesh_join\x18\x02 \x01(\v2\x1f.SpaceX.API.Device.WifiMeshJoinH\x00R\bmeshJoin\x12;\n" +
	"\x06status\x18\x03 \x01(\v2!.SpaceX.API.Device.WifiMeshStatusH\x00R\x06status\x12@\n" +
	"\tspeedtest\x18\x05 \x01(\v2 .SpaceX.API.Device.MeshSpeedtestH\x00R\tspeedtestB\t\n" +
	"\amessage\"\xda\x01\n" +
	"\fWifiMeshJoin\x12 \n" +
	"\vincarnation\x18\x01 \x01(\x04R\vincarnation\x12)\n" +
	"\x10hardware_version\x18\x02 \x01(\tR\x0fhardwareVersion\x12,\n" +
	"\x12supports_5ghz_high\x18\x03 \x01(\bR\x10supports5ghzHigh\x12O\n" +
	"\x0esiteSurveyScan\x18\x04 \x03(\v2'.SpaceX.API.Device.WifiSiteSurveyResultR\x0esiteSurveyScan\"\x90\x03\n" +
	"\x0eWifiMeshStatus\x12)\n" +
	"\x10software_version\x18\x05 \x01(\tR\x0fsoftwareVersion\x12\x17\n" +
	"\amac_lan\x18\x06 \x01(\tR\x06macLan\x120\n" +
	"\x14source_mac_addresses\x18\a \x03(\tR\x12sourceMacAddresses\x127\n" +
	"\aclients\x18\x02 \x03(\v2\x1d.SpaceX.API.Device.WifiClientR\aclients\x12E\n" +
	"\bbss_list\x18\x03 \x03(\v2*.SpaceX.API.Device.InflatedBasicServiceSetR\abssList\x12)\n" +
	"\x10hardware_version\x18\x04 \x01(\tR\x0fhardwareVersion\x12%\n" +
	"\x0ebackhaul_bssid\x18\b \x01(\tR\rbackhaulBssid\x126\n" +
	"\x17backhaul_est_preference\x18\t \x01(\rR\x15backhaulEstPreference\"\x16\n" +
	"\x14MeshSpeedtestRequest\"\xb1\x01\n" +
	"\rMeshSpeedtest\x12*\n" +
	"\x11upload_start_time\x18\x01 \x01(\x03R\x0fuploadStartTime\x12.\n" +
	"\x13download_start_time\x18\x02 \x01(\x03R\x11downloadStartTime\x12\x1f\n" +
	"\vupload_mbps\x18\x03 \x01(\x02R\n" +
	"uploadMbps\x12#\n" +
	"\rdownload_mbps\x18\x04 \x01(\x02R\fdownloadMbps\"\xcc\x02\n" +
	"\x14WifiSiteSurveyResult\x12\x12\n" +
	"\x04rssi\x18\x01 \x01(\x02R\x04rssi\x12\x18\n" +
	"\achannel\x18\x02 \x01(\rR\achannel\x12\x12\n" +
	"\x04ssid\x18\x03 \x01(\tR\x04ssid\x12;\n" +
	"\bsecurity\x18\x04 \x01(\x0e2\x1f.SpaceX.API.Device.WifiSecurityR\bsecurity\x12@\n" +
	"\rwireless_mode\x18\x05 \x01(\x0e2\x1b.SpaceX.API.Device.WifiModeR\fwirelessMode\x122\n" +
	"\x05iface\x18\x06 \x01(\x0e2\x1c.SpaceX.API.Device.IfaceTypeR\x05iface\x12\x1f\n" +
	"\vmac_address\x18\a \x01(\tR\n" +
	"macAddress\x12\x1e\n" +
	"\vest_rx_rate\x18\b \x01(\x02R\testRxRate\"\xe5\x01\n" +
	"\x14WifiGlobalMeshStatus\x12)\n" +
	"\x10hardware_version\x18\x01 \x01(\tR\x0fhardwareVersion\x12)\n" +
	"\x10software_version\x18\x02 \x01(\tR\x0fsoftwareVersion\x12E\n" +
	"\bbss_list\x18\x03 \x03(\v2*.SpaceX.API.Device.InflatedBasicServiceSetR\abssList\x120\n" +
	"\x14hops_from_controller\x18\x04 \x01(\rR\x12hopsFromController\"v\n" +
	"\x0fBackhaulRequest\x12%\n" +
	"\x0eretry_backhaul\x18\x01 \x01(\bR\rretryBackhaul\x12<\n" +
	"\n" +
	"golden_bss\x18\x02 \x01(\v2\x1d.SpaceX.API.Device.WifiConfigR\tgoldenBss\"\x94\x04\n" +
	"\x0eFromController\x12\x1f\n" +
	"\vapi_version\x18\x03 \x01(\x05R\n" +
	"apiVersion\x12@\n" +
	"\vwifi_config\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.WifiConfigH\x00R\n" +
	"wifiConfig\x12]\n" +
	"\x14steer_client_request\x18\x02 \x01(\v2%.SpaceX.API.Device.SteerClientRequestB\x02\x18\x01H\x00R\x12steerClientRequest\x12A\n" +
	"\x06status\x18\x04 \x01(\v2'.SpaceX.API.Device.WifiGlobalMeshStatusH\x00R\x06status\x12O\n" +
	"\x10backhaul_request\x18\x05 \x01(\v2\".SpaceX.API.Device.BackhaulRequestH\x00R\x0fbackhaulRequest\x12R\n" +
	"\x0fstart_speedtest\x18\x06 \x01(\v2'.SpaceX.API.Device.MeshSpeedtestRequestH\x00R\x0estartSpeedtest\x12M\n" +
	"\x10wifi_btm_request\x18\a \x01(\v2!.SpaceX.API.Device.WifiBtmRequestH\x00R\x0ewifiBtmRequestB\t\n" +
	"\amessage\"\xdc\x01\n" +
	"\x12SteerClientRequest\x12*\n" +
	"\x0fclient_mac_addr\x18\x01 \x01(\tB\x02\x18\x01R\rclientMacAddr\x12O\n" +
	"\atargets\x18\x02 \x03(\v21.SpaceX.API.Device.SteerClientRequest.SteerTargetB\x02\x18\x01R\atargets\x1aE\n" +
	"\vSteerTarget\x12\x18\n" +
	"\x05bssid\x18\x01 \x01(\tB\x02\x18\x01R\x05bssid\x12\x1c\n" +
	"\achannel\x18\x02 \x01(\x05B\x02\x18\x01R\achannel:\x02\x18\x01\"\xb9\x02\n" +
	"\x0eWifiBtmRequest\x12;\n" +
	"\x1abss_termination_duration_m\x18\x05 \x01(\rR\x17bssTerminationDurationM\x12\x1d\n" +
	"\n" +
	"peer_bssid\x18\x01 \x01(\tR\tpeerBssid\x12Y\n" +
	"\x0fneighbor_report\x18\x04 \x03(\v20.SpaceX.API.Device.WifiBtmRequest.NeighborReportR\x0eneighborReport\x1a@\n" +
	"\x0eNeighborReport\x12\x14\n" +
	"\x05bssid\x18\x01 \x01(\tR\x05bssid\x12\x18\n" +
	"\achannel\x18\x02 \x01(\rR\achannelJ\x04\b\x02\x10\x03J\x04\b\x03\x10\x04R\frequest_modeR\x14termination_duration\"\xa6\x03\n" +
	"\fWifiSelfTest\x12#\n" +
	"\rtotal_success\x18\x01 \x01(\bR\ftotalSuccess\x12@\n" +
	"\x05fused\x18\x02 \x01(\v2*.SpaceX.API.Device.WifiSelfTest.TestResultR\x05fused\x12E\n" +
	"\beth_phys\x18\x03 \x03(\v2*.SpaceX.API.Device.WifiSelfTest.TestResultR\aethPhys\x12>\n" +
	"\x04pcis\x18\x04 \x03(\v2*.SpaceX.API.Device.WifiSelfTest.TestResultR\x04pcis\x12E\n" +
	"\bbl2_prod\x18\x05 \x01(\v2*.SpaceX.API.Device.WifiSelfTest.TestResultR\abl2Prod\x1aa\n" +
	"\n" +
	"TestResult\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12%\n" +
	"\x0efailure_reason\x18\x03 \x01(\tR\rfailureReason\"V\n" +
	"\x14WifiSetConfigRequest\x12>\n" +
	"\vwifi_config\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.WifiConfigR\n" +
	"wifiConfig\"f\n" +
	"\x15WifiSetConfigResponse\x12M\n" +
	"\x13updated_wifi_config\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.WifiConfigR\x11updatedWifiConfig\"\x16\n" +
	"\x14WifiGetConfigRequest\"W\n" +
	"\x15WifiGetConfigResponse\x12>\n" +
	"\vwifi_config\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.WifiConfigR\n" +
	"wifiConfig\"m\n" +
	"\x1dWifiSetMeshDeviceTrustRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12/\n" +
	"\x04auth\x18\x02 \x01(\x0e2\x1b.SpaceX.API.Device.MeshAuthR\x04auth\" \n" +
	"\x1eWifiSetMeshDeviceTrustResponse\"w\n" +
	"\x18WifiSetMeshConfigRequest\x12>\n" +
	"\vmesh_config\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.MeshConfigR\n" +
	"meshConfig\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\"\x1b\n" +
	"\x19WifiSetMeshConfigResponse\"\x17\n" +
	"\x15WifiGetClientsRequest\"\x9e\x01\n" +
	"\x16WifiGetClientsResponse\x127\n" +
	"\aclients\x18\x01 \x03(\v2\x1d.SpaceX.API.Device.WifiClientR\aclients\x12(\n" +
	"\x10has_client_index\x18\x02 \x01(\bR\x0ehasClientIndex\x12!\n" +
	"\fclient_index\x18\x03 \x01(\x05R\vclientIndex\"_\n" +
	"\x1bWifiGetClientHistoryRequest\x12#\n" +
	"\vmac_address\x18\x01 \x01(\tB\x02\x18\x01R\n" +
	"macAddress\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\rR\bclientId\"\xa7\x03\n" +
	"\x1cWifiGetClientHistoryResponse\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x04R\acurrent\x12,\n" +
	"\x12tx_throughput_mbps\x18\x02 \x03(\x02R\x10txThroughputMbps\x12,\n" +
	"\x12rx_throughput_mbps\x18\x03 \x03(\x02R\x10rxThroughputMbps\x12p\n" +
	"\x12throughput_limited\x18\x04 \x03(\x0e2A.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReasonR\x11throughputLimited\x12 \n" +
	"\frx_rate_mbps\x18\x05 \x03(\x02R\n" +
	"rxRateMbps\x12\x12\n" +
	"\x04rssi\x18\x06 \x01(\fR\x04rssi\"i\n" +
	"\x11WifiLimitedReason\x12\x11\n" +
	"\rLIMIT_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"LIMIT_NONE\x10\x01\x12\x16\n" +
	"\x12LIMIT_UNCLASSIFIED\x10\x02\x12\x19\n" +
	"\x15LIMIT_DROPPED_PACKETS\x10\x03\"!\n" +
	"\x1fWifiSetAviationConformedRequest\"\xc4\a\n" +
	"\x16WifiGetHistoryResponse\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x04R\acurrent\x12%\n" +
	"\x0eping_drop_rate\x18\xe9\a \x03(\x02R\fpingDropRate\x12'\n" +
	"\x0fping_latency_ms\x18\xea\a \x03(\x02R\rpingLatencyMs\x12*\n" +
	"\x11current_index_15s\x18\x02 \x01(\x04R\x0fcurrentIndex15s\x12E\n" +
	" pop_ipv4_ping_drop_rate_last_15s\x18\xeb\a \x03(\x02R\x1apopIpv4PingDropRateLast15s\x12E\n" +
	" pop_ipv6_ping_drop_rate_last_15s\x18\xec\a \x03(\x02R\x1apopIpv6PingDropRateLast15s\x12K\n" +
	"#google_ipv4_ping_drop_rate_last_15s\x18\xed\a \x03(\x02R\x1dgoogleIpv4PingDropRateLast15s\x12K\n" +
	"#google_ipv6_ping_drop_rate_last_15s\x18\xee\a \x03(\x02R\x1dgoogleIpv6PingDropRateLast15s\x12S\n" +
	"'cloudflare_ipv4_ping_drop_rate_last_15s\x18\xef\a \x03(\x02R!cloudflareIpv4PingDropRateLast15s\x12S\n" +
	"'cloudflare_ipv6_ping_drop_rate_last_15s\x18\xf0\a \x03(\x02R!cloudflareIpv6PingDropRateLast15s\x12x\n" +
	"\x16dns_resolver_drop_rate\x18\xf1\a \x03(\v2B.SpaceX.API.Device.WifiGetHistoryResponse.DnsResolverDropRateEntryR\x13dnsResolverDropRate\x1a\x84\x01\n" +
	"\x18DnsResolverDropRateEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12R\n" +
	"\x05value\x18\x02 \x01(\v2<.SpaceX.API.Device.WifiGetHistoryResponse.DnsResolverHistoryR\x05value:\x028\x01\x1aA\n" +
	"\x12DnsResolverHistory\x12+\n" +
	"\x12drop_rate_last_15s\x18\x02 \x03(\x02R\x0fdropRateLast15s\"T\n" +
	"\x1bWifiNewClientConnectedEvent\x125\n" +
	"\x06client\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.WifiClientR\x06client\"\xb6\x1f\n" +
	"\n" +
	"WifiClient\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"given_name\x18\x1f \x01(\tR\tgivenName\x12\x16\n" +
	"\x06domain\x18\x16 \x01(\tR\x06domain\x12\x1f\n" +
	"\vmac_address\x18\x02 \x01(\tR\n" +
	"macAddress\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12(\n" +
	"\x10dhcp_lease_found\x181 \x01(\bR\x0edhcpLeaseFound\x12*\n" +
	"\x11dhcp_lease_active\x18. \x01(\bR\x0fdhcpLeaseActive\x12,\n" +
	"\x12dhcp_lease_renewed\x18/ \x01(\bR\x10dhcpLeaseRenewed\x12F\n" +
	" seconds_until_dhcp_lease_expires\x180 \x01(\x02R\x1csecondsUntilDhcpLeaseExpires\x12%\n" +
	"\x0eipv6_addresses\x18) \x03(\tR\ripv6Addresses\x12'\n" +
	"\x0fsignal_strength\x18\x04 \x01(\x02R\x0esignalStrength\x12#\n" +
	"\rchannel_width\x18\f \x01(\rR\fchannelWidth\x12@\n" +
	"\brx_stats\x18\x05 \x01(\v2%.SpaceX.API.Device.WifiClient.RxStatsR\arxStats\x12$\n" +
	"\x0erx_stats_valid\x18< \x01(\bR\frxStatsValid\x12@\n" +
	"\btx_stats\x18\x06 \x01(\v2%.SpaceX.API.Device.WifiClient.TxStatsR\atxStats\x12$\n" +
	"\x0etx_stats_valid\x18= \x01(\bR\ftxStatsValid\x12*\n" +
	"\x11associated_time_s\x18\a \x01(\rR\x0fassociatedTimeS\x12#\n" +
	"\x0eno_data_idle_s\x18- \x01(\rR\vnoDataIdleS\x12\x19\n" +
	"\bmode_str\x18\b \x01(\tR\amodeStr\x12=\n" +
	"\x05iface\x18\t \x01(\x0e2'.SpaceX.API.Device.WifiClient.InterfaceR\x05iface\x12\x1d\n" +
	"\n" +
	"iface_name\x18\x1a \x01(\tR\tifaceName\x12\x10\n" +
	"\x03snr\x18\n" +
	" \x01(\x02R\x03snr\x12\x16\n" +
	"\x06psmode\x18\v \x01(\x05R\x06psmode\x120\n" +
	"\x14upstream_mac_address\x18\r \x01(\tR\x12upstreamMacAddress\x126\n" +
	"\x04role\x18\x0e \x01(\x0e2\".SpaceX.API.Device.WifiClient.RoleR\x04role\x12\x1b\n" +
	"\tdevice_id\x18\x0f \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"swq_checks\x18\x10 \x01(\rR\tswqChecks\x12/\n" +
	"\x14swq_checks_non_empty\x18\x11 \x01(\rR\x11swqChecksNonEmpty\x12&\n" +
	"\x0fmib_steer_state\x18\x12 \x01(\rR\rmibSteerState\x12(\n" +
	"\x10mib_steer_method\x18\x13 \x01(\rR\x0emibSteerMethod\x12!\n" +
	"\fbtm_requests\x18\x14 \x01(\rR\vbtmRequests\x120\n" +
	"\x14btm_requests_success\x18\x15 \x01(\rR\x12btmRequestsSuccess\x12\x1f\n" +
	"\vsteer_state\x18\x1e \x01(\rR\n" +
	"steerState\x128\n" +
	"\x19steer_req_success_last_1h\x18\x1b \x01(\rR\x15steerReqSuccessLast1h\x122\n" +
	"\x16steer_req_fail_last_1h\x18\x1c \x01(\rR\x12steerReqFailLast1h\x12F\n" +
	"!steer_req_fail_and_dissoc_last_1h\x18\x1d \x01(\rR\x1bsteerReqFailAndDissocLast1h\x12%\n" +
	"\x0edot11v_support\x18\x17 \x01(\bR\rdot11vSupport\x120\n" +
	"\x14hops_from_controller\x18  \x01(\rR\x12hopsFromController\x12E\n" +
	" est_tx_rate_mbps_from_controller\x18! \x01(\x02R\x1bestTxRateMbpsFromController\x12E\n" +
	" est_rx_rate_mbps_from_controller\x18\" \x01(\x02R\x1bestRxRateMbpsFromController\x12)\n" +
	"\x10hardware_version\x18% \x01(\tR\x0fhardwareVersion\x12)\n" +
	"\x10software_version\x18& \x01(\tR\x0fsoftwareVersion\x12\x1f\n" +
	"\vapi_version\x18' \x01(\rR\n" +
	"apiVersion\x12L\n" +
	"\fping_metrics\x18( \x01(\v2).SpaceX.API.Device.WifiClient.PingMetricsR\vpingMetrics\x12\x18\n" +
	"\ablocked\x18* \x01(\bR\ablocked\x12\x1b\n" +
	"\tclient_id\x18+ \x01(\rR\bclientId\x12*\n" +
	"\x11captive_client_id\x185 \x01(\tR\x0fcaptiveClientId\x12L\n" +
	"\ffqcodel_info\x18, \x01(\v2).SpaceX.API.Device.WifiClient.FqcodelInfoR\vfqcodelInfo\x12<\n" +
	"\x06alerts\x184 \x01(\v2$.SpaceX.API.Device.WifiClient.AlertsR\x06alerts\x1a\xf9\x04\n" +
	"\aRxStats\x12\x14\n" +
	"\x05bytes\x18\x01 \x01(\x04R\x05bytes\x12!\n" +
	"\fcount_errors\x18\x02 \x01(\x04R\vcountErrors\x12\x19\n" +
	"\bphy_mode\x18\r \x01(\rR\aphyMode\x12\x10\n" +
	"\x03nss\x18\x03 \x01(\x05R\x03nss\x12\x1b\n" +
	"\trate_mbps\x18\b \x01(\rR\brateMbps\x12+\n" +
	"\x12rate_mbps_last_30s\x18\x0e \x01(\x02R\x0frateMbpsLast30s\x12+\n" +
	"\x12rate_mbps_last_15s\x18\x0f \x01(\x02R\x0frateMbpsLast15s\x120\n" +
	"\x15rate_mbps_last_1m_avg\x18\x10 \x01(\x02R\x11rateMbpsLast1mAvg\x12<\n" +
	"\x1bthroughput_mbps_last_1m_avg\x18\x11 \x01(\x02R\x17throughputMbpsLast1mAvg\x12\x10\n" +
	"\x03mcs\x18\x05 \x01(\rR\x03mcs\x12\x1c\n" +
	"\tbandwidth\x18\x06 \x01(\rR\tbandwidth\x12\x19\n" +
	"\bguard_ns\x18\a \x01(\rR\aguardNs\x127\n" +
	"\x18airtime_fraction_last_1s\x18\t \x01(\x02R\x15airtimeFractionLast1s\x12'\n" +
	"\x0fsampled_packets\x18\n" +
	" \x01(\rR\x0esampledPackets\x126\n" +
	"\x17sampled_packets_retried\x18\v \x01(\rR\x15sampledPacketsRetried\x126\n" +
	"\x17sampled_packets_dropped\x18\f \x01(\rR\x15sampledPacketsDroppedJ\x04\b\x04\x10\x05\x1a\xf2\x02\n" +
	"\aTxStats\x12\x14\n" +
	"\x05bytes\x18\x01 \x01(\x04R\x05bytes\x12#\n" +
	"\rsuccess_bytes\x18\x02 \x01(\x04R\fsuccessBytes\x12\x19\n" +
	"\bphy_mode\x18\n" +
	" \x01(\rR\aphyMode\x12\x10\n" +
	"\x03nss\x18\x03 \x01(\x05R\x03nss\x12\x1b\n" +
	"\trate_mbps\x18\b \x01(\rR\brateMbps\x12+\n" +
	"\x12rate_mbps_last_30s\x18\v \x01(\x02R\x0frateMbpsLast30s\x12+\n" +
	"\x12rate_mbps_last_15s\x18\f \x01(\x02R\x0frateMbpsLast15s\x12\x10\n" +
	"\x03mcs\x18\x05 \x01(\rR\x03mcs\x12\x1c\n" +
	"\tbandwidth\x18\x06 \x01(\rR\tbandwidth\x12\x19\n" +
	"\bguard_ns\x18\a \x01(\rR\aguardNs\x127\n" +
	"\x18airtime_fraction_last_1s\x18\t \x01(\x02R\x15airtimeFractionLast1sJ\x04\b\x04\x10\x05\x1a\xa8\x01\n" +
	"\vPingMetrics\x12+\n" +
	"\x12in_unhappy_hour_2s\x18\x01 \x01(\bR\x0finUnhappyHour2s\x12+\n" +
	"\x12in_unhappy_hour_5s\x18\x02 \x01(\bR\x0finUnhappyHour5s\x12 \n" +
	"\fdrop_rate_5m\x18\x03 \x01(\x02R\n" +
	"dropRate5m\x12\x1d\n" +
	"\n" +
	"latency_5m\x18\x04 \x01(\x02R\tlatency5m\x1a\x94\x03\n" +
	"\vFqcodelInfo\x12 \n" +
	"\fenqs_hi_prio\x18\x01 \x01(\x04R\n" +
	"enqsHiPrio\x12!\n" +
	"\fenqs_fqcodel\x18\x02 \x01(\x04R\venqsFqcodel\x12\x19\n" +
	"\benqs_new\x18\x03 \x01(\x04R\aenqsNew\x12\x19\n" +
	"\benqs_old\x18\x04 \x01(\x04R\aenqsOld\x12!\n" +
	"\fenqs_dropped\x18\x05 \x01(\x04R\venqsDropped\x12\x19\n" +
	"\bdeqs_new\x18\x06 \x01(\x04R\adeqsNew\x12\x19\n" +
	"\bdeqs_old\x18\a \x01(\x04R\adeqsOld\x12\"\n" +
	"\rdeqs_flow_new\x18\b \x01(\x04R\vdeqsFlowNew\x121\n" +
	"\x15deqs_flow_old_deficit\x18\t \x01(\x04R\x12deqsFlowOldDeficit\x127\n" +
	"\x18deqs_flow_old_starvation\x18\n" +
	" \x01(\x04R\x15deqsFlowOldStarvation\x12!\n" +
	"\fdeqs_dropped\x18\v \x01(\x04R\vdeqsDropped\x1a7\n" +
	"\x06Alerts\x12-\n" +
	"\x12throughput_limited\x18\x01 \x01(\bR\x11throughputLimited\"M\n" +
	"\tInterface\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\a\n" +
	"\x03ETH\x10\x01\x12\v\n" +
	"\aRF_2GHZ\x10\x02\x12\v\n" +
	"\aRF_5GHZ\x10\x03\x12\x10\n" +
	"\fRF_5GHZ_HIGH\x10\x04\"B\n" +
	"\x04Role\x12\x10\n" +
	"\fROLE_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06CLIENT\x10\x01\x12\f\n" +
	"\bREPEATER\x10\x02\x12\x0e\n" +
	"\n" +
	"CONTROLLER\x10\x03J\x04\b2\x103J\x04\b3\x104R\n" +
	"authorizedR\x11sandbox_client_id\"\x8c\x01\n" +
	"\x10WifiSetupRequest\x12\x12\n" +
	"\x04skip\x18\x01 \x01(\bR\x04skip\x12!\n" +
	"\fnetwork_name\x18\x02 \x01(\tR\vnetworkName\x12)\n" +
	"\x10network_password\x18\x03 \x01(\tR\x0fnetworkPassword\x12\x16\n" +
	"\x06bypass\x18\x04 \x01(\bR\x06bypass\"\x13\n" +
	"\x11WifiSetupResponse\"\x95\x02\n" +
	"\x0eWifiBandStatus\x125\n" +
	"\x17chan_busy_time_fraction\x18\x01 \x01(\x02R\x14chanBusyTimeFraction\x12/\n" +
	"\x14tx_air_time_fraction\x18\x02 \x01(\x02R\x11txAirTimeFraction\x12/\n" +
	"\x14rx_air_time_fraction\x18\x03 \x01(\x02R\x11rxAirTimeFraction\x123\n" +
	"\x16obss_air_time_fraction\x18\x04 \x01(\x02R\x13obssAirTimeFraction\x125\n" +
	"\x17edcca_air_time_fraction\x18\x05 \x01(\x02R\x14edccaAirTimeFraction\"\xe0\t\n" +
	"\n" +
	"WifiAlerts\x12)\n" +
	"\x10thermal_throttle\x18\x01 \x01(\bR\x0fthermalThrottle\x12'\n" +
	"\x0finstall_pending\x18\x02 \x01(\bR\x0einstallPending\x12#\n" +
	"\rfreshly_fused\x18\x03 \x01(\bR\ffreshlyFused\x12.\n" +
	"\x14lan_eth_slow_link_10\x18\x04 \x01(\bR\x10lanEthSlowLink10\x120\n" +
	"\x15lan_eth_slow_link_100\x18\x05 \x01(\bR\x11lanEthSlowLink100\x128\n" +
	"\x19high_cable_ping_drop_rate\x18\x15 \x01(\bR\x15highCablePingDropRate\x125\n" +
	"\x17wan_eth_poor_connection\x18\n" +
	" \x01(\bR\x14wanEthPoorConnection\x12?\n" +
	"\x1cmesh_topology_changing_often\x18\v \x01(\bR\x19meshTopologyChangingOften\x128\n" +
	"\x18mesh_unreliable_backhaul\x18\f \x01(\bR\x16meshUnreliableBackhaul\x124\n" +
	"\x16radius_missing_process\x18\r \x01(\bR\x14radiusMissingProcess\x12(\n" +
	"\x10eth_switch_error\x18\x0e \x01(\bR\x0eethSwitchError\x125\n" +
	"\x17poe_on_dish_unreachable\x18\x0f \x01(\bR\x14poeOnDishUnreachable\x12$\n" +
	"\x0epoe_fuse_blown\x18\x10 \x01(\bR\fpoeFuseBlown\x124\n" +
	"\x16poe_router_overcurrent\x18\x11 \x01(\bR\x14poeRouterOvercurrent\x125\n" +
	"\x17poe_off_current_nominal\x18\x12 \x01(\bR\x14poeOffCurrentNominal\x12.\n" +
	"\x13poe_vin_overvoltage\x18\x13 \x01(\bR\x11poeVinOvervoltage\x120\n" +
	"\x14poe_vin_undervoltage\x18\x14 \x01(\bR\x12poeVinUndervoltage\x12)\n" +
	"\x10sandbox_disabled\x18\x16 \x01(\bR\x0fsandboxDisabled\x126\n" +
	"\x17only_overflight_blocked\x18\x17 \x01(\bR\x15onlyOverflightBlocked\x12:\n" +
	"\x19offline_networks_disabled\x18\x18 \x01(\bR\x17offlineNetworksDisabledJ\x04\b\x06\x10\aJ\x04\b\a\x10\bJ\x04\b\b\x10\tJ\x04\b\t\x10\n" +
	"J\x04\b\x19\x10\x1aR+inconsistent_2ghz_antennae_performance_15dbR+inconsistent_5ghz_antennae_performance_15dbR#poor_2ghz_antennae_performance_80dbR#poor_5ghz_antennae_performance_80dbR\x1ewired_mesh_not_using_wan_iface\"\xb7\x10\n" +
	"\x15WifiGetStatusResponse\x12>\n" +
	"\vdevice_info\x18\x03 \x01(\v2\x1d.SpaceX.API.Device.DeviceInfoR\n" +
	"deviceInfo\x12A\n" +
	"\fdevice_state\x18\x04 \x01(\v2\x1e.SpaceX.API.Device.DeviceStateR\vdeviceState\x128\n" +
	"\x16captive_portal_enabled\x18\x01 \x01(\bB\x02\x18\x01R\x14captivePortalEnabled\x12)\n" +
	"\x10ipv4_wan_address\x18\xeb\a \x01(\tR\x0eipv4WanAddress\x12-\n" +
	"\x12ipv6_wan_addresses\x18\xf9\a \x03(\tR\x10ipv6WanAddresses\x121\n" +
	"\x14hops_from_controller\x18\x8a\b \x01(\rR\x12hopsFromController\x12%\n" +
	"\x0eping_drop_rate\x18\xec\a \x01(\x02R\fpingDropRate\x12*\n" +
	"\x11ping_drop_rate_5m\x18\xfd\a \x01(\x02R\x0epingDropRate5m\x12'\n" +
	"\x0fping_latency_ms\x18\xed\a \x01(\x02R\rpingLatencyMs\x12.\n" +
	"\x13dish_ping_drop_rate\x18\xf4\a \x01(\x02R\x10dishPingDropRate\x123\n" +
	"\x16dish_ping_drop_rate_5m\x18\xfa\a \x01(\x02R\x12dishPingDropRate5m\x120\n" +
	"\x14dish_ping_latency_ms\x18\xf5\a \x01(\x02R\x11dishPingLatencyMs\x12,\n" +
	"\x12pop_ping_drop_rate\x18\xf6\a \x01(\x02R\x0fpopPingDropRate\x121\n" +
	"\x15pop_ping_drop_rate_5m\x18\xfc\a \x01(\x02R\x11popPingDropRate5m\x12.\n" +
	"\x13pop_ping_latency_ms\x18\xf7\a \x01(\x02R\x10popPingLatencyMs\x125\n" +
	"\x17pop_ipv6_ping_drop_rate\x18\x83\b \x01(\x02R\x13popIpv6PingDropRate\x12:\n" +
	"\x1apop_ipv6_ping_drop_rate_5m\x18\x84\b \x01(\x02R\x15popIpv6PingDropRate5m\x127\n" +
	"\x18pop_ipv6_ping_latency_ms\x18\x85\b \x01(\x02R\x14popIpv6PingLatencyMs\x12L\n" +
	"\x0erf_2ghz_status\x18\xf0\a \x01(\v2!.SpaceX.API.Device.WifiBandStatusB\x02\x18\x01R\frf2ghzStatus\x12L\n" +
	"\x0erf_5ghz_status\x18\xf1\a \x01(\v2!.SpaceX.API.Device.WifiBandStatusB\x02\x18\x01R\frf5ghzStatus\x126\n" +
	"\x06alerts\x18\xf2\a \x01(\v2\x1d.SpaceX.API.Device.WifiAlertsR\x06alerts\x12 \n" +
	"\vis_aviation\x18\xf3\a \x01(\bR\n" +
	"isAviation\x126\n" +
	"\x06config\x18\xd0\x0f \x01(\v2\x1d.SpaceX.API.Device.WifiConfigR\x06config\x128\n" +
	"\aclients\x18\xb8\x17 \x03(\v2\x1d.SpaceX.API.Device.WifiClientR\aclients\x12)\n" +
	"\x10has_client_index\x18\xb9\x17 \x01(\bR\x0ehasClientIndex\x12\"\n" +
	"\fclient_index\x18\xba\x17 \x01(\x05R\vclientIndex\x123\n" +
	"\x15is_aviation_conformed\x18\xf8\a \x01(\bR\x13isAviationConformed\x12E\n" +
	"\fradius_stats\x18\xbb\x17 \x01(\v2!.SpaceX.API.Device.RadiusStatsMapR\vradiusStats\x12A\n" +
	"\fdhcp_servers\x18\xfb\a \x03(\v2\x1d.SpaceX.API.Device.DhcpServerR\vdhcpServers\x129\n" +
	"\tpoe_stats\x18\xfe\a \x01(\v2\x1b.SpaceX.API.Device.PoeStatsR\bpoeStats\x12\x18\n" +
	"\adish_id\x18\xff\a \x01(\tR\x06dishId\x12e\n" +
	"\x15dish_disablement_code\x18\x87\b \x01(\x0e20.SpaceX.API.Satellites.Network.UtDisablementCodeR\x13dishDisablementCode\x12\x16\n" +
	"\x06utc_ns\x18\x80\b \x01(\x03R\x05utcNs\x12_\n" +
	"\x15software_update_stats\x18\x81\b \x01(\v2*.SpaceX.API.Device.WifiSoftwareUpdateStatsR\x13softwareUpdateStats\x12U\n" +
	"\x11setup_requirement\x18\x82\b \x01(\v2'.SpaceX.API.Device.WifiSetupRequirementR\x10setupRequirement\x12J\n" +
	"\"secs_since_last_public_ipv4_change\x18\x86\b \x01(\x02R\x1dsecsSinceLastPublicIpv4ChangeJ\x04\b\x02\x10\x03J\x04\b\x05\x10\x06J\x04\b\x06\x10\aJ\x04\b\a\x10\bJ\x06\b\xe9\a\x10\xea\aJ\x06\b\xea\a\x10\xeb\aJ\x06\b\xee\a\x10\xef\aJ\x06\b\xef\a\x10\xf0\a\"V\n" +
	"\x17WifiAuthenticateRequest\x12;\n" +
	"\tchallenge\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.SignedDataR\tchallenge\"\x8e\x01\n" +
	"\x18WifiAuthenticateResponse\x128\n" +
	"\x04wifi\x18\x01 \x01(\v2$.SpaceX.API.Device.ChallengeResponseR\x04wifi\x128\n" +
	"\x04dish\x18\x02 \x01(\v2$.SpaceX.API.Device.ChallengeResponseR\x04dish\"~\n" +
	"\x17WifiAccountBondingEvent\x12\x17\n" +
	"\adish_id\x18\x01 \x01(\tR\x06dishId\x12\x1f\n" +
	"\vis_repeater\x18\x02 \x01(\bR\n" +
	"isRepeater\x12)\n" +
	"\x10hardware_version\x18\x03 \x01(\tR\x0fhardwareVersion\"+\n" +
	"\x10WifiNewPeerEvent\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\"\xb5\a\n" +
	"\vPingMetrics\x12&\n" +
	"\x0flatency_mean_ms\x18\x01 \x01(\x02R\rlatencyMeanMs\x12*\n" +
	"\x11latency_stddev_ms\x18\x02 \x01(\x02R\x0flatencyStddevMs\x12+\n" +
	"\x12latency_mean_ms_5m\x18\x03 \x01(\x02R\x0flatencyMeanMs5m\x12+\n" +
	"\x12latency_mean_ms_1h\x18\x04 \x01(\x02R\x0flatencyMeanMs1h\x12/\n" +
	"\x12latency_mean_ms_1d\x18\x05 \x01(\x02B\x02\x18\x01R\x0flatencyMeanMs1d\x12\x1b\n" +
	"\tdrop_rate\x18\x06 \x01(\x02R\bdropRate\x12 \n" +
	"\fdrop_rate_5m\x18\a \x01(\x02R\n" +
	"dropRate5m\x12 \n" +
	"\fdrop_rate_1h\x18\b \x01(\x02R\n" +
	"dropRate1h\x12 \n" +
	"\fdrop_rate_1d\x18\t \x01(\x02R\n" +
	"dropRate1d\x12;\n" +
	"\x1aseconds_since_last_success\x18\n" +
	" \x01(\x02R\x17secondsSinceLastSuccess\x12>\n" +
	"\x1cseconds_since_last_1s_outage\x18\v \x01(\x02R\x18secondsSinceLast1sOutage\x12>\n" +
	"\x1cseconds_since_last_2s_outage\x18\x0f \x01(\x02R\x18secondsSinceLast2sOutage\x12>\n" +
	"\x1cseconds_since_last_5s_outage\x18\f \x01(\x02R\x18secondsSinceLast5sOutage\x12@\n" +
	"\x1dseconds_since_last_15s_outage\x18\x12 \x01(\x02R\x19secondsSinceLast15sOutage\x12@\n" +
	"\x1dseconds_since_last_60s_outage\x18\x13 \x01(\x02R\x19secondsSinceLast60sOutage\x12B\n" +
	"\x1eseconds_since_last_300s_outage\x18\x14 \x01(\x02R\x1asecondsSinceLast300sOutage\x12)\n" +
	"\x11happy_hours_1s_1d\x18\r \x01(\x02R\x0ehappyHours1s1d\x12)\n" +
	"\x11happy_hours_2s_1d\x18\x10 \x01(\x02R\x0ehappyHours2s1d\x12)\n" +
	"\x11happy_hours_5s_1d\x18\x0e \x01(\x02R\x0ehappyHours5s1d\"\x1b\n" +
	"\x19WifiGetPingMetricsRequest\"X\n" +
	"\x1aWifiGetPingMetricsResponse\x12:\n" +
	"\binternet\x18\x01 \x01(\v2\x1e.SpaceX.API.Device.PingMetricsR\binternet\"\xde\x01\n" +
	"\vWifiNetwork\x127\n" +
	"\x04band\x18\x01 \x01(\x0e2#.SpaceX.API.Device.WifiNetwork.BandR\x04band\x12\x12\n" +
	"\x04ssid\x18\x02 \x01(\tR\x04ssid\x12\x18\n" +
	"\achannel\x18\x03 \x01(\rR\achannel\x12.\n" +
	"\x13encryption_type_str\x18\x04 \x01(\tR\x11encryptionTypeStr\"8\n" +
	"\x04Band\x12\x10\n" +
	"\fWIFI_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vWIFI_2_4GHZ\x10\x01\x12\r\n" +
	"\tWIFI_5GHZ\x10\x02\"\x83\x05\n" +
	"\x13WifiPersistentStats\x12^\n" +
	"\x14factory_reset_button\x18\x01 \x01(\v2,.SpaceX.API.Device.WifiPersistentStats.EventR\x12factoryResetButton\x12g\n" +
	"\x19factory_reset_plug_unplug\x18\x02 \x01(\v2,.SpaceX.API.Device.WifiPersistentStats.EventR\x16factoryResetPlugUnplug\x12`\n" +
	"\x15factory_reset_command\x18\x03 \x01(\v2,.SpaceX.API.Device.WifiPersistentStats.EventR\x13factoryResetCommand\x12}\n" +
	"%factory_reset_failed_load_wifi_config\x18\x04 \x01(\v2,.SpaceX.API.Device.WifiPersistentStats.EventR factoryResetFailedLoadWifiConfig\x12k\n" +
	"\x1breboot_from_software_update\x18\x05 \x01(\v2,.SpaceX.API.Device.WifiPersistentStats.EventR\x18rebootFromSoftwareUpdate\x1aU\n" +
	"\x05Event\x12\x14\n" +
	"\x05count\x18\x01 \x01(\rR\x05count\x126\n" +
	"\x17last_occurred_timestamp\x18\x02 \x01(\x03R\x15lastOccurredTimestamp\"^\n" +
	"\x1eWifiGetPersistentStatsResponse\x12<\n" +
	"\x05stats\x18\x01 \x01(\v2&.SpaceX.API.Device.WifiPersistentStatsR\x05stats\"\x83\x05\n" +
	"\n" +
	"RadioStats\x126\n" +
	"\x04band\x18\x01 \x01(\x0e2\".SpaceX.API.Device.WifiConfig.BandR\x04band\x12F\n" +
	"\brx_stats\x18\x02 \x01(\v2+.SpaceX.API.Device.NetworkInterface.RxStatsR\arxStats\x12F\n" +
	"\btx_stats\x18\x03 \x01(\v2+.SpaceX.API.Device.NetworkInterface.TxStatsR\atxStats\x12R\n" +
	"\x0ethermal_status\x18\x04 \x01(\v2+.SpaceX.API.Device.RadioStats.ThermalStatusR\rthermalStatus\x12R\n" +
	"\x0eantenna_status\x18\x05 \x01(\v2+.SpaceX.API.Device.RadioStats.AntennaStatusR\rantennaStatus\x1a\x9b\x01\n" +
	"\rThermalStatus\x12\x14\n" +
	"\x05level\x18\x01 \x01(\rR\x05level\x12\x16\n" +
	"\x04temp\x18\x02 \x01(\rB\x02\x18\x01R\x04temp\x12\x14\n" +
	"\x05temp2\x18\x03 \x01(\x01R\x05temp2\x12'\n" +
	"\x0fpower_reduction\x18\x04 \x01(\rR\x0epowerReduction\x12\x1d\n" +
	"\n" +
	"duty_cycle\x18\x05 \x01(\rR\tdutyCycle\x1ag\n" +
	"\rAntennaStatus\x12\x14\n" +
	"\x05rssi1\x18\x01 \x01(\x02R\x05rssi1\x12\x14\n" +
	"\x05rssi2\x18\x02 \x01(\x02R\x05rssi2\x12\x14\n" +
	"\x05rssi3\x18\x03 \x01(\x02R\x05rssi3\x12\x14\n" +
	"\x05rssi4\x18\x04 \x01(\x02R\x05rssi4\"\xf1\xaf\x01\n" +
	"\"starlink_routers_hourly_metrics_v2\x12,\n" +
	"\x02id\x18\x01 \x01(\v2\x1c.google.protobuf.StringValueR\x02id\x12C\n" +
	"\x0etimestamp_date\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\rtimestampDate\x12C\n" +
	"\x0etimestamp_hour\x18\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\rtimestampHour\x12Q\n" +
	"\ttimestamp\x18\x90N \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\ttimestamp\x12:\n" +
	"\n" +
	"sys_hw_gen\x18\x04 \x01(\v2\x1c.google.protobuf.UInt32ValueR\bsysHwGen\x123\n" +
	"\x06sys_sw\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\x05sysSw\x12=\n" +
	"\vsys_country\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"sysCountry\x128\n" +
	"\n" +
	"sys_is_dev\x18\a \x01(\v2\x1a.google.protobuf.BoolValueR\bsysIsDev\x12@\n" +
	"\rsys_alloc_fds\x18\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\vsysAllocFds\x12?\n" +
	"\rsys_cpu_usage\x18\t \x01(\v2\x1b.google.protobuf.FloatValueR\vsysCpuUsage\x12B\n" +
	"\x0fsys_mem_free_kb\x18\n" +
	" \x01(\v2\x1b.google.protobuf.FloatValueR\fsysMemFreeKb\x12@\n" +
	"\rsys_bootcount\x18\v \x01(\v2\x1b.google.protobuf.Int32ValueR\fsysBootcount\x12L\n" +
	"\x14sys_partitions_equal\x18\f \x01(\v2\x1a.google.protobuf.BoolValueR\x12sysPartitionsEqual\x12J\n" +
	"\x12sys_uptime_seconds\x18\r \x01(\v2\x1c.google.protobuf.UInt32ValueR\x10sysUptimeSeconds\x12V\n" +
	"\x19sys_anti_rollback_version\x18\x0e \x01(\v2\x1b.google.protobuf.Int32ValueR\x16sysAntiRollbackVersion\x12:\n" +
	"\vsys_is_witl\x18\x0f \x01(\v2\x1a.google.protobuf.BoolValueR\tsysIsWitl\x12U\n" +
	"\x19sys_is_aviation_conformed\x18\x10 \x01(\v2\x1a.google.protobuf.BoolValueR\x16sysIsAviationConformed\x12A\n" +
	"\x0esys_ubi_max_ec\x18\x11 \x01(\v2\x1c.google.protobuf.UInt32ValueR\vsysUbiMaxEc\x12C\n" +
	"\x0fsys_ubi_bad_peb\x18\x12 \x01(\v2\x1c.google.protobuf.UInt32ValueR\fsysUbiBadPeb\x12@\n" +
	"\rsys_board_rev\x18\x13 \x01(\v2\x1c.google.protobuf.UInt32ValueR\vsysBoardRev\x12L\n" +
	"\x13radios_2ghz_channel\x18d \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11radios2ghzChannel\x12V\n" +
	"\x19radios_2ghz_antenna1_rssi\x18e \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna1Rssi\x12V\n" +
	"\x19radios_2ghz_antenna2_rssi\x18f \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna2Rssi\x12V\n" +
	"\x19radios_2ghz_antenna3_rssi\x18g \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna3Rssi\x12W\n" +
	"\x19radios_2ghz_antenna4_rssi\x18\xc5\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna4Rssi\x12W\n" +
	"\x19radios_2ghz_antenna1_tssi\x18\x9d\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna1Tssi\x12W\n" +
	"\x19radios_2ghz_antenna2_tssi\x18\x9e\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna2Tssi\x12W\n" +
	"\x19radios_2ghz_antenna3_tssi\x18\x9f\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna3Tssi\x12W\n" +
	"\x19radios_2ghz_antenna4_tssi\x18\xa0\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna4Tssi\x12S\n" +
	"\x17radios_2ghz_iface_count\x18h \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14radios2ghzIfaceCount\x12_\n" +
	"\x1eradios_2ghz_chan_busy_fraction\x18i \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios2ghzChanBusyFraction\x12X\n" +
	"\x1aradios_2ghz_edcca_fraction\x18j \x01(\v2\x1b.google.protobuf.FloatValueR\x17radios2ghzEdccaFraction\x12k\n" +
	"$radios_2ghz_overlapping_bss_fraction\x18k \x01(\v2\x1b.google.protobuf.FloatValueR radios2ghzOverlappingBssFraction\x12L\n" +
	"\x14radios_2ghz_rx_bytes\x18l \x01(\v2\x1b.google.protobuf.Int64ValueR\x11radios2ghzRxBytes\x12P\n" +
	"\x16radios_2ghz_rx_packets\x18m \x01(\v2\x1b.google.protobuf.Int64ValueR\x13radios2ghzRxPackets\x12N\n" +
	"\x15radios_2ghz_rx_errors\x18n \x01(\v2\x1b.google.protobuf.Int64ValueR\x12radios2ghzRxErrors\x12Y\n" +
	"\x1bradios_2ghz_rx_frame_errors\x18o \x01(\v2\x1b.google.protobuf.Int64ValueR\x17radios2ghzRxFrameErrors\x12b\n" +
	" radios_2ghz_rx_packet_error_rate\x18p \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios2ghzRxPacketErrorRate\x12a\n" +
	"\x1fradios_2ghz_rx_airtime_fraction\x18q \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios2ghzRxAirtimeFraction\x12L\n" +
	"\x14radios_2ghz_tx_bytes\x18r \x01(\v2\x1b.google.protobuf.Int64ValueR\x11radios2ghzTxBytes\x12P\n" +
	"\x16radios_2ghz_tx_packets\x18s \x01(\v2\x1b.google.protobuf.Int64ValueR\x13radios2ghzTxPackets\x12N\n" +
	"\x15radios_2ghz_tx_errors\x18t \x01(\v2\x1b.google.protobuf.Int64ValueR\x12radios2ghzTxErrors\x12b\n" +
	" radios_2ghz_tx_packet_error_rate\x18u \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios2ghzTxPacketErrorRate\x12a\n" +
	"\x1fradios_2ghz_tx_airtime_fraction\x18v \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios2ghzTxAirtimeFraction\x12L\n" +
	"\x13radios_5ghz_channel\x18w \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11radios5ghzChannel\x12V\n" +
	"\x19radios_5ghz_antenna1_rssi\x18x \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna1Rssi\x12V\n" +
	"\x19radios_5ghz_antenna2_rssi\x18y \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna2Rssi\x12V\n" +
	"\x19radios_5ghz_antenna3_rssi\x18z \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna3Rssi\x12W\n" +
	"\x19radios_5ghz_antenna4_rssi\x18\xc6\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna4Rssi\x12W\n" +
	"\x19radios_5ghz_antenna1_tssi\x18\xa1\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna1Tssi\x12W\n" +
	"\x19radios_5ghz_antenna2_tssi\x18\xa2\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna2Tssi\x12W\n" +
	"\x19radios_5ghz_antenna3_tssi\x18\xa3\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna3Tssi\x12W\n" +
	"\x19radios_5ghz_antenna4_tssi\x18\xa4\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna4Tssi\x12S\n" +
	"\x17radios_5ghz_iface_count\x18{ \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14radios5ghzIfaceCount\x12_\n" +
	"\x1eradios_5ghz_chan_busy_fraction\x18| \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzChanBusyFraction\x12X\n" +
	"\x1aradios_5ghz_edcca_fraction\x18} \x01(\v2\x1b.google.protobuf.FloatValueR\x17radios5ghzEdccaFraction\x12k\n" +
	"$radios_5ghz_overlapping_bss_fraction\x18~ \x01(\v2\x1b.google.protobuf.FloatValueR radios5ghzOverlappingBssFraction\x12L\n" +
	"\x14radios_5ghz_rx_bytes\x18\x7f \x01(\v2\x1b.google.protobuf.Int64ValueR\x11radios5ghzRxBytes\x12Q\n" +
	"\x16radios_5ghz_rx_packets\x18\x80\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x13radios5ghzRxPackets\x12O\n" +
	"\x15radios_5ghz_rx_errors\x18\x81\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x12radios5ghzRxErrors\x12Z\n" +
	"\x1bradios_5ghz_rx_frame_errors\x18\x82\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x17radios5ghzRxFrameErrors\x12c\n" +
	" radios_5ghz_rx_packet_error_rate\x18\x83\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzRxPacketErrorRate\x12b\n" +
	"\x1fradios_5ghz_rx_airtime_fraction\x18\x84\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzRxAirtimeFraction\x12M\n" +
	"\x14radios_5ghz_tx_bytes\x18\x85\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x11radios5ghzTxBytes\x12Q\n" +
	"\x16radios_5ghz_tx_packets\x18\x86\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x13radios5ghzTxPackets\x12O\n" +
	"\x15radios_5ghz_tx_errors\x18\x87\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x12radios5ghzTxErrors\x12c\n" +
	" radios_5ghz_tx_packet_error_rate\x18\x88\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzTxPacketErrorRate\x12b\n" +
	"\x1fradios_5ghz_tx_airtime_fraction\x18\x89\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzTxAirtimeFraction\x12V\n" +
	"\x18radios_5ghz_high_channel\x18\x8a\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15radios5ghzHighChannel\x12`\n" +
	"\x1eradios_5ghz_high_antenna1_rssi\x18\x8b\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzHighAntenna1Rssi\x12`\n" +
	"\x1eradios_5ghz_high_antenna2_rssi\x18\x8c\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzHighAntenna2Rssi\x12`\n" +
	"\x1eradios_5ghz_high_antenna3_rssi\x18\x8d\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzHighAntenna3Rssi\x12`\n" +
	"\x1eradios_5ghz_high_antenna4_rssi\x18\xc7\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzHighAntenna4Rssi\x12`\n" +
	"\x1eradios_5ghz_high_antenna1_tssi\x18\xa5\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzHighAntenna1Tssi\x12`\n" +
	"\x1eradios_5ghz_high_antenna2_tssi\x18\xa6\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzHighAntenna2Tssi\x12`\n" +
	"\x1eradios_5ghz_high_antenna3_tssi\x18\xa7\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzHighAntenna3Tssi\x12`\n" +
	"\x1eradios_5ghz_high_antenna4_tssi\x18\xa8\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzHighAntenna4Tssi\x12]\n" +
	"\x1cradios_5ghz_high_iface_count\x18\x8e\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x18radios5ghzHighIfaceCount\x12i\n" +
	"#radios_5ghz_high_chan_busy_fraction\x18\x8f\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1eradios5ghzHighChanBusyFraction\x12b\n" +
	"\x1fradios_5ghz_high_edcca_fraction\x18\x90\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzHighEdccaFraction\x12u\n" +
	")radios_5ghz_high_overlapping_bss_fraction\x18\x91\x01 \x01(\v2\x1b.google.protobuf.FloatValueR$radios5ghzHighOverlappingBssFraction\x12V\n" +
	"\x19radios_5ghz_high_rx_bytes\x18\x92\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15radios5ghzHighRxBytes\x12Z\n" +
	"\x1bradios_5ghz_high_rx_packets\x18\x93\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x17radios5ghzHighRxPackets\x12X\n" +
	"\x1aradios_5ghz_high_rx_errors\x18\x94\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x16radios5ghzHighRxErrors\x12c\n" +
	" radios_5ghz_high_rx_frame_errors\x18\x95\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x1bradios5ghzHighRxFrameErrors\x12l\n" +
	"%radios_5ghz_high_rx_packet_error_rate\x18\x96\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fradios5ghzHighRxPacketErrorRate\x12k\n" +
	"$radios_5ghz_high_rx_airtime_fraction\x18\x97\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fradios5ghzHighRxAirtimeFraction\x12V\n" +
	"\x19radios_5ghz_high_tx_bytes\x18\x98\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15radios5ghzHighTxBytes\x12Z\n" +
	"\x1bradios_5ghz_high_tx_packets\x18\x99\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x17radios5ghzHighTxPackets\x12X\n" +
	"\x1aradios_5ghz_high_tx_errors\x18\x9a\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x16radios5ghzHighTxErrors\x12l\n" +
	"%radios_5ghz_high_tx_packet_error_rate\x18\x9b\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fradios5ghzHighTxPacketErrorRate\x12k\n" +
	"$radios_5ghz_high_tx_airtime_fraction\x18\x9c\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fradios5ghzHighTxAirtimeFraction\x12U\n" +
	"\x18radios_2ghz_thermal_temp\x18\xc8\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x15radios2ghzThermalTemp\x12U\n" +
	"\x18radios_5ghz_thermal_temp\x18\xc9\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x15radios5ghzThermalTemp\x12^\n" +
	"\x1dradios_5ghz_high_thermal_temp\x18\xce\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x19radios5ghzHighThermalTemp\x12`\n" +
	"\x1eradios_2ghz_thermal_duty_cycle\x18\xca\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios2ghzThermalDutyCycle\x12`\n" +
	"\x1eradios_5ghz_thermal_duty_cycle\x18\xcb\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzThermalDutyCycle\x12i\n" +
	"#radios_5ghz_high_thermal_duty_cycle\x18\xcf\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1eradios5ghzHighThermalDutyCycle\x12o\n" +
	"%radios_2ghz_thermal_throttled_seconds\x18\xcc\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR!radios2ghzThermalThrottledSeconds\x12o\n" +
	"%radios_5ghz_thermal_throttled_seconds\x18\xcd\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR!radios5ghzThermalThrottledSeconds\x12x\n" +
	"*radios_5ghz_high_thermal_throttled_seconds\x18\xd0\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR%radios5ghzHighThermalThrottledSeconds\x12;\n" +
	"\n" +
	"board_temp\x18\xd2\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\tboardTemp\x12E\n" +
	"\x10poe_mcu_die_temp\x18\xd3\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\rpoeMcuDieTemp\x12\\\n" +
	"\x1cpoe_percent_water_detect_avg\x18\xd4\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x18poePercentWaterDetectAvg\x12R\n" +
	"\x17ifaces_lan_eth_rx_bytes\x18\xac\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x13ifacesLanEthRxBytes\x12V\n" +
	"\x19ifaces_lan_eth_rx_packets\x18\xad\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15ifacesLanEthRxPackets\x12T\n" +
	"\x18ifaces_lan_eth_rx_errors\x18\xae\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x14ifacesLanEthRxErrors\x12_\n" +
	"\x1eifaces_lan_eth_rx_frame_errors\x18\xaf\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x19ifacesLanEthRxFrameErrors\x12R\n" +
	"\x17ifaces_lan_eth_tx_bytes\x18\xb0\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x13ifacesLanEthTxBytes\x12V\n" +
	"\x19ifaces_lan_eth_tx_packets\x18\xb1\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15ifacesLanEthTxPackets\x12T\n" +
	"\x18ifaces_lan_eth_tx_errors\x18\xb2\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x14ifacesLanEthTxErrors\x12T\n" +
	"\x18ifaces_lan1_eth_rx_bytes\x18\xba\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x14ifacesLan1EthRxBytes\x12X\n" +
	"\x1aifaces_lan1_eth_rx_packets\x18\xbb\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x16ifacesLan1EthRxPackets\x12V\n" +
	"\x19ifaces_lan1_eth_rx_errors\x18\xbc\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15ifacesLan1EthRxErrors\x12a\n" +
	"\x1fifaces_lan1_eth_rx_frame_errors\x18\xbd\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x1aifacesLan1EthRxFrameErrors\x12T\n" +
	"\x18ifaces_lan1_eth_tx_bytes\x18\xbe\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x14ifacesLan1EthTxBytes\x12X\n" +
	"\x1aifaces_lan1_eth_tx_packets\x18\xbf\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x16ifacesLan1EthTxPackets\x12V\n" +
	"\x19ifaces_lan1_eth_tx_errors\x18\xc0\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15ifacesLan1EthTxErrors\x12R\n" +
	"\x17ifaces_wan_eth_rx_bytes\x18\xb3\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x13ifacesWanEthRxBytes\x12V\n" +
	"\x19ifaces_wan_eth_rx_packets\x18\xb4\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15ifacesWanEthRxPackets\x12T\n" +
	"\x18ifaces_wan_eth_rx_errors\x18\xb5\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x14ifacesWanEthRxErrors\x12_\n" +
	"\x1eifaces_wan_eth_rx_frame_errors\x18\xb6\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x19ifacesWanEthRxFrameErrors\x12R\n" +
	"\x17ifaces_wan_eth_tx_bytes\x18\xb7\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x13ifacesWanEthTxBytes\x12V\n" +
	"\x19ifaces_wan_eth_tx_packets\x18\xb8\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15ifacesWanEthTxPackets\x12T\n" +
	"\x18ifaces_wan_eth_tx_errors\x18\xb9\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x14ifacesWanEthTxErrors\x127\n" +
	"\aclients\x18\x90\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\aclients\x12@\n" +
	"\fclients_2ghz\x18\x91\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\vclients2ghz\x12@\n" +
	"\fclients_5ghz\x18\x92\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\vclients5ghz\x12I\n" +
	"\x11clients_5ghz_high\x18\x9d\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0fclients5ghzHigh\x12>\n" +
	"\vclients_eth\x18\x93\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\n" +
	"clientsEth\x12c\n" +
	"\x1fclients_5ghz_rx_bandwidth_20mhz\x18\xad\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bclients5ghzRxBandwidth20mhz\x12c\n" +
	"\x1fclients_5ghz_rx_bandwidth_40mhz\x18\xae\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bclients5ghzRxBandwidth40mhz\x12c\n" +
	"\x1fclients_5ghz_rx_bandwidth_80mhz\x18\xaf\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bclients5ghzRxBandwidth80mhz\x12H\n" +
	"\x10clients_repeater\x18\x94\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0fclientsRepeater\x12Q\n" +
	"\x15clients_repeater_2ghz\x18\x95\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13clientsRepeater2ghz\x12Q\n" +
	"\x15clients_repeater_5ghz\x18\x96\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13clientsRepeater5ghz\x12Z\n" +
	"\x1aclients_repeater_5ghz_high\x18\xa0\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x17clientsRepeater5ghzHigh\x12O\n" +
	"\x14clients_repeater_eth\x18\x97\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12clientsRepeaterEth\x12:\n" +
	"\tmesh_hops\x18\x98\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\bmeshHops\x12W\n" +
	"\x1amesh_one_hop_rssi_avg_2ghz\x18\x99\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15meshOneHopRssiAvg2ghz\x12W\n" +
	"\x1amesh_one_hop_rssi_avg_5ghz\x18\x9a\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15meshOneHopRssiAvg5ghz\x12`\n" +
	"\x1fmesh_one_hop_rssi_avg_5ghz_high\x18\x9e\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x19meshOneHopRssiAvg5ghzHigh\x12W\n" +
	"\x1amesh_two_hop_rssi_avg_2ghz\x18\x9b\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15meshTwoHopRssiAvg2ghz\x12W\n" +
	"\x1amesh_two_hop_rssi_avg_5ghz\x18\x9c\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15meshTwoHopRssiAvg5ghz\x12`\n" +
	"\x1fmesh_two_hop_rssi_avg_5ghz_high\x18\x9f\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x19meshTwoHopRssiAvg5ghzHigh\x12V\n" +
	"\x19repeater_tx_rate_mbps_min\x18\xa2\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15repeaterTxRateMbpsMin\x12V\n" +
	"\x19repeater_rx_rate_mbps_min\x18\xa3\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15repeaterRxRateMbpsMin\x12V\n" +
	"\x19repeater_tx_rate_mbps_avg\x18\xa4\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15repeaterTxRateMbpsAvg\x12V\n" +
	"\x19repeater_rx_rate_mbps_avg\x18\xa5\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15repeaterRxRateMbpsAvg\x12k\n" +
	"$repeater_seconds_since_2s_outage_min\x18\xa6\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x1frepeaterSecondsSince2sOutageMin\x12k\n" +
	"$repeater_seconds_since_5s_outage_min\x18\xa8\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x1frepeaterSecondsSince5sOutageMin\x12k\n" +
	"$repeater_seconds_since_2s_outage_avg\x18\xa7\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x1frepeaterSecondsSince2sOutageAvg\x12k\n" +
	"$repeater_seconds_since_5s_outage_avg\x18\xa9\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x1frepeaterSecondsSince5sOutageAvg\x12X\n" +
	"\x1arepeater_latency_ms_1h_max\x18\xaa\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x16repeaterLatencyMs1hMax\x12X\n" +
	"\x1arepeater_latency_ms_1h_avg\x18\xab\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x16repeaterLatencyMs1hAvg\x12_\n" +
	"\x1dmesh_topology_change_count_1d\x18\xac\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x19meshTopologyChangeCount1d\x12e\n" +
	"!ping_seconds_since_last_1s_outage\x18\xd8\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cpingSecondsSinceLast1sOutage\x12e\n" +
	"!ping_seconds_since_last_2s_outage\x18\xd9\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cpingSecondsSinceLast2sOutage\x12e\n" +
	"!ping_seconds_since_last_5s_outage\x18\xda\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cpingSecondsSinceLast5sOutage\x12g\n" +
	"\"ping_seconds_since_last_60s_outage\x18\xdb\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1dpingSecondsSinceLast60sOutage\x12i\n" +
	"#ping_seconds_since_last_300s_outage\x18\xdc\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1epingSecondsSinceLast300sOutage\x12B\n" +
	"\x0eping_drop_rate\x18\xdd\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\fpingDropRate\x12P\n" +
	"\x16ping_drop_rate_last_1h\x18\xde\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x12pingDropRateLast1h\x12?\n" +
	"\fping_latency\x18\xdf\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\vpingLatency\x12M\n" +
	"\x14ping_latency_last_1h\x18\xea\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x11pingLatencyLast1h\x12n\n" +
	"&ping_dish_seconds_since_last_1s_outage\x18\xe2\x04 \x01(\v2\x1b.google.protobuf.FloatValueR pingDishSecondsSinceLast1sOutage\x12n\n" +
	"&ping_dish_seconds_since_last_2s_outage\x18\xe3\x04 \x01(\v2\x1b.google.protobuf.FloatValueR pingDishSecondsSinceLast2sOutage\x12n\n" +
	"&ping_dish_seconds_since_last_5s_outage\x18\xe4\x04 \x01(\v2\x1b.google.protobuf.FloatValueR pingDishSecondsSinceLast5sOutage\x12p\n" +
	"'ping_dish_seconds_since_last_60s_outage\x18\xe5\x04 \x01(\v2\x1b.google.protobuf.FloatValueR!pingDishSecondsSinceLast60sOutage\x12r\n" +
	"(ping_dish_seconds_since_last_300s_outage\x18\xe6\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\"pingDishSecondsSinceLast300sOutage\x12K\n" +
	"\x13ping_dish_drop_rate\x18\xe7\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x10pingDishDropRate\x12Y\n" +
	"\x1bping_dish_drop_rate_last_1h\x18\xe8\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x16pingDishDropRateLast1h\x12H\n" +
	"\x11ping_dish_latency\x18\xe9\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x0fpingDishLatency\x12V\n" +
	"\x19ping_dish_latency_last_1h\x18\xeb\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x15pingDishLatencyLast1h\x12`\n" +
	"\x1fping_pop_ipv6_drop_rate_last_1h\x18\xed\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x19pingPopIpv6DropRateLast1h\x12]\n" +
	"\x1dping_pop_ipv6_latency_last_1h\x18\xef\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x18pingPopIpv6LatencyLast1h\x12n\n" +
	"%client_speedtest_router_download_mbps\x18\xbc\x05 \x01(\v2\x1b.google.protobuf.FloatValueR!clientSpeedtestRouterDownloadMbps\x12j\n" +
	"#client_speedtest_router_upload_mbps\x18\xbd\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fclientSpeedtestRouterUploadMbps\x12]\n" +
	"\x1cclient_speedtest_router_rssi\x18\xbe\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x19clientSpeedtestRouterRssi\x12j\n" +
	"#client_speedtest_wifi_download_mbps\x18\xbf\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fclientSpeedtestWifiDownloadMbps\x12f\n" +
	"!client_speedtest_wifi_upload_mbps\x18\xc0\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x1dclientSpeedtestWifiUploadMbps\x12n\n" +
	"%client_speedtest_client_download_mbps\x18\xc1\x05 \x01(\v2\x1b.google.protobuf.FloatValueR!clientSpeedtestClientDownloadMbps\x12j\n" +
	"#client_speedtest_client_upload_mbps\x18\xc2\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fclientSpeedtestClientUploadMbps\x12]\n" +
	"\x1cclient_speedtest_client_rssi\x18\xc3\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x19clientSpeedtestClientRssi\x12`\n" +
	"\x1dclient_speedtest_client_iface\x18\xc4\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1aclientSpeedtestClientIface\x12\\\n" +
	"\x1bclient_speedtest_client_oui\x18\xc5\x05 \x01(\v2\x1c.google.protobuf.StringValueR\x18clientSpeedtestClientOui\x12c\n" +
	"\x1fclient_speedtest_client_tx_rate\x18\xc6\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bclientSpeedtestClientTxRate\x12c\n" +
	"\x1fclient_speedtest_client_rx_rate\x18\xc7\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bclientSpeedtestClientRxRate\x12o\n" +
	"%client_speedtest_client_platform_type\x18\xc8\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR!clientSpeedtestClientPlatformType\x12e\n" +
	"!speedtest_tcp_8_download_mbps_avg\x18\xa0\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cspeedtestTcp8DownloadMbpsAvg\x12e\n" +
	"!speedtest_tcp_8_download_mbps_max\x18\xa1\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cspeedtestTcp8DownloadMbpsMax\x12a\n" +
	"\x1fspeedtest_tcp_8_upload_mbps_avg\x18\xa2\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aspeedtestTcp8UploadMbpsAvg\x12a\n" +
	"\x1fspeedtest_tcp_8_upload_mbps_max\x18\xa3\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aspeedtestTcp8UploadMbpsMax\x12g\n" +
	"\"speedtest_tcp_64_download_mbps_avg\x18\xa4\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1dspeedtestTcp64DownloadMbpsAvg\x12g\n" +
	"\"speedtest_tcp_64_download_mbps_max\x18\xa5\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1dspeedtestTcp64DownloadMbpsMax\x12c\n" +
	" speedtest_tcp_64_upload_mbps_avg\x18\xa6\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bspeedtestTcp64UploadMbpsAvg\x12c\n" +
	" speedtest_tcp_64_upload_mbps_max\x18\xa7\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bspeedtestTcp64UploadMbpsMax\x12e\n" +
	"!speedtest_tcp_1_download_mbps_avg\x18\xa8\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cspeedtestTcp1DownloadMbpsAvg\x12e\n" +
	"!speedtest_tcp_1_download_mbps_max\x18\xa9\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cspeedtestTcp1DownloadMbpsMax\x12a\n" +
	"\x1fspeedtest_tcp_1_upload_mbps_avg\x18\xaa\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aspeedtestTcp1UploadMbpsAvg\x12a\n" +
	"\x1fspeedtest_tcp_1_upload_mbps_max\x18\xab\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aspeedtestTcp1UploadMbpsMax\x12?\n" +
	"\fdish_cell_id\x18\x84\a \x01(\v2\x1c.google.protobuf.UInt32ValueR\n" +
	"dishCellId\x12O\n" +
	"\x15config_setup_complete\x18\xe8\a \x01(\v2\x1a.google.protobuf.BoolValueR\x13configSetupComplete\x12I\n" +
	"\x12config_bands_split\x18\xe9\a \x01(\v2\x1a.google.protobuf.BoolValueR\x10configBandsSplit\x12I\n" +
	"\x12config_is_repeater\x18\xea\a \x01(\v2\x1a.google.protobuf.BoolValueR\x10configIsRepeater\x12K\n" +
	"\x13config_open_network\x18\xeb\a \x01(\v2\x1a.google.protobuf.BoolValueR\x11configOpenNetwork\x12I\n" +
	"\x12config_is_aviation\x18\xec\a \x01(\v2\x1a.google.protobuf.BoolValueR\x10configIsAviation\x12G\n" +
	"\x11config_secure_dns\x18\xed\a \x01(\v2\x1a.google.protobuf.BoolValueR\x0fconfigSecureDns\x12@\n" +
	"\rconfig_legacy\x18\xee\a \x01(\v2\x1a.google.protobuf.BoolValueR\fconfigLegacy\x12A\n" +
	"\x0econfig_ap_mode\x18\xef\a \x01(\v2\x1a.google.protobuf.BoolValueR\fconfigApMode\x12I\n" +
	"\x12config_dfs_enabled\x18\xf0\a \x01(\v2\x1a.google.protobuf.BoolValueR\x10configDfsEnabled\x12_\n" +
	"\x1econfig_network_name_is_default\x18\xf1\a \x01(\v2\x1a.google.protobuf.BoolValueR\x1aconfigNetworkNameIsDefault\x12V\n" +
	"\x19config_remote_ssh_enabled\x18\xf2\a \x01(\v2\x1a.google.protobuf.BoolValueR\x16configRemoteSshEnabled\x12T\n" +
	"\x18config_is_repeater_wired\x18\xf3\a \x01(\v2\x1a.google.protobuf.BoolValueR\x15configIsRepeaterWired\x12Z\n" +
	"\x1bconfig_is_repeater_wireless\x18\xf4\a \x01(\v2\x1a.google.protobuf.BoolValueR\x18configIsRepeaterWireless\x12Z\n" +
	"\x1aconfig_block_schedules_set\x18\xf5\a \x01(\v2\x1c.google.protobuf.UInt32ValueR\x17configBlockSchedulesSet\x12W\n" +
	"\x19config_custom_nameservers\x18\xf6\a \x01(\v2\x1a.google.protobuf.BoolValueR\x17configCustomNameservers\x12`\n" +
	"\x1econfig_disable_mesh_onboarding\x18\xf7\a \x01(\v2\x1a.google.protobuf.BoolValueR\x1bconfigDisableMeshOnboarding\x12R\n" +
	"\x17config_pin_country_code\x18\xf8\a \x01(\v2\x1a.google.protobuf.BoolValueR\x14configPinCountryCode\x12\\\n" +
	"\x1cconfig_disable_update_reboot\x18\xf9\a \x01(\v2\x1a.google.protobuf.BoolValueR\x19configDisableUpdateReboot\x12k\n" +
	"$config_https_content_hosting_enabled\x18\x87\b \x01(\v2\x1a.google.protobuf.BoolValueR configHttpsContentHostingEnabled\x12q\n" +
	"'config_only_overflight_blocking_enabled\x18\x88\b \x01(\v2\x1a.google.protobuf.BoolValueR#configOnlyOverflightBlockingEnabled\x12y\n" +
	"+config_offline_networks_disablement_enabled\x18\x89\b \x01(\v2\x1a.google.protobuf.BoolValueR'configOfflineNetworksDisablementEnabled\x12K\n" +
	"\x13config_disable_2ghz\x18\xfa\a \x01(\v2\x1a.google.protobuf.BoolValueR\x11configDisable2ghz\x12K\n" +
	"\x13config_disable_5ghz\x18\xfb\a \x01(\v2\x1a.google.protobuf.BoolValueR\x11configDisable5ghz\x12T\n" +
	"\x18config_disable_5ghz_high\x18\x85\b \x01(\v2\x1a.google.protobuf.BoolValueR\x15configDisable5ghzHigh\x12M\n" +
	"\x13config_channel_2ghz\x18\xfc\a \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11configChannel2ghz\x12M\n" +
	"\x13config_channel_5ghz\x18\xfd\a \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11configChannel5ghz\x12V\n" +
	"\x18config_channel_5ghz_high\x18\xfe\a \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15configChannel5ghzHigh\x12F\n" +
	"\x0fconfig_networks\x18\xff\a \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0econfigNetworks\x12Q\n" +
	"\x15config_networks_guest\x18\x80\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13configNetworksGuest\x12S\n" +
	"\x16config_networks_hidden\x18\x81\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14configNetworksHidden\x12f\n" +
	" config_networks_client_isolation\x18\x82\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1dconfigNetworksClientIsolation\x12\\\n" +
	"\x1bconfig_networks_bands_split\x18\x83\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\x18configNetworksBandsSplit\x12`\n" +
	"\x1ewan_traffic_control_cake_bytes\x18\xcd\b \x01(\v2\x1b.google.protobuf.Int64ValueR\x1awanTrafficControlCakeBytes\x12d\n" +
	" wan_traffic_control_cake_packets\x18\xce\b \x01(\v2\x1b.google.protobuf.Int64ValueR\x1cwanTrafficControlCakePackets\x12`\n" +
	"\x1ewan_traffic_control_cake_drops\x18\xcf\b \x01(\v2\x1b.google.protobuf.Int64ValueR\x1awanTrafficControlCakeDrops\x12g\n" +
	"\"wan_traffic_control_cake_ack_drops\x18\xd0\b \x01(\v2\x1b.google.protobuf.Int64ValueR\x1dwanTrafficControlCakeAckDrops\x12J\n" +
	"\x11conntrack_entries\x18\xcc\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\x10conntrackEntries\x12B\n" +
	"\x0edhcp_secs_eq_0\x18\xd1\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\vdhcpSecsEq0\x12B\n" +
	"\x0edhcp_secs_gt_0\x18\xd2\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\vdhcpSecsGt0\x12D\n" +
	"\x0fdhcp_secs_gt_10\x18\xd3\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\fdhcpSecsGt10\x12D\n" +
	"\x0fdhcp_secs_gt_30\x18\xd4\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\fdhcpSecsGt30\x12D\n" +
	"\x0fdhcp_secs_gt_60\x18\xd5\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\fdhcpSecsGt60\x12@\n" +
	"\fdns_forwards\x18\xb0\t \x01(\v2\x1c.google.protobuf.UInt32ValueR\vdnsForwards\x12O\n" +
	"\x14dns_forwards_success\x18\xb1\t \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12dnsForwardsSuccess\x12\\\n" +
	"\x1bdns_forwards_server_failure\x18\xb2\t \x01(\v2\x1c.google.protobuf.UInt32ValueR\x18dnsForwardsServerFailure\x12c\n" +
	"\x1fdns_forwards_no_server_response\x18\xb3\t \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bdnsForwardsNoServerResponse\x12p\n" +
	"&dns_forwards_success_on_default_backup\x18\xb4\t \x01(\v2\x1c.google.protobuf.UInt32ValueR!dnsForwardsSuccessOnDefaultBackup\x12O\n" +
	"\x14dns_forwards_dropped\x18\xb5\t \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12dnsForwardsDropped\x12V\n" +
	"\x18dns_forwards_with_backup\x18\xb6\t \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15dnsForwardsWithBackup\"\xbe\x02\n" +
	"\x16starlink_router_alerts\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x16\n" +
	"\x06active\x18\x03 \x01(\bR\x06active\x12H\n" +
	"\x05start\x18\x04 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x05start\x12D\n" +
	"\x03end\x18\x05 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x03end\x12\x1a\n" +
	"\bhardware\x18\x06 \x01(\tR\bhardware\x12\x1a\n" +
	"\bsoftware\x18\a \x01(\tR\bsoftware\x12\x18\n" +
	"\adetails\x18\b \x01(\tR\adetails\"\xe1\x13\n" +
	"!starlink_router_client_speedtests\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12S\n" +
	"\vdata_record\x18\x02 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\n" +
	"dataRecord\x12\x18\n" +
	"\acountry\x18\x03 \x01(\tR\acountry\x12?\n" +
	"\fspeedtest_id\x18\x1e \x01(\v2\x1c.google.protobuf.StringValueR\vspeedtestId\x12<\n" +
	"\vclient_rssi\x18\b \x01(\v2\x1b.google.protobuf.FloatValueR\n" +
	"clientRssi\x12<\n" +
	"\vrouter_rssi\x18\t \x01(\v2\x1b.google.protobuf.FloatValueR\n" +
	"routerRssi\x12?\n" +
	"\fclient_iface\x18\n" +
	" \x01(\v2\x1c.google.protobuf.UInt32ValueR\vclientIface\x12;\n" +
	"\n" +
	"client_oui\x18\v \x01(\v2\x1c.google.protobuf.StringValueR\tclientOui\x12B\n" +
	"\x0eclient_tx_rate\x18\f \x01(\v2\x1c.google.protobuf.UInt32ValueR\fclientTxRate\x12B\n" +
	"\x0eclient_rx_rate\x18\r \x01(\v2\x1c.google.protobuf.UInt32ValueR\fclientRxRate\x12N\n" +
	"\x14client_platform_type\x18\x1b \x01(\v2\x1c.google.protobuf.StringValueR\x12clientPlatformType\x12J\n" +
	"\x12client_app_version\x18\" \x01(\v2\x1c.google.protobuf.StringValueR\x10clientAppVersion\x12F\n" +
	"\x10client_app_build\x18# \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0eclientAppBuild\x12I\n" +
	"\x12client_rx_phy_mode\x18\x1f \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0fclientRxPhyMode\x12W\n" +
	"\x19client_rx_spatial_streams\x18  \x01(\v2\x1c.google.protobuf.UInt32ValueR\x16clientRxSpatialStreams\x12@\n" +
	"\rclient_rx_mcs\x18! \x01(\v2\x1c.google.protobuf.UInt32ValueR\vclientRxMcs\x12o\n" +
	"\x1aclient_download_start_time\x18\x04 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x17clientDownloadStartTime\x12k\n" +
	"\x18client_upload_start_time\x18\x05 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x15clientUploadStartTime\x12T\n" +
	"\x18client_download_mbps_avg\x18\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x15clientDownloadMbpsAvg\x12P\n" +
	"\x16client_upload_mbps_avg\x18\a \x01(\v2\x1b.google.protobuf.FloatValueR\x13clientUploadMbpsAvg\x12A\n" +
	"\rclient_target\x18\x1c \x01(\v2\x1c.google.protobuf.StringValueR\fclientTarget\x12J\n" +
	"\x12client_tcp_streams\x18\x10 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x10clientTcpStreams\x12o\n" +
	"\x1arouter_download_start_time\x18\x11 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x17routerDownloadStartTime\x12k\n" +
	"\x18router_upload_start_time\x18\x12 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x15routerUploadStartTime\x12T\n" +
	"\x18router_download_mbps_avg\x18\x13 \x01(\v2\x1b.google.protobuf.FloatValueR\x15routerDownloadMbpsAvg\x12P\n" +
	"\x16router_upload_mbps_avg\x18\x14 \x01(\v2\x1b.google.protobuf.FloatValueR\x13routerUploadMbpsAvg\x12A\n" +
	"\rrouter_target\x18\x1d \x01(\v2\x1c.google.protobuf.StringValueR\frouterTarget\x12J\n" +
	"\x12router_tcp_streams\x18\x16 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x10routerTcpStreams\x12k\n" +
	"\x18wifi_download_start_time\x18\x17 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x15wifiDownloadStartTime\x12g\n" +
	"\x16wifi_upload_start_time\x18\x18 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x13wifiUploadStartTime\x12P\n" +
	"\x16wifi_download_mbps_avg\x18\x19 \x01(\v2\x1b.google.protobuf.FloatValueR\x13wifiDownloadMbpsAvg\x12L\n" +
	"\x14wifi_upload_mbps_avg\x18\x1a \x01(\v2\x1b.google.protobuf.FloatValueR\x11wifiUploadMbpsAvgJ\x04\b\x0e\x10\x0fJ\x04\b\x0f\x10\x10J\x04\b\x15\x10\x16\"\xb3\x1d\n" +
	"\x15StarlinkRouterClients\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12P\n" +
	"\ttimestamp\x18\x02 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\ttimestamp\x12\x1b\n" +
	"\tclient_id\x18\x03 \x01(\rR\bclientId\x12,\n" +
	"\x12client_telem_index\x18\x04 \x01(\tR\x10clientTelemIndex\x129\n" +
	"\trouter_hw\x18w \x01(\v2\x1c.google.protobuf.StringValueR\brouterHw\x129\n" +
	"\trouter_sw\x18x \x01(\v2\x1c.google.protobuf.StringValueR\brouterSw\x12E\n" +
	"\x0frouter_uptime_s\x18\x89\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\rrouterUptimeS\x12F\n" +
	"\x10client_router_id\x18y \x01(\v2\x1c.google.protobuf.StringValueR\x0eclientRouterId\x129\n" +
	"\tclient_hw\x18z \x01(\v2\x1c.google.protobuf.StringValueR\bclientHw\x129\n" +
	"\tclient_sw\x18{ \x01(\v2\x1c.google.protobuf.StringValueR\bclientSw\x12.\n" +
	"\x03oui\x18e \x01(\v2\x1c.google.protobuf.StringValueR\x03oui\x12=\n" +
	"\vupstream_id\x18f \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"upstreamId\x12;\n" +
	"\vis_repeater\x18g \x01(\v2\x1a.google.protobuf.BoolValueR\n" +
	"isRepeater\x12=\n" +
	"\vconnected_s\x18h \x01(\v2\x1c.google.protobuf.UInt32ValueR\n" +
	"connectedS\x12:\n" +
	"\tinterface\x18i \x01(\v2\x1c.google.protobuf.StringValueR\tinterface\x12A\n" +
	"\rradio_channel\x18j \x01(\v2\x1c.google.protobuf.UInt32ValueR\fradioChannel\x12/\n" +
	"\x04rssi\x18k \x01(\v2\x1b.google.protobuf.FloatValueR\x04rssi\x123\n" +
	"\x06rx_mcs\x18l \x01(\v2\x1c.google.protobuf.UInt32ValueR\x05rxMcs\x123\n" +
	"\x06tx_mcs\x18m \x01(\v2\x1c.google.protobuf.UInt32ValueR\x05txMcs\x125\n" +
	"\arx_rate\x18n \x01(\v2\x1c.google.protobuf.UInt32ValueR\x06rxRate\x125\n" +
	"\atx_rate\x18o \x01(\v2\x1c.google.protobuf.UInt32ValueR\x06txRate\x12?\n" +
	"\frx_bandwidth\x18p \x01(\v2\x1c.google.protobuf.UInt32ValueR\vrxBandwidth\x12J\n" +
	"\x12rx_spatial_streams\x18q \x01(\v2\x1c.google.protobuf.UInt32ValueR\x10rxSpatialStreams\x12<\n" +
	"\vrx_phy_mode\x18r \x01(\v2\x1c.google.protobuf.UInt32ValueR\trxPhyMode\x129\n" +
	"\tmesh_hops\x18v \x01(\v2\x1c.google.protobuf.UInt32ValueR\bmeshHops\x12O\n" +
	"\x15speedtest_upload_mbps\x18| \x01(\v2\x1b.google.protobuf.FloatValueR\x13speedtestUploadMbps\x12S\n" +
	"\x17speedtest_download_mbps\x18} \x01(\v2\x1b.google.protobuf.FloatValueR\x15speedtestDownloadMbps\x12E\n" +
	"\x10site_survey_rssi\x18\x7f \x01(\v2\x1b.google.protobuf.FloatValueR\x0esiteSurveyRssi\x12R\n" +
	"\x17site_survey_est_rx_rate\x18\x80\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x13siteSurveyEstRxRate\x12b\n" +
	"\x1eest_controller_throughput_mbps\x18\x81\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bestControllerThroughputMbps\x12O\n" +
	"\x16ping_drop_rate_last_1h\x18s \x01(\v2\x1b.google.protobuf.FloatValueR\x12pingDropRateLast1h\x12L\n" +
	"\x14ping_latency_last_1h\x18t \x01(\v2\x1b.google.protobuf.FloatValueR\x11pingLatencyLast1h\x12=\n" +
	"\vsteer_state\x18u \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"steerState\x124\n" +
	"\ablocked\x18~ \x01(\v2\x1a.google.protobuf.BoolValueR\ablocked\x12v\n" +
	"\x1dthroughput_limited_last_fired\x18\x96\x01 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\x1athroughputLimitedLastFired\x12F\n" +
	"\x11has_dhcp_v4_lease\x18\x82\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x0ehasDhcpV4Lease\x12@\n" +
	"\fipv4_address\x18\x83\x01 \x01(\v2\x1c.google.protobuf.StringValueR\vipv4Address\x12>\n" +
	"\fhas_hostname\x18\x84\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\vhasHostname\x12Q\n" +
	"\x17dhcp_v4_lease_is_active\x18\x85\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x13dhcpV4LeaseIsActive\x12U\n" +
	"\x19dhcp_v4_lease_was_renewed\x18\x86\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x15dhcpV4LeaseWasRenewed\x12i\n" +
	"#seconds_until_dhcp_v4_lease_expires\x18\x87\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1esecondsUntilDhcpV4LeaseExpires\x12U\n" +
	"\x17dissociations_under_10s\x18\x8a\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15dissociationsUnder10s\x12U\n" +
	"\x17dissociations_under_30s\x18\x8b\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15dissociationsUnder30s\x12U\n" +
	"\x17dissociations_under_60s\x18\x8c\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15dissociationsUnder60s\x12W\n" +
	"\x18dissociations_under_120s\x18\x8d\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x16dissociationsUnder120s\x12T\n" +
	"\x18seconds_to_conn_tcp_ipv4\x18\x8e\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x14secondsToConnTcpIpv4\x12T\n" +
	"\x18seconds_to_conn_tcp_ipv6\x18\x8f\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x14secondsToConnTcpIpv6\x12T\n" +
	"\x18seconds_to_conn_udp_ipv4\x18\x90\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x14secondsToConnUdpIpv4\x12T\n" +
	"\x18seconds_to_conn_udp_ipv6\x18\x91\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x14secondsToConnUdpIpv6\x12C\n" +
	"\x0eflows_tcp_ipv4\x18\x92\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\fflowsTcpIpv4\x12C\n" +
	"\x0eflows_tcp_ipv6\x18\x93\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\fflowsTcpIpv6\x12C\n" +
	"\x0eflows_udp_ipv4\x18\x94\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\fflowsUdpIpv4\x12C\n" +
	"\x0eflows_udp_ipv6\x18\x95\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\fflowsUdpIpv6J\x06\b\x88\x01\x10\x89\x01R\n" +
	"authorized\"\x9f\x0f\n" +
	"\x1dStarlinkRouterClientTesterRun\x125\n" +
	"\x17client_tester_router_id\x18\x01 \x01(\tR\x14clientTesterRouterId\x12P\n" +
	"\ttimestamp\x18\x02 \x01(\v22.SpaceX.API.Telemetron.Public.Common.TimestampInfoR\ttimestamp\x12H\n" +
	"\x11client_iface_name\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\x0fclientIfaceName\x12=\n" +
	"\vtarget_ssid\x18\x04 \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"targetSsid\x12J\n" +
	"\x13target_has_password\x18\x05 \x01(\v2\x1a.google.protobuf.BoolValueR\x11targetHasPassword\x12=\n" +
	"\vtarget_auth\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"targetAuth\x12I\n" +
	"\x11target_encryption\x18\a \x01(\v2\x1c.google.protobuf.StringValueR\x10targetEncryption\x12?\n" +
	"\ftarget_bssid\x18\b \x01(\v2\x1c.google.protobuf.StringValueR\vtargetBssid\x12J\n" +
	"\x12target_irtt_server\x18\x19 \x01(\v2\x1c.google.protobuf.StringValueR\x10targetIrttServer\x12:\n" +
	"\titeration\x18\t \x01(\v2\x1c.google.protobuf.UInt32ValueR\titeration\x12;\n" +
	"\n" +
	"error_code\x18\n" +
	" \x01(\v2\x1c.google.protobuf.StringValueR\terrorCode\x12M\n" +
	"\x14seconds_to_associate\x18\v \x01(\v2\x1b.google.protobuf.FloatValueR\x12secondsToAssociate\x12E\n" +
	"\x10seconds_to_lease\x18\f \x01(\v2\x1b.google.protobuf.FloatValueR\x0esecondsToLease\x12V\n" +
	"\x19seconds_to_resolve_router\x18\r \x01(\v2\x1b.google.protobuf.FloatValueR\x16secondsToResolveRouter\x12Z\n" +
	"\x1bseconds_to_resolve_internet\x18\x0e \x01(\v2\x1b.google.protobuf.FloatValueR\x18secondsToResolveInternet\x12L\n" +
	"\x14seconds_to_ping_dish\x18\x0f \x01(\v2\x1b.google.protobuf.FloatValueR\x11secondsToPingDish\x12Q\n" +
	"\x17v4_irtt_test_duration_s\x18\x10 \x01(\v2\x1b.google.protobuf.FloatValueR\x13v4IrttTestDurationS\x12V\n" +
	"\x1av4_irtt_rtt_latency_min_ms\x18\x11 \x01(\v2\x1b.google.protobuf.FloatValueR\x15v4IrttRttLatencyMinMs\x12X\n" +
	"\x1bv4_irtt_rtt_latency_mean_ms\x18\x12 \x01(\v2\x1b.google.protobuf.FloatValueR\x16v4IrttRttLatencyMeanMs\x12\\\n" +
	"\x1dv4_irtt_rtt_latency_median_ms\x18\x13 \x01(\v2\x1b.google.protobuf.FloatValueR\x18v4IrttRttLatencyMedianMs\x12V\n" +
	"\x1av4_irtt_rtt_latency_max_ms\x18\x14 \x01(\v2\x1b.google.protobuf.FloatValueR\x15v4IrttRttLatencyMaxMs\x12]\n" +
	"\x1ev4_irtt_rtt_latency_std_dev_ms\x18\x15 \x01(\v2\x1b.google.protobuf.FloatValueR\x18v4IrttRttLatencyStdDevMs\x12G\n" +
	"\x11v4_irtt_pkts_sent\x18\x16 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0ev4IrttPktsSent\x12G\n" +
	"\x11v4_irtt_pkts_recv\x18\x17 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0ev4IrttPktsRecv\x12L\n" +
	"\x14v4_irtt_loss_percent\x18\x18 \x01(\v2\x1b.google.protobuf.FloatValueR\x11v4IrttLossPercent\"\xa9\x01\n" +
	"\x1dWifiSetClientGivenNameRequest\x12B\n" +
	"\vclient_name\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.ClientNameB\x02\x18\x01R\n" +
	"clientName\x12D\n" +
	"\rclient_config\x18\x02 \x01(\v2\x1f.SpaceX.API.Device.ClientConfigR\fclientConfig\"\x15\n" +
	"\x13WifiSelfTestRequest\"h\n" +
	"\x14WifiSelfTestResponse\x12<\n" +
	"\tself_test\x18\x01 \x01(\v2\x1f.SpaceX.API.Device.WifiSelfTestR\bselfTest\x12\x12\n" +
	"\x04json\x18\x02 \x01(\tR\x04json\"\x18\n" +
	"\x16WifiRunSelfTestRequest\"\xff\x02\n" +
	"\x11WifiRfTestRequest\x12)\n" +
	"\x10num_measurements\x18\x01 \x01(\rR\x0fnumMeasurements\x12!\n" +
	"\fchannel_2ghz\x18\x02 \x01(\rR\vchannel2ghz\x12!\n" +
	"\fchannel_5ghz\x18\x03 \x01(\rR\vchannel5ghz\x12*\n" +
	"\x11channel_5ghz_high\x18\x04 \x01(\rR\x0fchannel5ghzHigh\x12\x19\n" +
	"\bmcs_2ghz\x18\x05 \x01(\rR\amcs2ghz\x12\x19\n" +
	"\bmcs_5ghz\x18\x06 \x01(\rR\amcs5ghz\x12\"\n" +
	"\rmcs_5ghz_high\x18\a \x01(\rR\vmcs5ghzHigh\x12\"\n" +
	"\rphy_mode_2ghz\x18\b \x01(\rR\vphyMode2ghz\x12\"\n" +
	"\rphy_mode_5ghz\x18\t \x01(\rR\vphyMode5ghz\x12+\n" +
	"\x12phy_mode_5ghz_high\x18\n" +
	" \x01(\rR\x0fphyMode5ghzHigh\",\n" +
	"\x12WifiRfTestResponse\x12\x16\n" +
	"\x06report\x18\x01 \x01(\tR\x06report\"\x18\n" +
	"\x16WifiGetFirewallRequest\"T\n" +
	"\x17WifiGetFirewallResponse\x12\x1a\n" +
	"\biptables\x18\x01 \x01(\tR\biptables\x12\x1d\n" +
	"\n" +
	"iptables_6\x18\x02 \x01(\tR\tiptables6\"9\n" +
	"\x1fWifiTogglePoeNegotiationRequest\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\"\x1c\n" +
	"\x1aWifiCalibrationModeRequest\"\xad\\\n" +
	"!starlink_router_hourly_metrics_v2\x12,\n" +
	"\x02id\x18\x01 \x01(\v2\x1c.google.protobuf.StringValueR\x02id\x12C\n" +
	"\x0etimestamp_date\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\rtimestampDate\x12C\n" +
	"\x0etimestamp_hour\x18\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\rtimestampHour\x12:\n" +
	"\n" +
	"sys_hw_gen\x18\x04 \x01(\v2\x1c.google.protobuf.UInt32ValueR\bsysHwGen\x123\n" +
	"\x06sys_sw\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\x05sysSw\x12=\n" +
	"\vsys_country\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"sysCountry\x128\n" +
	"\n" +
	"sys_is_dev\x18\a \x01(\v2\x1a.google.protobuf.BoolValueR\bsysIsDev\x12@\n" +
	"\rsys_alloc_fds\x18\b \x01(\v2\x1c.google.protobuf.UInt32ValueR\vsysAllocFds\x12?\n" +
	"\rsys_cpu_usage\x18\t \x01(\v2\x1b.google.protobuf.FloatValueR\vsysCpuUsage\x12B\n" +
	"\x0fsys_mem_free_kb\x18\n" +
	" \x01(\v2\x1b.google.protobuf.FloatValueR\fsysMemFreeKb\x12@\n" +
	"\rsys_bootcount\x18\v \x01(\v2\x1b.google.protobuf.Int32ValueR\fsysBootcount\x12L\n" +
	"\x14sys_partitions_equal\x18\f \x01(\v2\x1a.google.protobuf.BoolValueR\x12sysPartitionsEqual\x12J\n" +
	"\x12sys_uptime_seconds\x18\r \x01(\v2\x1c.google.protobuf.UInt32ValueR\x10sysUptimeSeconds\x12V\n" +
	"\x19sys_anti_rollback_version\x18\x0e \x01(\v2\x1b.google.protobuf.Int32ValueR\x16sysAntiRollbackVersion\x12L\n" +
	"\x13radios_2ghz_channel\x18d \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11radios2ghzChannel\x12V\n" +
	"\x19radios_2ghz_antenna1_rssi\x18e \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna1Rssi\x12V\n" +
	"\x19radios_2ghz_antenna2_rssi\x18f \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna2Rssi\x12V\n" +
	"\x19radios_2ghz_antenna3_rssi\x18g \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios2ghzAntenna3Rssi\x12S\n" +
	"\x17radios_2ghz_iface_count\x18h \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14radios2ghzIfaceCount\x12_\n" +
	"\x1eradios_2ghz_chan_busy_fraction\x18i \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios2ghzChanBusyFraction\x12X\n" +
	"\x1aradios_2ghz_edcca_fraction\x18j \x01(\v2\x1b.google.protobuf.FloatValueR\x17radios2ghzEdccaFraction\x12k\n" +
	"$radios_2ghz_overlapping_bss_fraction\x18k \x01(\v2\x1b.google.protobuf.FloatValueR radios2ghzOverlappingBssFraction\x12M\n" +
	"\x14radios_2ghz_rx_bytes\x18l \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11radios2ghzRxBytes\x12Q\n" +
	"\x16radios_2ghz_rx_packets\x18m \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13radios2ghzRxPackets\x12O\n" +
	"\x15radios_2ghz_rx_errors\x18n \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12radios2ghzRxErrors\x12Z\n" +
	"\x1bradios_2ghz_rx_frame_errors\x18o \x01(\v2\x1c.google.protobuf.UInt32ValueR\x17radios2ghzRxFrameErrors\x12b\n" +
	" radios_2ghz_rx_packet_error_rate\x18p \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios2ghzRxPacketErrorRate\x12a\n" +
	"\x1fradios_2ghz_rx_airtime_fraction\x18q \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios2ghzRxAirtimeFraction\x12M\n" +
	"\x14radios_2ghz_tx_bytes\x18r \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11radios2ghzTxBytes\x12Q\n" +
	"\x16radios_2ghz_tx_packets\x18s \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13radios2ghzTxPackets\x12O\n" +
	"\x15radios_2ghz_tx_errors\x18t \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12radios2ghzTxErrors\x12b\n" +
	" radios_2ghz_tx_packet_error_rate\x18u \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios2ghzTxPacketErrorRate\x12a\n" +
	"\x1fradios_2ghz_tx_airtime_fraction\x18v \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios2ghzTxAirtimeFraction\x12L\n" +
	"\x13radios_5ghz_channel\x18w \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11radios5ghzChannel\x12V\n" +
	"\x19radios_5ghz_antenna1_rssi\x18x \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna1Rssi\x12V\n" +
	"\x19radios_5ghz_antenna2_rssi\x18y \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna2Rssi\x12V\n" +
	"\x19radios_5ghz_antenna3_rssi\x18z \x01(\v2\x1b.google.protobuf.FloatValueR\x16radios5ghzAntenna3Rssi\x12S\n" +
	"\x17radios_5ghz_iface_count\x18{ \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14radios5ghzIfaceCount\x12_\n" +
	"\x1eradios_5ghz_chan_busy_fraction\x18| \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzChanBusyFraction\x12X\n" +
	"\x1aradios_5ghz_edcca_fraction\x18} \x01(\v2\x1b.google.protobuf.FloatValueR\x17radios5ghzEdccaFraction\x12k\n" +
	"$radios_5ghz_overlapping_bss_fraction\x18~ \x01(\v2\x1b.google.protobuf.FloatValueR radios5ghzOverlappingBssFraction\x12M\n" +
	"\x14radios_5ghz_rx_bytes\x18\x7f \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11radios5ghzRxBytes\x12R\n" +
	"\x16radios_5ghz_rx_packets\x18\x80\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13radios5ghzRxPackets\x12P\n" +
	"\x15radios_5ghz_rx_errors\x18\x81\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12radios5ghzRxErrors\x12[\n" +
	"\x1bradios_5ghz_rx_frame_errors\x18\x82\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x17radios5ghzRxFrameErrors\x12c\n" +
	" radios_5ghz_rx_packet_error_rate\x18\x83\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzRxPacketErrorRate\x12b\n" +
	"\x1fradios_5ghz_rx_airtime_fraction\x18\x84\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzRxAirtimeFraction\x12N\n" +
	"\x14radios_5ghz_tx_bytes\x18\x85\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x11radios5ghzTxBytes\x12R\n" +
	"\x16radios_5ghz_tx_packets\x18\x86\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13radios5ghzTxPackets\x12P\n" +
	"\x15radios_5ghz_tx_errors\x18\x87\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12radios5ghzTxErrors\x12c\n" +
	" radios_5ghz_tx_packet_error_rate\x18\x88\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzTxPacketErrorRate\x12b\n" +
	"\x1fradios_5ghz_tx_airtime_fraction\x18\x89\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bradios5ghzTxAirtimeFraction\x12U\n" +
	"\x18radios_2ghz_thermal_temp\x18\xc8\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x15radios2ghzThermalTemp\x12U\n" +
	"\x18radios_5ghz_thermal_temp\x18\xc9\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x15radios5ghzThermalTemp\x12`\n" +
	"\x1eradios_2ghz_thermal_duty_cycle\x18\xca\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios2ghzThermalDutyCycle\x12`\n" +
	"\x1eradios_5ghz_thermal_duty_cycle\x18\xcb\x01 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aradios5ghzThermalDutyCycle\x12o\n" +
	"%radios_2ghz_thermal_throttled_seconds\x18\xcc\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR!radios2ghzThermalThrottledSeconds\x12o\n" +
	"%radios_5ghz_thermal_throttled_seconds\x18\xcd\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR!radios5ghzThermalThrottledSeconds\x12S\n" +
	"\x17ifaces_lan_eth_rx_bytes\x18\xac\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13ifacesLanEthRxBytes\x12W\n" +
	"\x19ifaces_lan_eth_rx_packets\x18\xad\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15ifacesLanEthRxPackets\x12U\n" +
	"\x18ifaces_lan_eth_rx_errors\x18\xae\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14ifacesLanEthRxErrors\x12`\n" +
	"\x1eifaces_lan_eth_rx_frame_errors\x18\xaf\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x19ifacesLanEthRxFrameErrors\x12S\n" +
	"\x17ifaces_lan_eth_tx_bytes\x18\xb0\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13ifacesLanEthTxBytes\x12W\n" +
	"\x19ifaces_lan_eth_tx_packets\x18\xb1\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15ifacesLanEthTxPackets\x12U\n" +
	"\x18ifaces_lan_eth_tx_errors\x18\xb2\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14ifacesLanEthTxErrors\x12S\n" +
	"\x17ifaces_wan_eth_rx_bytes\x18\xb3\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13ifacesWanEthRxBytes\x12W\n" +
	"\x19ifaces_wan_eth_rx_packets\x18\xb4\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15ifacesWanEthRxPackets\x12U\n" +
	"\x18ifaces_wan_eth_rx_errors\x18\xb5\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14ifacesWanEthRxErrors\x12`\n" +
	"\x1eifaces_wan_eth_rx_frame_errors\x18\xb6\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x19ifacesWanEthRxFrameErrors\x12S\n" +
	"\x17ifaces_wan_eth_tx_bytes\x18\xb7\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13ifacesWanEthTxBytes\x12W\n" +
	"\x19ifaces_wan_eth_tx_packets\x18\xb8\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x15ifacesWanEthTxPackets\x12U\n" +
	"\x18ifaces_wan_eth_tx_errors\x18\xb9\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x14ifacesWanEthTxErrors\x127\n" +
	"\aclients\x18\x90\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\aclients\x12@\n" +
	"\fclients_2ghz\x18\x91\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\vclients2ghz\x12@\n" +
	"\fclients_5ghz\x18\x92\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\vclients5ghz\x12>\n" +
	"\vclients_eth\x18\x93\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\n" +
	"clientsEth\x12H\n" +
	"\x10clients_repeater\x18\x94\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0fclientsRepeater\x12Q\n" +
	"\x15clients_repeater_2ghz\x18\x95\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13clientsRepeater2ghz\x12Q\n" +
	"\x15clients_repeater_5ghz\x18\x96\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x13clientsRepeater5ghz\x12O\n" +
	"\x14clients_repeater_eth\x18\x97\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12clientsRepeaterEth\x12:\n" +
	"\tmesh_hops\x18\x98\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\bmeshHops\x12W\n" +
	"\x1amesh_one_hop_rssi_avg_2ghz\x18\x99\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15meshOneHopRssiAvg2ghz\x12W\n" +
	"\x1amesh_one_hop_rssi_avg_5ghz\x18\x9a\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15meshOneHopRssiAvg5ghz\x12W\n" +
	"\x1amesh_two_hop_rssi_avg_2ghz\x18\x9b\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15meshTwoHopRssiAvg2ghz\x12W\n" +
	"\x1amesh_two_hop_rssi_avg_5ghz\x18\x9c\x03 \x01(\v2\x1b.google.protobuf.FloatValueR\x15meshTwoHopRssiAvg5ghz\x12e\n" +
	"!ping_seconds_since_last_1s_outage\x18\xd8\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cpingSecondsSinceLast1sOutage\x12e\n" +
	"!ping_seconds_since_last_2s_outage\x18\xd9\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cpingSecondsSinceLast2sOutage\x12e\n" +
	"!ping_seconds_since_last_5s_outage\x18\xda\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cpingSecondsSinceLast5sOutage\x12g\n" +
	"\"ping_seconds_since_last_60s_outage\x18\xdb\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1dpingSecondsSinceLast60sOutage\x12i\n" +
	"#ping_seconds_since_last_300s_outage\x18\xdc\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x1epingSecondsSinceLast300sOutage\x12B\n" +
	"\x0eping_drop_rate\x18\xdd\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\fpingDropRate\x12P\n" +
	"\x16ping_drop_rate_last_1h\x18\xde\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x12pingDropRateLast1h\x12?\n" +
	"\fping_latency\x18\xdf\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\vpingLatency\x12n\n" +
	"&ping_dish_seconds_since_last_1s_outage\x18\xe2\x04 \x01(\v2\x1b.google.protobuf.FloatValueR pingDishSecondsSinceLast1sOutage\x12n\n" +
	"&ping_dish_seconds_since_last_2s_outage\x18\xe3\x04 \x01(\v2\x1b.google.protobuf.FloatValueR pingDishSecondsSinceLast2sOutage\x12n\n" +
	"&ping_dish_seconds_since_last_5s_outage\x18\xe4\x04 \x01(\v2\x1b.google.protobuf.FloatValueR pingDishSecondsSinceLast5sOutage\x12p\n" +
	"'ping_dish_seconds_since_last_60s_outage\x18\xe5\x04 \x01(\v2\x1b.google.protobuf.FloatValueR!pingDishSecondsSinceLast60sOutage\x12r\n" +
	"(ping_dish_seconds_since_last_300s_outage\x18\xe6\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\"pingDishSecondsSinceLast300sOutage\x12K\n" +
	"\x13ping_dish_drop_rate\x18\xe7\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x10pingDishDropRate\x12Y\n" +
	"\x1bping_dish_drop_rate_last_1h\x18\xe8\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x16pingDishDropRateLast1h\x12H\n" +
	"\x11ping_dish_latency\x18\xe9\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x0fpingDishLatency\x12n\n" +
	"%client_speedtest_router_download_mbps\x18\xbc\x05 \x01(\v2\x1b.google.protobuf.FloatValueR!clientSpeedtestRouterDownloadMbps\x12j\n" +
	"#client_speedtest_router_upload_mbps\x18\xbd\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fclientSpeedtestRouterUploadMbps\x12]\n" +
	"\x1cclient_speedtest_router_rssi\x18\xbe\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x19clientSpeedtestRouterRssi\x12j\n" +
	"#client_speedtest_wifi_download_mbps\x18\xbf\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fclientSpeedtestWifiDownloadMbps\x12f\n" +
	"!client_speedtest_wifi_upload_mbps\x18\xc0\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x1dclientSpeedtestWifiUploadMbps\x12n\n" +
	"%client_speedtest_client_download_mbps\x18\xc1\x05 \x01(\v2\x1b.google.protobuf.FloatValueR!clientSpeedtestClientDownloadMbps\x12j\n" +
	"#client_speedtest_client_upload_mbps\x18\xc2\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x1fclientSpeedtestClientUploadMbps\x12]\n" +
	"\x1cclient_speedtest_client_rssi\x18\xc3\x05 \x01(\v2\x1b.google.protobuf.FloatValueR\x19clientSpeedtestClientRssi\x12`\n" +
	"\x1dclient_speedtest_client_iface\x18\xc4\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1aclientSpeedtestClientIface\x12\\\n" +
	"\x1bclient_speedtest_client_oui\x18\xc5\x05 \x01(\v2\x1c.google.protobuf.StringValueR\x18clientSpeedtestClientOui\x12c\n" +
	"\x1fclient_speedtest_client_tx_rate\x18\xc6\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bclientSpeedtestClientTxRate\x12c\n" +
	"\x1fclient_speedtest_client_rx_rate\x18\xc7\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1bclientSpeedtestClientRxRate\x12o\n" +
	"%client_speedtest_client_platform_type\x18\xc8\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR!clientSpeedtestClientPlatformType\x12e\n" +
	"!speedtest_tcp_8_download_mbps_avg\x18\xa0\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cspeedtestTcp8DownloadMbpsAvg\x12e\n" +
	"!speedtest_tcp_8_download_mbps_max\x18\xa1\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1cspeedtestTcp8DownloadMbpsMax\x12a\n" +
	"\x1fspeedtest_tcp_8_upload_mbps_avg\x18\xa2\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aspeedtestTcp8UploadMbpsAvg\x12a\n" +
	"\x1fspeedtest_tcp_8_upload_mbps_max\x18\xa3\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1aspeedtestTcp8UploadMbpsMax\x12g\n" +
	"\"speedtest_tcp_64_download_mbps_avg\x18\xa4\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1dspeedtestTcp64DownloadMbpsAvg\x12g\n" +
	"\"speedtest_tcp_64_download_mbps_max\x18\xa5\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1dspeedtestTcp64DownloadMbpsMax\x12c\n" +
	" speedtest_tcp_64_upload_mbps_avg\x18\xa6\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bspeedtestTcp64UploadMbpsAvg\x12c\n" +
	" speedtest_tcp_64_upload_mbps_max\x18\xa7\x06 \x01(\v2\x1b.google.protobuf.FloatValueR\x1bspeedtestTcp64UploadMbpsMax\x12?\n" +
	"\fdish_cell_id\x18\x84\a \x01(\v2\x1c.google.protobuf.UInt32ValueR\n" +
	"dishCellId\x12O\n" +
	"\x15config_setup_complete\x18\xe8\a \x01(\v2\x1a.google.protobuf.BoolValueR\x13configSetupComplete\x12I\n" +
	"\x12config_bands_split\x18\xe9\a \x01(\v2\x1a.google.protobuf.BoolValueR\x10configBandsSplit\x12I\n" +
	"\x12config_is_repeater\x18\xea\a \x01(\v2\x1a.google.protobuf.BoolValueR\x10configIsRepeater\x12K\n" +
	"\x13config_open_network\x18\xeb\a \x01(\v2\x1a.google.protobuf.BoolValueR\x11configOpenNetwork\x12I\n" +
	"\x12config_is_aviation\x18\xec\a \x01(\v2\x1a.google.protobuf.BoolValueR\x10configIsAviation\x12G\n" +
	"\x11config_secure_dns\x18\xed\a \x01(\v2\x1a.google.protobuf.BoolValueR\x0fconfigSecureDns\x12@\n" +
	"\rconfig_legacy\x18\xee\a \x01(\v2\x1a.google.protobuf.BoolValueR\fconfigLegacy\x12A\n" +
	"\x0econfig_ap_mode\x18\xef\a \x01(\v2\x1a.google.protobuf.BoolValueR\fconfigApMode\x12I\n" +
	"\x12config_dfs_enabled\x18\xf0\a \x01(\v2\x1a.google.protobuf.BoolValueR\x10configDfsEnabled\x12_\n" +
	"\x1econfig_network_name_is_default\x18\xf1\a \x01(\v2\x1a.google.protobuf.BoolValueR\x1aconfigNetworkNameIsDefault\x12Z\n" +
	"\x19config_remote_ssh_enabled\x18\xf2\a \x01(\v2\x1a.google.protobuf.BoolValueB\x02\x18\x01R\x16configRemoteSshEnabled\"\x16\n" +
	"\x14WifiGuestInfoRequest\"\xfc\x01\n" +
	"\x15WifiGuestInfoResponse\x12\x19\n" +
	"\bis_guest\x18\x01 \x01(\bR\aisGuest\x12\x1b\n" +
	"\tis_online\x18\x02 \x01(\bR\bisOnline\x126\n" +
	"\x17router_hardware_version\x18\x03 \x01(\tR\x15routerHardwareVersion\x122\n" +
	"\x15dish_hardware_version\x18\x04 \x01(\tR\x13dishHardwareVersion\x12?\n" +
	"\x1cis_router_aviation_conformed\x18\x05 \x01(\bR\x19isRouterAviationConformed\"\xa1\x02\n" +
	"\x1dWifiFactoryTestCommandRequest\x12I\n" +
	"\x0eiwpriv_command\x18\x01 \x01(\v2 .SpaceX.API.Device.IwprivCommandH\x00R\riwprivCommand\x12T\n" +
	"\x13ip_link_set_command\x18\x02 \x01(\v2#.SpaceX.API.Device.IpLinkSetCommandH\x00R\x10ipLinkSetCommand\x12T\n" +
	"\x13ip_addr_set_command\x18\x03 \x01(\v2#.SpaceX.API.Device.IpAddrSetCommandH\x00R\x10ipAddrSetCommandB\t\n" +
	"\acommand\"<\n" +
	"\x1eWifiFactoryTestCommandResponse\x12\x1a\n" +
	"\bresponse\x18\x01 \x01(\tR\bresponse\"\xc9\x01\n" +
	"\rIwprivCommand\x12\x14\n" +
	"\x05iface\x18\x01 \x01(\tR\x05iface\x12\x10\n" +
	"\x03arg\x18\x02 \x01(\tR\x03arg\x12<\n" +
	"\x05ioctl\x18\x03 \x01(\x0e2&.SpaceX.API.Device.IwprivCommand.IoctlR\x05ioctl\"R\n" +
	"\x05Ioctl\x12\r\n" +
	"\tIOCTL_SET\x10\x00\x12\r\n" +
	"\tIOCTL_E2P\x10\x01\x12\r\n" +
	"\tIOCTL_MAC\x10\x03\x12\x1c\n" +
	"\x18IOCTL_SX_ALLOW_5GHZ_HIGH\x10\x04\"8\n" +
	"\x10IpLinkSetCommand\x12\x14\n" +
	"\x05iface\x18\x01 \x01(\tR\x05iface\x12\x0e\n" +
	"\x02up\x18\x02 \x01(\bR\x02up\"N\n" +
	"\x10IpAddrSetCommand\x12\x14\n" +
	"\x05iface\x18\x01 \x01(\tR\x05iface\x12\x10\n" +
	"\x03add\x18\x02 \x01(\bR\x03add\x12\x12\n" +
	"\x04cidr\x18\x03 \x01(\tR\x04cidr\"5\n" +
	"\x1fWifiStartLocalTelemProxyRequest\x12\x12\n" +
	"\x04port\x18\x01 \x01(\x05R\x04port\"\x1a\n" +
	"\x18WifiBackhaulStatsRequest\"\xf0\x01\n" +
	"\x19WifiBackhaulStatsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05bssid\x18\x02 \x01(\tR\x05bssid\x122\n" +
	"\x05iface\x18\x03 \x01(\x0e2\x1c.SpaceX.API.Device.IfaceTypeR\x05iface\x12\x1e\n" +
	"\n" +
	"preference\x18\x04 \x01(\rR\n" +
	"preference\x12O\n" +
	"\x0esiteSurveyScan\x18\x05 \x03(\v2'.SpaceX.API.Device.WifiSiteSurveyResultR\x0esiteSurveyScan\"8\n" +
	"\x1eWifiToggleUmbilicalModeRequest\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\"V\n" +
	"\x12WifiUpdateResponse\x12@\n" +
	"\x05stats\x18\x01 \x01(\v2*.SpaceX.API.Device.WifiSoftwareUpdateStatsR\x05stats2\\\n" +
	"\x04Mesh\x12T\n" +
	"\n" +
	"MeshStream\x12\x1f.SpaceX.API.Device.ToController\x1a!.SpaceX.API.Device.FromController(\x010\x01B\x17Z\x15spacex.com/api/deviceb\x06proto3"

var (
	file_spacex_api_device_wifi_proto_rawDescOnce sync.Once
	file_spacex_api_device_wifi_proto_rawDescData []byte
)

func file_spacex_api_device_wifi_proto_rawDescGZIP() []byte {
	file_spacex_api_device_wifi_proto_rawDescOnce.Do(func() {
		file_spacex_api_device_wifi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spacex_api_device_wifi_proto_rawDesc), len(file_spacex_api_device_wifi_proto_rawDesc)))
	})
	return file_spacex_api_device_wifi_proto_rawDescData
}

var file_spacex_api_device_wifi_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_spacex_api_device_wifi_proto_msgTypes = make([]protoimpl.MessageInfo, 86)
var file_spacex_api_device_wifi_proto_goTypes = []any{
	(WifiGetClientHistoryResponse_WifiLimitedReason)(0), // 0: SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason
	(WifiClient_Interface)(0),                           // 1: SpaceX.API.Device.WifiClient.Interface
	(WifiClient_Role)(0),                                // 2: SpaceX.API.Device.WifiClient.Role
	(WifiNetwork_Band)(0),                               // 3: SpaceX.API.Device.WifiNetwork.Band
	(IwprivCommand_Ioctl)(0),                            // 4: SpaceX.API.Device.IwprivCommand.Ioctl
	(*WifiClients)(nil),                                 // 5: SpaceX.API.Device.WifiClients
	(*ToController)(nil),                                // 6: SpaceX.API.Device.ToController
	(*WifiMeshJoin)(nil),                                // 7: SpaceX.API.Device.WifiMeshJoin
	(*WifiMeshStatus)(nil),                              // 8: SpaceX.API.Device.WifiMeshStatus
	(*MeshSpeedtestRequest)(nil),                        // 9: SpaceX.API.Device.MeshSpeedtestRequest
	(*MeshSpeedtest)(nil),                               // 10: SpaceX.API.Device.MeshSpeedtest
	(*WifiSiteSurveyResult)(nil),                        // 11: SpaceX.API.Device.WifiSiteSurveyResult
	(*WifiGlobalMeshStatus)(nil),                        // 12: SpaceX.API.Device.WifiGlobalMeshStatus
	(*BackhaulRequest)(nil),                             // 13: SpaceX.API.Device.BackhaulRequest
	(*FromController)(nil),                              // 14: SpaceX.API.Device.FromController
	(*SteerClientRequest)(nil),                          // 15: SpaceX.API.Device.SteerClientRequest
	(*WifiBtmRequest)(nil),                              // 16: SpaceX.API.Device.WifiBtmRequest
	(*WifiSelfTest)(nil),                                // 17: SpaceX.API.Device.WifiSelfTest
	(*WifiSetConfigRequest)(nil),                        // 18: SpaceX.API.Device.WifiSetConfigRequest
	(*WifiSetConfigResponse)(nil),                       // 19: SpaceX.API.Device.WifiSetConfigResponse
	(*WifiGetConfigRequest)(nil),                        // 20: SpaceX.API.Device.WifiGetConfigRequest
	(*WifiGetConfigResponse)(nil),                       // 21: SpaceX.API.Device.WifiGetConfigResponse
	(*WifiSetMeshDeviceTrustRequest)(nil),               // 22: SpaceX.API.Device.WifiSetMeshDeviceTrustRequest
	(*WifiSetMeshDeviceTrustResponse)(nil),              // 23: SpaceX.API.Device.WifiSetMeshDeviceTrustResponse
	(*WifiSetMeshConfigRequest)(nil),                    // 24: SpaceX.API.Device.WifiSetMeshConfigRequest
	(*WifiSetMeshConfigResponse)(nil),                   // 25: SpaceX.API.Device.WifiSetMeshConfigResponse
	(*WifiGetClientsRequest)(nil),                       // 26: SpaceX.API.Device.WifiGetClientsRequest
	(*WifiGetClientsResponse)(nil),                      // 27: SpaceX.API.Device.WifiGetClientsResponse
	(*WifiGetClientHistoryRequest)(nil),                 // 28: SpaceX.API.Device.WifiGetClientHistoryRequest
	(*WifiGetClientHistoryResponse)(nil),                // 29: SpaceX.API.Device.WifiGetClientHistoryResponse
	(*WifiSetAviationConformedRequest)(nil),             // 30: SpaceX.API.Device.WifiSetAviationConformedRequest
	(*WifiGetHistoryResponse)(nil),                      // 31: SpaceX.API.Device.WifiGetHistoryResponse
	(*WifiNewClientConnectedEvent)(nil),                 // 32: SpaceX.API.Device.WifiNewClientConnectedEvent
	(*WifiClient)(nil),                                  // 33: SpaceX.API.Device.WifiClient
	(*WifiSetupRequest)(nil),                            // 34: SpaceX.API.Device.WifiSetupRequest
	(*WifiSetupResponse)(nil),                           // 35: SpaceX.API.Device.WifiSetupResponse
	(*WifiBandStatus)(nil),                              // 36: SpaceX.API.Device.WifiBandStatus
	(*WifiAlerts)(nil),                                  // 37: SpaceX.API.Device.WifiAlerts
	(*WifiGetStatusResponse)(nil),                       // 38: SpaceX.API.Device.WifiGetStatusResponse
	(*WifiAuthenticateRequest)(nil),                     // 39: SpaceX.API.Device.WifiAuthenticateRequest
	(*WifiAuthenticateResponse)(nil),                    // 40: SpaceX.API.Device.WifiAuthenticateResponse
	(*WifiAccountBondingEvent)(nil),                     // 41: SpaceX.API.Device.WifiAccountBondingEvent
	(*WifiNewPeerEvent)(nil),                            // 42: SpaceX.API.Device.WifiNewPeerEvent
	(*PingMetrics)(nil),                                 // 43: SpaceX.API.Device.PingMetrics
	(*WifiGetPingMetricsRequest)(nil),                   // 44: SpaceX.API.Device.WifiGetPingMetricsRequest
	(*WifiGetPingMetricsResponse)(nil),                  // 45: SpaceX.API.Device.WifiGetPingMetricsResponse
	(*WifiNetwork)(nil),                                 // 46: SpaceX.API.Device.WifiNetwork
	(*WifiPersistentStats)(nil),                         // 47: SpaceX.API.Device.WifiPersistentStats
	(*WifiGetPersistentStatsResponse)(nil),              // 48: SpaceX.API.Device.WifiGetPersistentStatsResponse
	(*RadioStats)(nil),                                  // 49: SpaceX.API.Device.RadioStats
	(*StarlinkRoutersHourlyMetricsV2)(nil),              // 50: SpaceX.API.Device.starlink_routers_hourly_metrics_v2
	(*StarlinkRouterAlerts)(nil),                        // 51: SpaceX.API.Device.starlink_router_alerts
	(*StarlinkRouterClientSpeedtests)(nil),              // 52: SpaceX.API.Device.starlink_router_client_speedtests
	(*StarlinkRouterClients)(nil),                       // 53: SpaceX.API.Device.StarlinkRouterClients
	(*StarlinkRouterClientTesterRun)(nil),               // 54: SpaceX.API.Device.StarlinkRouterClientTesterRun
	(*WifiSetClientGivenNameRequest)(nil),               // 55: SpaceX.API.Device.WifiSetClientGivenNameRequest
	(*WifiSelfTestRequest)(nil),                         // 56: SpaceX.API.Device.WifiSelfTestRequest
	(*WifiSelfTestResponse)(nil),                        // 57: SpaceX.API.Device.WifiSelfTestResponse
	(*WifiRunSelfTestRequest)(nil),                      // 58: SpaceX.API.Device.WifiRunSelfTestRequest
	(*WifiRfTestRequest)(nil),                           // 59: SpaceX.API.Device.WifiRfTestRequest
	(*WifiRfTestResponse)(nil),                          // 60: SpaceX.API.Device.WifiRfTestResponse
	(*WifiGetFirewallRequest)(nil),                      // 61: SpaceX.API.Device.WifiGetFirewallRequest
	(*WifiGetFirewallResponse)(nil),                     // 62: SpaceX.API.Device.WifiGetFirewallResponse
	(*WifiTogglePoeNegotiationRequest)(nil),             // 63: SpaceX.API.Device.WifiTogglePoeNegotiationRequest
	(*WifiCalibrationModeRequest)(nil),                  // 64: SpaceX.API.Device.WifiCalibrationModeRequest
	(*StarlinkRouterHourlyMetricsV2)(nil),               // 65: SpaceX.API.Device.starlink_router_hourly_metrics_v2
	(*WifiGuestInfoRequest)(nil),                        // 66: SpaceX.API.Device.WifiGuestInfoRequest
	(*WifiGuestInfoResponse)(nil),                       // 67: SpaceX.API.Device.WifiGuestInfoResponse
	(*WifiFactoryTestCommandRequest)(nil),               // 68: SpaceX.API.Device.WifiFactoryTestCommandRequest
	(*WifiFactoryTestCommandResponse)(nil),              // 69: SpaceX.API.Device.WifiFactoryTestCommandResponse
	(*IwprivCommand)(nil),                               // 70: SpaceX.API.Device.IwprivCommand
	(*IpLinkSetCommand)(nil),                            // 71: SpaceX.API.Device.IpLinkSetCommand
	(*IpAddrSetCommand)(nil),                            // 72: SpaceX.API.Device.IpAddrSetCommand
	(*WifiStartLocalTelemProxyRequest)(nil),             // 73: SpaceX.API.Device.WifiStartLocalTelemProxyRequest
	(*WifiBackhaulStatsRequest)(nil),                    // 74: SpaceX.API.Device.WifiBackhaulStatsRequest
	(*WifiBackhaulStatsResponse)(nil),                   // 75: SpaceX.API.Device.WifiBackhaulStatsResponse
	(*WifiToggleUmbilicalModeRequest)(nil),              // 76: SpaceX.API.Device.WifiToggleUmbilicalModeRequest
	(*WifiUpdateResponse)(nil),                          // 77: SpaceX.API.Device.WifiUpdateResponse
	(*SteerClientRequest_SteerTarget)(nil),              // 78: SpaceX.API.Device.SteerClientRequest.SteerTarget
	(*WifiBtmRequest_NeighborReport)(nil),               // 79: SpaceX.API.Device.WifiBtmRequest.NeighborReport
	(*WifiSelfTest_TestResult)(nil),                     // 80: SpaceX.API.Device.WifiSelfTest.TestResult
	nil,                                                 // 81: SpaceX.API.Device.WifiGetHistoryResponse.DnsResolverDropRateEntry
	(*WifiGetHistoryResponse_DnsResolverHistory)(nil),   // 82: SpaceX.API.Device.WifiGetHistoryResponse.DnsResolverHistory
	(*WifiClient_RxStats)(nil),                          // 83: SpaceX.API.Device.WifiClient.RxStats
	(*WifiClient_TxStats)(nil),                          // 84: SpaceX.API.Device.WifiClient.TxStats
	(*WifiClient_PingMetrics)(nil),                      // 85: SpaceX.API.Device.WifiClient.PingMetrics
	(*WifiClient_FqcodelInfo)(nil),                      // 86: SpaceX.API.Device.WifiClient.FqcodelInfo
	(*WifiClient_Alerts)(nil),                           // 87: SpaceX.API.Device.WifiClient.Alerts
	(*WifiPersistentStats_Event)(nil),                   // 88: SpaceX.API.Device.WifiPersistentStats.Event
	(*RadioStats_ThermalStatus)(nil),                    // 89: SpaceX.API.Device.RadioStats.ThermalStatus
	(*RadioStats_AntennaStatus)(nil),                    // 90: SpaceX.API.Device.RadioStats.AntennaStatus
	(*InflatedBasicServiceSet)(nil),                     // 91: SpaceX.API.Device.InflatedBasicServiceSet
	(WifiSecurity)(0),                                   // 92: SpaceX.API.Device.WifiSecurity
	(WifiMode)(0),                                       // 93: SpaceX.API.Device.WifiMode
	(IfaceType)(0),                                      // 94: SpaceX.API.Device.IfaceType
	(*WifiConfig)(nil),                                  // 95: SpaceX.API.Device.WifiConfig
	(MeshAuth)(0),                                       // 96: SpaceX.API.Device.MeshAuth
	(*MeshConfig)(nil),                                  // 97: SpaceX.API.Device.MeshConfig
	(*DeviceInfo)(nil),                                  // 98: SpaceX.API.Device.DeviceInfo
	(*DeviceState)(nil),                                 // 99: SpaceX.API.Device.DeviceState
	(*RadiusStatsMap)(nil),                              // 100: SpaceX.API.Device.RadiusStatsMap
	(*DhcpServer)(nil),                                  // 101: SpaceX.API.Device.DhcpServer
	(*PoeStats)(nil),                                    // 102: SpaceX.API.Device.PoeStats
	(network.UtDisablementCode)(0),                      // 103: SpaceX.API.Satellites.Network.UtDisablementCode
	(*WifiSoftwareUpdateStats)(nil),                     // 104: SpaceX.API.Device.WifiSoftwareUpdateStats
	(*WifiSetupRequirement)(nil),                        // 105: SpaceX.API.Device.WifiSetupRequirement
	(*SignedData)(nil),                                  // 106: SpaceX.API.Device.SignedData
	(*ChallengeResponse)(nil),                           // 107: SpaceX.API.Device.ChallengeResponse
	(WifiConfig_Band)(0),                                // 108: SpaceX.API.Device.WifiConfig.Band
	(*NetworkInterface_RxStats)(nil),                    // 109: SpaceX.API.Device.NetworkInterface.RxStats
	(*NetworkInterface_TxStats)(nil),                    // 110: SpaceX.API.Device.NetworkInterface.TxStats
	(*wrapperspb.StringValue)(nil),                      // 111: google.protobuf.StringValue
	(*wrapperspb.UInt32Value)(nil),                      // 112: google.protobuf.UInt32Value
	(*common.TimestampInfo)(nil),                        // 113: SpaceX.API.Telemetron.Public.Common.TimestampInfo
	(*wrapperspb.BoolValue)(nil),                        // 114: google.protobuf.BoolValue
	(*wrapperspb.FloatValue)(nil),                       // 115: google.protobuf.FloatValue
	(*wrapperspb.Int32Value)(nil),                       // 116: google.protobuf.Int32Value
	(*wrapperspb.Int64Value)(nil),                       // 117: google.protobuf.Int64Value
	(*ClientName)(nil),                                  // 118: SpaceX.API.Device.ClientName
	(*ClientConfig)(nil),                                // 119: SpaceX.API.Device.ClientConfig
}
var file_spacex_api_device_wifi_proto_depIdxs = []int32{
	33,  // 0: SpaceX.API.Device.WifiClients.clients:type_name -> SpaceX.API.Device.WifiClient
	5,   // 1: SpaceX.API.Device.ToController.clients:type_name -> SpaceX.API.Device.WifiClients
	7,   // 2: SpaceX.API.Device.ToController.mesh_join:type_name -> SpaceX.API.Device.WifiMeshJoin
	8,   // 3: SpaceX.API.Device.ToController.status:type_name -> SpaceX.API.Device.WifiMeshStatus
	10,  // 4: SpaceX.API.Device.ToController.speedtest:type_name -> SpaceX.API.Device.MeshSpeedtest
	11,  // 5: SpaceX.API.Device.WifiMeshJoin.siteSurveyScan:type_name -> SpaceX.API.Device.WifiSiteSurveyResult
	33,  // 6: SpaceX.API.Device.WifiMeshStatus.clients:type_name -> SpaceX.API.Device.WifiClient
	91,  // 7: SpaceX.API.Device.WifiMeshStatus.bss_list:type_name -> SpaceX.API.Device.InflatedBasicServiceSet
	92,  // 8: SpaceX.API.Device.WifiSiteSurveyResult.security:type_name -> SpaceX.API.Device.WifiSecurity
	93,  // 9: SpaceX.API.Device.WifiSiteSurveyResult.wireless_mode:type_name -> SpaceX.API.Device.WifiMode
	94,  // 10: SpaceX.API.Device.WifiSiteSurveyResult.iface:type_name -> SpaceX.API.Device.IfaceType
	91,  // 11: SpaceX.API.Device.WifiGlobalMeshStatus.bss_list:type_name -> SpaceX.API.Device.InflatedBasicServiceSet
	95,  // 12: SpaceX.API.Device.BackhaulRequest.golden_bss:type_name -> SpaceX.API.Device.WifiConfig
	95,  // 13: SpaceX.API.Device.FromController.wifi_config:type_name -> SpaceX.API.Device.WifiConfig
	15,  // 14: SpaceX.API.Device.FromController.steer_client_request:type_name -> SpaceX.API.Device.SteerClientRequest
	12,  // 15: SpaceX.API.Device.FromController.status:type_name -> SpaceX.API.Device.WifiGlobalMeshStatus
	13,  // 16: SpaceX.API.Device.FromController.backhaul_request:type_name -> SpaceX.API.Device.BackhaulRequest
	9,   // 17: SpaceX.API.Device.FromController.start_speedtest:type_name -> SpaceX.API.Device.MeshSpeedtestRequest
	16,  // 18: SpaceX.API.Device.FromController.wifi_btm_request:type_name -> SpaceX.API.Device.WifiBtmRequest
	78,  // 19: SpaceX.API.Device.SteerClientRequest.targets:type_name -> SpaceX.API.Device.SteerClientRequest.SteerTarget
	79,  // 20: SpaceX.API.Device.WifiBtmRequest.neighbor_report:type_name -> SpaceX.API.Device.WifiBtmRequest.NeighborReport
	80,  // 21: SpaceX.API.Device.WifiSelfTest.fused:type_name -> SpaceX.API.Device.WifiSelfTest.TestResult
	80,  // 22: SpaceX.API.Device.WifiSelfTest.eth_phys:type_name -> SpaceX.API.Device.WifiSelfTest.TestResult
	80,  // 23: SpaceX.API.Device.WifiSelfTest.pcis:type_name -> SpaceX.API.Device.WifiSelfTest.TestResult
	80,  // 24: SpaceX.API.Device.WifiSelfTest.bl2_prod:type_name -> SpaceX.API.Device.WifiSelfTest.TestResult
	95,  // 25: SpaceX.API.Device.WifiSetConfigRequest.wifi_config:type_name -> SpaceX.API.Device.WifiConfig
	95,  // 26: SpaceX.API.Device.WifiSetConfigResponse.updated_wifi_config:type_name -> SpaceX.API.Device.WifiConfig
	95,  // 27: SpaceX.API.Device.WifiGetConfigResponse.wifi_config:type_name -> SpaceX.API.Device.WifiConfig
	96,  // 28: SpaceX.API.Device.WifiSetMeshDeviceTrustRequest.auth:type_name -> SpaceX.API.Device.MeshAuth
	97,  // 29: SpaceX.API.Device.WifiSetMeshConfigRequest.mesh_config:type_name -> SpaceX.API.Device.MeshConfig
	33,  // 30: SpaceX.API.Device.WifiGetClientsResponse.clients:type_name -> SpaceX.API.Device.WifiClient
	0,   // 31: SpaceX.API.Device.WifiGetClientHistoryResponse.throughput_limited:type_name -> SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason
	81,  // 32: SpaceX.API.Device.WifiGetHistoryResponse.dns_resolver_drop_rate:type_name -> SpaceX.API.Device.WifiGetHistoryResponse.DnsResolverDropRateEntry
	33,  // 33: SpaceX.API.Device.WifiNewClientConnectedEvent.client:type_name -> SpaceX.API.Device.WifiClient
	83,  // 34: SpaceX.API.Device.WifiClient.rx_stats:type_name -> SpaceX.API.Device.WifiClient.RxStats
	84,  // 35: SpaceX.API.Device.WifiClient.tx_stats:type_name -> SpaceX.API.Device.WifiClient.TxStats
	1,   // 36: SpaceX.API.Device.WifiClient.iface:type_name -> SpaceX.API.Device.WifiClient.Interface
	2,   // 37: SpaceX.API.Device.WifiClient.role:type_name -> SpaceX.API.Device.WifiClient.Role
	85,  // 38: SpaceX.API.Device.WifiClient.ping_metrics:type_name -> SpaceX.API.Device.WifiClient.PingMetrics
	86,  // 39: SpaceX.API.Device.WifiClient.fqcodel_info:type_name -> SpaceX.API.Device.WifiClient.FqcodelInfo
	87,  // 40: SpaceX.API.Device.WifiClient.alerts:type_name -> SpaceX.API.Device.WifiClient.Alerts
	98,  // 41: SpaceX.API.Device.WifiGetStatusResponse.device_info:type_name -> SpaceX.API.Device.DeviceInfo
	99,  // 42: SpaceX.API.Device.WifiGetStatusResponse.device_state:type_name -> SpaceX.API.Device.DeviceState
	36,  // 43: SpaceX.API.Device.WifiGetStatusResponse.rf_2ghz_status:type_name -> SpaceX.API.Device.WifiBandStatus
	36,  // 44: SpaceX.API.Device.WifiGetStatusResponse.rf_5ghz_status:type_name -> SpaceX.API.Device.WifiBandStatus
	37,  // 45: SpaceX.API.Device.WifiGetStatusResponse.alerts:type_name -> SpaceX.API.Device.WifiAlerts
	95,  // 46: SpaceX.API.Device.WifiGetStatusResponse.config:type_name -> SpaceX.API.Device.WifiConfig
	33,  // 47: SpaceX.API.Device.WifiGetStatusResponse.clients:type_name -> SpaceX.API.Device.WifiClient
	100, // 48: SpaceX.API.Device.WifiGetStatusResponse.radius_stats:type_name -> SpaceX.API.Device.RadiusStatsMap
	101, // 49: SpaceX.API.Device.WifiGetStatusResponse.dhcp_servers:type_name -> SpaceX.API.Device.DhcpServer
	102, // 50: SpaceX.API.Device.WifiGetStatusResponse.poe_stats:type_name -> SpaceX.API.Device.PoeStats
	103, // 51: SpaceX.API.Device.WifiGetStatusResponse.dish_disablement_code:type_name -> SpaceX.API.Satellites.Network.UtDisablementCode
	104, // 52: SpaceX.API.Device.WifiGetStatusResponse.software_update_stats:type_name -> SpaceX.API.Device.WifiSoftwareUpdateStats
	105, // 53: SpaceX.API.Device.WifiGetStatusResponse.setup_requirement:type_name -> SpaceX.API.Device.WifiSetupRequirement
	106, // 54: SpaceX.API.Device.WifiAuthenticateRequest.challenge:type_name -> SpaceX.API.Device.SignedData
	107, // 55: SpaceX.API.Device.WifiAuthenticateResponse.wifi:type_name -> SpaceX.API.Device.ChallengeResponse
	107, // 56: SpaceX.API.Device.WifiAuthenticateResponse.dish:type_name -> SpaceX.API.Device.ChallengeResponse
	43,  // 57: SpaceX.API.Device.WifiGetPingMetricsResponse.internet:type_name -> SpaceX.API.Device.PingMetrics
	3,   // 58: SpaceX.API.Device.WifiNetwork.band:type_name -> SpaceX.API.Device.WifiNetwork.Band
	88,  // 59: SpaceX.API.Device.WifiPersistentStats.factory_reset_button:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	88,  // 60: SpaceX.API.Device.WifiPersistentStats.factory_reset_plug_unplug:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	88,  // 61: SpaceX.API.Device.WifiPersistentStats.factory_reset_command:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	88,  // 62: SpaceX.API.Device.WifiPersistentStats.factory_reset_failed_load_wifi_config:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	88,  // 63: SpaceX.API.Device.WifiPersistentStats.reboot_from_software_update:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	47,  // 64: SpaceX.API.Device.WifiGetPersistentStatsResponse.stats:type_name -> SpaceX.API.Device.WifiPersistentStats
	108, // 65: SpaceX.API.Device.RadioStats.band:type_name -> SpaceX.API.Device.WifiConfig.Band
	109, // 66: SpaceX.API.Device.RadioStats.rx_stats:type_name -> SpaceX.API.Device.NetworkInterface.RxStats
	110, // 67: SpaceX.API.Device.RadioStats.tx_stats:type_name -> SpaceX.API.Device.NetworkInterface.TxStats
	89,  // 68: SpaceX.API.Device.RadioStats.thermal_status:type_name -> SpaceX.API.Device.RadioStats.ThermalStatus
	90,  // 69: SpaceX.API.Device.RadioStats.antenna_status:type_name -> SpaceX.API.Device.RadioStats.AntennaStatus
	111, // 70: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.id:type_name -> google.protobuf.StringValue
	111, // 71: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.timestamp_date:type_name -> google.protobuf.StringValue
	112, // 72: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.timestamp_hour:type_name -> google.protobuf.UInt32Value
	113, // 73: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.timestamp:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	112, // 74: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_hw_gen:type_name -> google.protobuf.UInt32Value
	111, // 75: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_sw:type_name -> google.protobuf.StringValue
	111, // 76: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_country:type_name -> google.protobuf.StringValue
	114, // 77: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_is_dev:type_name -> google.protobuf.BoolValue
	112, // 78: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_alloc_fds:type_name -> google.protobuf.UInt32Value
	115, // 79: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_cpu_usage:type_name -> google.protobuf.FloatValue
	115, // 80: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_mem_free_kb:type_name -> google.protobuf.FloatValue
	116, // 81: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_bootcount:type_name -> google.protobuf.Int32Value
	114, // 82: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_partitions_equal:type_name -> google.protobuf.BoolValue
	112, // 83: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_uptime_seconds:type_name -> google.protobuf.UInt32Value
	116, // 84: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_anti_rollback_version:type_name -> google.protobuf.Int32Value
	114, // 85: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_is_witl:type_name -> google.protobuf.BoolValue
	114, // 86: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_is_aviation_conformed:type_name -> google.protobuf.BoolValue
	112, // 87: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_ubi_max_ec:type_name -> google.protobuf.UInt32Value
	112, // 88: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_ubi_bad_peb:type_name -> google.protobuf.UInt32Value
	112, // 89: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.sys_board_rev:type_name -> google.protobuf.UInt32Value
	112, // 90: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_channel:type_name -> google.protobuf.UInt32Value
	115, // 91: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_antenna1_rssi:type_name -> google.protobuf.FloatValue
	115, // 92: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_antenna2_rssi:type_name -> google.protobuf.FloatValue
	115, // 93: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_antenna3_rssi:type_name -> google.protobuf.FloatValue
	115, // 94: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_antenna4_rssi:type_name -> google.protobuf.FloatValue
	115, // 95: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_antenna1_tssi:type_name -> google.protobuf.FloatValue
	115, // 96: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_antenna2_tssi:type_name -> google.protobuf.FloatValue
	115, // 97: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_antenna3_tssi:type_name -> google.protobuf.FloatValue
	115, // 98: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_antenna4_tssi:type_name -> google.protobuf.FloatValue
	112, // 99: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_iface_count:type_name -> google.protobuf.UInt32Value
	115, // 100: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_chan_busy_fraction:type_name -> google.protobuf.FloatValue
	115, // 101: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_edcca_fraction:type_name -> google.protobuf.FloatValue
	115, // 102: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_overlapping_bss_fraction:type_name -> google.protobuf.FloatValue
	117, // 103: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_rx_bytes:type_name -> google.protobuf.Int64Value
	117, // 104: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_rx_packets:type_name -> google.protobuf.Int64Value
	117, // 105: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_rx_errors:type_name -> google.protobuf.Int64Value
	117, // 106: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_rx_frame_errors:type_name -> google.protobuf.Int64Value
	115, // 107: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_rx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 108: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_rx_airtime_fraction:type_name -> google.protobuf.FloatValue
	117, // 109: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_tx_bytes:type_name -> google.protobuf.Int64Value
	117, // 110: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_tx_packets:type_name -> google.protobuf.Int64Value
	117, // 111: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_tx_errors:type_name -> google.protobuf.Int64Value
	115, // 112: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_tx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 113: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_tx_airtime_fraction:type_name -> google.protobuf.FloatValue
	112, // 114: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_channel:type_name -> google.protobuf.UInt32Value
	115, // 115: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_antenna1_rssi:type_name -> google.protobuf.FloatValue
	115, // 116: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_antenna2_rssi:type_name -> google.protobuf.FloatValue
	115, // 117: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_antenna3_rssi:type_name -> google.protobuf.FloatValue
	115, // 118: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_antenna4_rssi:type_name -> google.protobuf.FloatValue
	115, // 119: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_antenna1_tssi:type_name -> google.protobuf.FloatValue
	115, // 120: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_antenna2_tssi:type_name -> google.protobuf.FloatValue
	115, // 121: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_antenna3_tssi:type_name -> google.protobuf.FloatValue
	115, // 122: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_antenna4_tssi:type_name -> google.protobuf.FloatValue
	112, // 123: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_iface_count:type_name -> google.protobuf.UInt32Value
	115, // 124: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_chan_busy_fraction:type_name -> google.protobuf.FloatValue
	115, // 125: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_edcca_fraction:type_name -> google.protobuf.FloatValue
	115, // 126: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_overlapping_bss_fraction:type_name -> google.protobuf.FloatValue
	117, // 127: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_rx_bytes:type_name -> google.protobuf.Int64Value
	117, // 128: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_rx_packets:type_name -> google.protobuf.Int64Value
	117, // 129: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_rx_errors:type_name -> google.protobuf.Int64Value
	117, // 130: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_rx_frame_errors:type_name -> google.protobuf.Int64Value
	115, // 131: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_rx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 132: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_rx_airtime_fraction:type_name -> google.protobuf.FloatValue
	117, // 133: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_tx_bytes:type_name -> google.protobuf.Int64Value
	117, // 134: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_tx_packets:type_name -> google.protobuf.Int64Value
	117, // 135: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_tx_errors:type_name -> google.protobuf.Int64Value
	115, // 136: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_tx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 137: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_tx_airtime_fraction:type_name -> google.protobuf.FloatValue
	112, // 138: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_channel:type_name -> google.protobuf.UInt32Value
	115, // 139: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_antenna1_rssi:type_name -> google.protobuf.FloatValue
	115, // 140: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_antenna2_rssi:type_name -> google.protobuf.FloatValue
	115, // 141: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_antenna3_rssi:type_name -> google.protobuf.FloatValue
	115, // 142: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_antenna4_rssi:type_name -> google.protobuf.FloatValue
	115, // 143: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_antenna1_tssi:type_name -> google.protobuf.FloatValue
	115, // 144: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_antenna2_tssi:type_name -> google.protobuf.FloatValue
	115, // 145: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_antenna3_tssi:type_name -> google.protobuf.FloatValue
	115, // 146: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_antenna4_tssi:type_name -> google.protobuf.FloatValue
	112, // 147: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_iface_count:type_name -> google.protobuf.UInt32Value
	115, // 148: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_chan_busy_fraction:type_name -> google.protobuf.FloatValue
	115, // 149: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_edcca_fraction:type_name -> google.protobuf.FloatValue
	115, // 150: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_overlapping_bss_fraction:type_name -> google.protobuf.FloatValue
	117, // 151: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_rx_bytes:type_name -> google.protobuf.Int64Value
	117, // 152: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_rx_packets:type_name -> google.protobuf.Int64Value
	117, // 153: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_rx_errors:type_name -> google.protobuf.Int64Value
	117, // 154: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_rx_frame_errors:type_name -> google.protobuf.Int64Value
	115, // 155: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_rx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 156: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_rx_airtime_fraction:type_name -> google.protobuf.FloatValue
	117, // 157: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_tx_bytes:type_name -> google.protobuf.Int64Value
	117, // 158: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_tx_packets:type_name -> google.protobuf.Int64Value
	117, // 159: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_tx_errors:type_name -> google.protobuf.Int64Value
	115, // 160: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_tx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 161: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_tx_airtime_fraction:type_name -> google.protobuf.FloatValue
	115, // 162: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_thermal_temp:type_name -> google.protobuf.FloatValue
	115, // 163: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_thermal_temp:type_name -> google.protobuf.FloatValue
	115, // 164: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_thermal_temp:type_name -> google.protobuf.FloatValue
	115, // 165: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_thermal_duty_cycle:type_name -> google.protobuf.FloatValue
	115, // 166: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_thermal_duty_cycle:type_name -> google.protobuf.FloatValue
	115, // 167: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_thermal_duty_cycle:type_name -> google.protobuf.FloatValue
	112, // 168: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_2ghz_thermal_throttled_seconds:type_name -> google.protobuf.UInt32Value
	112, // 169: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_thermal_throttled_seconds:type_name -> google.protobuf.UInt32Value
	112, // 170: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.radios_5ghz_high_thermal_throttled_seconds:type_name -> google.protobuf.UInt32Value
	115, // 171: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.board_temp:type_name -> google.protobuf.FloatValue
	115, // 172: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.poe_mcu_die_temp:type_name -> google.protobuf.FloatValue
	115, // 173: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.poe_percent_water_detect_avg:type_name -> google.protobuf.FloatValue
	117, // 174: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan_eth_rx_bytes:type_name -> google.protobuf.Int64Value
	117, // 175: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan_eth_rx_packets:type_name -> google.protobuf.Int64Value
	117, // 176: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan_eth_rx_errors:type_name -> google.protobuf.Int64Value
	117, // 177: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan_eth_rx_frame_errors:type_name -> google.protobuf.Int64Value
	117, // 178: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan_eth_tx_bytes:type_name -> google.protobuf.Int64Value
	117, // 179: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan_eth_tx_packets:type_name -> google.protobuf.Int64Value
	117, // 180: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan_eth_tx_errors:type_name -> google.protobuf.Int64Value
	117, // 181: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan1_eth_rx_bytes:type_name -> google.protobuf.Int64Value
	117, // 182: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan1_eth_rx_packets:type_name -> google.protobuf.Int64Value
	117, // 183: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan1_eth_rx_errors:type_name -> google.protobuf.Int64Value
	117, // 184: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan1_eth_rx_frame_errors:type_name -> google.protobuf.Int64Value
	117, // 185: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan1_eth_tx_bytes:type_name -> google.protobuf.Int64Value
	117, // 186: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan1_eth_tx_packets:type_name -> google.protobuf.Int64Value
	117, // 187: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_lan1_eth_tx_errors:type_name -> google.protobuf.Int64Value
	117, // 188: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_wan_eth_rx_bytes:type_name -> google.protobuf.Int64Value
	117, // 189: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_wan_eth_rx_packets:type_name -> google.protobuf.Int64Value
	117, // 190: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_wan_eth_rx_errors:type_name -> google.protobuf.Int64Value
	117, // 191: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_wan_eth_rx_frame_errors:type_name -> google.protobuf.Int64Value
	117, // 192: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_wan_eth_tx_bytes:type_name -> google.protobuf.Int64Value
	117, // 193: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_wan_eth_tx_packets:type_name -> google.protobuf.Int64Value
	117, // 194: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ifaces_wan_eth_tx_errors:type_name -> google.protobuf.Int64Value
	112, // 195: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients:type_name -> google.protobuf.UInt32Value
	112, // 196: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_2ghz:type_name -> google.protobuf.UInt32Value
	112, // 197: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_5ghz:type_name -> google.protobuf.UInt32Value
	112, // 198: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_5ghz_high:type_name -> google.protobuf.UInt32Value
	112, // 199: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_eth:type_name -> google.protobuf.UInt32Value
	112, // 200: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_5ghz_rx_bandwidth_20mhz:type_name -> google.protobuf.UInt32Value
	112, // 201: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_5ghz_rx_bandwidth_40mhz:type_name -> google.protobuf.UInt32Value
	112, // 202: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_5ghz_rx_bandwidth_80mhz:type_name -> google.protobuf.UInt32Value
	112, // 203: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_repeater:type_name -> google.protobuf.UInt32Value
	112, // 204: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_repeater_2ghz:type_name -> google.protobuf.UInt32Value
	112, // 205: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_repeater_5ghz:type_name -> google.protobuf.UInt32Value
	112, // 206: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_repeater_5ghz_high:type_name -> google.protobuf.UInt32Value
	112, // 207: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.clients_repeater_eth:type_name -> google.protobuf.UInt32Value
	112, // 208: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.mesh_hops:type_name -> google.protobuf.UInt32Value
	115, // 209: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.mesh_one_hop_rssi_avg_2ghz:type_name -> google.protobuf.FloatValue
	115, // 210: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.mesh_one_hop_rssi_avg_5ghz:type_name -> google.protobuf.FloatValue
	115, // 211: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.mesh_one_hop_rssi_avg_5ghz_high:type_name -> google.protobuf.FloatValue
	115, // 212: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.mesh_two_hop_rssi_avg_2ghz:type_name -> google.protobuf.FloatValue
	115, // 213: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.mesh_two_hop_rssi_avg_5ghz:type_name -> google.protobuf.FloatValue
	115, // 214: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.mesh_two_hop_rssi_avg_5ghz_high:type_name -> google.protobuf.FloatValue
	115, // 215: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_tx_rate_mbps_min:type_name -> google.protobuf.FloatValue
	115, // 216: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_rx_rate_mbps_min:type_name -> google.protobuf.FloatValue
	115, // 217: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_tx_rate_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 218: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_rx_rate_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 219: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_seconds_since_2s_outage_min:type_name -> google.protobuf.FloatValue
	115, // 220: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_seconds_since_5s_outage_min:type_name -> google.protobuf.FloatValue
	115, // 221: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_seconds_since_2s_outage_avg:type_name -> google.protobuf.FloatValue
	115, // 222: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_seconds_since_5s_outage_avg:type_name -> google.protobuf.FloatValue
	115, // 223: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_latency_ms_1h_max:type_name -> google.protobuf.FloatValue
	115, // 224: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.repeater_latency_ms_1h_avg:type_name -> google.protobuf.FloatValue
	112, // 225: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.mesh_topology_change_count_1d:type_name -> google.protobuf.UInt32Value
	115, // 226: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_seconds_since_last_1s_outage:type_name -> google.protobuf.FloatValue
	115, // 227: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_seconds_since_last_2s_outage:type_name -> google.protobuf.FloatValue
	115, // 228: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_seconds_since_last_5s_outage:type_name -> google.protobuf.FloatValue
	115, // 229: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_seconds_since_last_60s_outage:type_name -> google.protobuf.FloatValue
	115, // 230: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_seconds_since_last_300s_outage:type_name -> google.protobuf.FloatValue
	115, // 231: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_drop_rate:type_name -> google.protobuf.FloatValue
	115, // 232: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_drop_rate_last_1h:type_name -> google.protobuf.FloatValue
	115, // 233: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_latency:type_name -> google.protobuf.FloatValue
	115, // 234: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_latency_last_1h:type_name -> google.protobuf.FloatValue
	115, // 235: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_seconds_since_last_1s_outage:type_name -> google.protobuf.FloatValue
	115, // 236: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_seconds_since_last_2s_outage:type_name -> google.protobuf.FloatValue
	115, // 237: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_seconds_since_last_5s_outage:type_name -> google.protobuf.FloatValue
	115, // 238: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_seconds_since_last_60s_outage:type_name -> google.protobuf.FloatValue
	115, // 239: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_seconds_since_last_300s_outage:type_name -> google.protobuf.FloatValue
	115, // 240: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_drop_rate:type_name -> google.protobuf.FloatValue
	115, // 241: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_drop_rate_last_1h:type_name -> google.protobuf.FloatValue
	115, // 242: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_latency:type_name -> google.protobuf.FloatValue
	115, // 243: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_dish_latency_last_1h:type_name -> google.protobuf.FloatValue
	115, // 244: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_pop_ipv6_drop_rate_last_1h:type_name -> google.protobuf.FloatValue
	115, // 245: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.ping_pop_ipv6_latency_last_1h:type_name -> google.protobuf.FloatValue
	115, // 246: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_router_download_mbps:type_name -> google.protobuf.FloatValue
	115, // 247: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_router_upload_mbps:type_name -> google.protobuf.FloatValue
	115, // 248: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_router_rssi:type_name -> google.protobuf.FloatValue
	115, // 249: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_wifi_download_mbps:type_name -> google.protobuf.FloatValue
	115, // 250: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_wifi_upload_mbps:type_name -> google.protobuf.FloatValue
	115, // 251: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_client_download_mbps:type_name -> google.protobuf.FloatValue
	115, // 252: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_client_upload_mbps:type_name -> google.protobuf.FloatValue
	115, // 253: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_client_rssi:type_name -> google.protobuf.FloatValue
	112, // 254: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_client_iface:type_name -> google.protobuf.UInt32Value
	111, // 255: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_client_oui:type_name -> google.protobuf.StringValue
	112, // 256: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_client_tx_rate:type_name -> google.protobuf.UInt32Value
	112, // 257: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_client_rx_rate:type_name -> google.protobuf.UInt32Value
	112, // 258: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.client_speedtest_client_platform_type:type_name -> google.protobuf.UInt32Value
	115, // 259: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_8_download_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 260: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_8_download_mbps_max:type_name -> google.protobuf.FloatValue
	115, // 261: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_8_upload_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 262: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_8_upload_mbps_max:type_name -> google.protobuf.FloatValue
	115, // 263: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_64_download_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 264: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_64_download_mbps_max:type_name -> google.protobuf.FloatValue
	115, // 265: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_64_upload_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 266: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_64_upload_mbps_max:type_name -> google.protobuf.FloatValue
	115, // 267: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_1_download_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 268: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_1_download_mbps_max:type_name -> google.protobuf.FloatValue
	115, // 269: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_1_upload_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 270: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.speedtest_tcp_1_upload_mbps_max:type_name -> google.protobuf.FloatValue
	112, // 271: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dish_cell_id:type_name -> google.protobuf.UInt32Value
	114, // 272: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_setup_complete:type_name -> google.protobuf.BoolValue
	114, // 273: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_bands_split:type_name -> google.protobuf.BoolValue
	114, // 274: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_is_repeater:type_name -> google.protobuf.BoolValue
	114, // 275: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_open_network:type_name -> google.protobuf.BoolValue
	114, // 276: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_is_aviation:type_name -> google.protobuf.BoolValue
	114, // 277: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_secure_dns:type_name -> google.protobuf.BoolValue
	114, // 278: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_legacy:type_name -> google.protobuf.BoolValue
	114, // 279: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_ap_mode:type_name -> google.protobuf.BoolValue
	114, // 280: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_dfs_enabled:type_name -> google.protobuf.BoolValue
	114, // 281: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_network_name_is_default:type_name -> google.protobuf.BoolValue
	114, // 282: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_remote_ssh_enabled:type_name -> google.protobuf.BoolValue
	114, // 283: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_is_repeater_wired:type_name -> google.protobuf.BoolValue
	114, // 284: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_is_repeater_wireless:type_name -> google.protobuf.BoolValue
	112, // 285: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_block_schedules_set:type_name -> google.protobuf.UInt32Value
	114, // 286: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_custom_nameservers:type_name -> google.protobuf.BoolValue
	114, // 287: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_disable_mesh_onboarding:type_name -> google.protobuf.BoolValue
	114, // 288: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_pin_country_code:type_name -> google.protobuf.BoolValue
	114, // 289: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_disable_update_reboot:type_name -> google.protobuf.BoolValue
	114, // 290: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_https_content_hosting_enabled:type_name -> google.protobuf.BoolValue
	114, // 291: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_only_overflight_blocking_enabled:type_name -> google.protobuf.BoolValue
	114, // 292: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_offline_networks_disablement_enabled:type_name -> google.protobuf.BoolValue
	114, // 293: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_disable_2ghz:type_name -> google.protobuf.BoolValue
	114, // 294: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_disable_5ghz:type_name -> google.protobuf.BoolValue
	114, // 295: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_disable_5ghz_high:type_name -> google.protobuf.BoolValue
	112, // 296: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_channel_2ghz:type_name -> google.protobuf.UInt32Value
	112, // 297: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_channel_5ghz:type_name -> google.protobuf.UInt32Value
	112, // 298: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_channel_5ghz_high:type_name -> google.protobuf.UInt32Value
	112, // 299: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_networks:type_name -> google.protobuf.UInt32Value
	112, // 300: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_networks_guest:type_name -> google.protobuf.UInt32Value
	112, // 301: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_networks_hidden:type_name -> google.protobuf.UInt32Value
	112, // 302: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_networks_client_isolation:type_name -> google.protobuf.UInt32Value
	112, // 303: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.config_networks_bands_split:type_name -> google.protobuf.UInt32Value
	117, // 304: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.wan_traffic_control_cake_bytes:type_name -> google.protobuf.Int64Value
	117, // 305: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.wan_traffic_control_cake_packets:type_name -> google.protobuf.Int64Value
	117, // 306: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.wan_traffic_control_cake_drops:type_name -> google.protobuf.Int64Value
	117, // 307: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.wan_traffic_control_cake_ack_drops:type_name -> google.protobuf.Int64Value
	112, // 308: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.conntrack_entries:type_name -> google.protobuf.UInt32Value
	112, // 309: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dhcp_secs_eq_0:type_name -> google.protobuf.UInt32Value
	112, // 310: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dhcp_secs_gt_0:type_name -> google.protobuf.UInt32Value
	112, // 311: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dhcp_secs_gt_10:type_name -> google.protobuf.UInt32Value
	112, // 312: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dhcp_secs_gt_30:type_name -> google.protobuf.UInt32Value
	112, // 313: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dhcp_secs_gt_60:type_name -> google.protobuf.UInt32Value
	112, // 314: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dns_forwards:type_name -> google.protobuf.UInt32Value
	112, // 315: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dns_forwards_success:type_name -> google.protobuf.UInt32Value
	112, // 316: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dns_forwards_server_failure:type_name -> google.protobuf.UInt32Value
	112, // 317: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dns_forwards_no_server_response:type_name -> google.protobuf.UInt32Value
	112, // 318: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dns_forwards_success_on_default_backup:type_name -> google.protobuf.UInt32Value
	112, // 319: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dns_forwards_dropped:type_name -> google.protobuf.UInt32Value
	112, // 320: SpaceX.API.Device.starlink_routers_hourly_metrics_v2.dns_forwards_with_backup:type_name -> google.protobuf.UInt32Value
	113, // 321: SpaceX.API.Device.starlink_router_alerts.start:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	113, // 322: SpaceX.API.Device.starlink_router_alerts.end:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	113, // 323: SpaceX.API.Device.starlink_router_client_speedtests.data_record:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	111, // 324: SpaceX.API.Device.starlink_router_client_speedtests.speedtest_id:type_name -> google.protobuf.StringValue
	115, // 325: SpaceX.API.Device.starlink_router_client_speedtests.client_rssi:type_name -> google.protobuf.FloatValue
	115, // 326: SpaceX.API.Device.starlink_router_client_speedtests.router_rssi:type_name -> google.protobuf.FloatValue
	112, // 327: SpaceX.API.Device.starlink_router_client_speedtests.client_iface:type_name -> google.protobuf.UInt32Value
	111, // 328: SpaceX.API.Device.starlink_router_client_speedtests.client_oui:type_name -> google.protobuf.StringValue
	112, // 329: SpaceX.API.Device.starlink_router_client_speedtests.client_tx_rate:type_name -> google.protobuf.UInt32Value
	112, // 330: SpaceX.API.Device.starlink_router_client_speedtests.client_rx_rate:type_name -> google.protobuf.UInt32Value
	111, // 331: SpaceX.API.Device.starlink_router_client_speedtests.client_platform_type:type_name -> google.protobuf.StringValue
	111, // 332: SpaceX.API.Device.starlink_router_client_speedtests.client_app_version:type_name -> google.protobuf.StringValue
	112, // 333: SpaceX.API.Device.starlink_router_client_speedtests.client_app_build:type_name -> google.protobuf.UInt32Value
	112, // 334: SpaceX.API.Device.starlink_router_client_speedtests.client_rx_phy_mode:type_name -> google.protobuf.UInt32Value
	112, // 335: SpaceX.API.Device.starlink_router_client_speedtests.client_rx_spatial_streams:type_name -> google.protobuf.UInt32Value
	112, // 336: SpaceX.API.Device.starlink_router_client_speedtests.client_rx_mcs:type_name -> google.protobuf.UInt32Value
	113, // 337: SpaceX.API.Device.starlink_router_client_speedtests.client_download_start_time:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	113, // 338: SpaceX.API.Device.starlink_router_client_speedtests.client_upload_start_time:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	115, // 339: SpaceX.API.Device.starlink_router_client_speedtests.client_download_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 340: SpaceX.API.Device.starlink_router_client_speedtests.client_upload_mbps_avg:type_name -> google.protobuf.FloatValue
	111, // 341: SpaceX.API.Device.starlink_router_client_speedtests.client_target:type_name -> google.protobuf.StringValue
	112, // 342: SpaceX.API.Device.starlink_router_client_speedtests.client_tcp_streams:type_name -> google.protobuf.UInt32Value
	113, // 343: SpaceX.API.Device.starlink_router_client_speedtests.router_download_start_time:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	113, // 344: SpaceX.API.Device.starlink_router_client_speedtests.router_upload_start_time:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	115, // 345: SpaceX.API.Device.starlink_router_client_speedtests.router_download_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 346: SpaceX.API.Device.starlink_router_client_speedtests.router_upload_mbps_avg:type_name -> google.protobuf.FloatValue
	111, // 347: SpaceX.API.Device.starlink_router_client_speedtests.router_target:type_name -> google.protobuf.StringValue
	112, // 348: SpaceX.API.Device.starlink_router_client_speedtests.router_tcp_streams:type_name -> google.protobuf.UInt32Value
	113, // 349: SpaceX.API.Device.starlink_router_client_speedtests.wifi_download_start_time:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	113, // 350: SpaceX.API.Device.starlink_router_client_speedtests.wifi_upload_start_time:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	115, // 351: SpaceX.API.Device.starlink_router_client_speedtests.wifi_download_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 352: SpaceX.API.Device.starlink_router_client_speedtests.wifi_upload_mbps_avg:type_name -> google.protobuf.FloatValue
	113, // 353: SpaceX.API.Device.StarlinkRouterClients.timestamp:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	111, // 354: SpaceX.API.Device.StarlinkRouterClients.router_hw:type_name -> google.protobuf.StringValue
	111, // 355: SpaceX.API.Device.StarlinkRouterClients.router_sw:type_name -> google.protobuf.StringValue
	112, // 356: SpaceX.API.Device.StarlinkRouterClients.router_uptime_s:type_name -> google.protobuf.UInt32Value
	111, // 357: SpaceX.API.Device.StarlinkRouterClients.client_router_id:type_name -> google.protobuf.StringValue
	111, // 358: SpaceX.API.Device.StarlinkRouterClients.client_hw:type_name -> google.protobuf.StringValue
	111, // 359: SpaceX.API.Device.StarlinkRouterClients.client_sw:type_name -> google.protobuf.StringValue
	111, // 360: SpaceX.API.Device.StarlinkRouterClients.oui:type_name -> google.protobuf.StringValue
	111, // 361: SpaceX.API.Device.StarlinkRouterClients.upstream_id:type_name -> google.protobuf.StringValue
	114, // 362: SpaceX.API.Device.StarlinkRouterClients.is_repeater:type_name -> google.protobuf.BoolValue
	112, // 363: SpaceX.API.Device.StarlinkRouterClients.connected_s:type_name -> google.protobuf.UInt32Value
	111, // 364: SpaceX.API.Device.StarlinkRouterClients.interface:type_name -> google.protobuf.StringValue
	112, // 365: SpaceX.API.Device.StarlinkRouterClients.radio_channel:type_name -> google.protobuf.UInt32Value
	115, // 366: SpaceX.API.Device.StarlinkRouterClients.rssi:type_name -> google.protobuf.FloatValue
	112, // 367: SpaceX.API.Device.StarlinkRouterClients.rx_mcs:type_name -> google.protobuf.UInt32Value
	112, // 368: SpaceX.API.Device.StarlinkRouterClients.tx_mcs:type_name -> google.protobuf.UInt32Value
	112, // 369: SpaceX.API.Device.StarlinkRouterClients.rx_rate:type_name -> google.protobuf.UInt32Value
	112, // 370: SpaceX.API.Device.StarlinkRouterClients.tx_rate:type_name -> google.protobuf.UInt32Value
	112, // 371: SpaceX.API.Device.StarlinkRouterClients.rx_bandwidth:type_name -> google.protobuf.UInt32Value
	112, // 372: SpaceX.API.Device.StarlinkRouterClients.rx_spatial_streams:type_name -> google.protobuf.UInt32Value
	112, // 373: SpaceX.API.Device.StarlinkRouterClients.rx_phy_mode:type_name -> google.protobuf.UInt32Value
	112, // 374: SpaceX.API.Device.StarlinkRouterClients.mesh_hops:type_name -> google.protobuf.UInt32Value
	115, // 375: SpaceX.API.Device.StarlinkRouterClients.speedtest_upload_mbps:type_name -> google.protobuf.FloatValue
	115, // 376: SpaceX.API.Device.StarlinkRouterClients.speedtest_download_mbps:type_name -> google.protobuf.FloatValue
	115, // 377: SpaceX.API.Device.StarlinkRouterClients.site_survey_rssi:type_name -> google.protobuf.FloatValue
	115, // 378: SpaceX.API.Device.StarlinkRouterClients.site_survey_est_rx_rate:type_name -> google.protobuf.FloatValue
	112, // 379: SpaceX.API.Device.StarlinkRouterClients.est_controller_throughput_mbps:type_name -> google.protobuf.UInt32Value
	115, // 380: SpaceX.API.Device.StarlinkRouterClients.ping_drop_rate_last_1h:type_name -> google.protobuf.FloatValue
	115, // 381: SpaceX.API.Device.StarlinkRouterClients.ping_latency_last_1h:type_name -> google.protobuf.FloatValue
	111, // 382: SpaceX.API.Device.StarlinkRouterClients.steer_state:type_name -> google.protobuf.StringValue
	114, // 383: SpaceX.API.Device.StarlinkRouterClients.blocked:type_name -> google.protobuf.BoolValue
	113, // 384: SpaceX.API.Device.StarlinkRouterClients.throughput_limited_last_fired:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	114, // 385: SpaceX.API.Device.StarlinkRouterClients.has_dhcp_v4_lease:type_name -> google.protobuf.BoolValue
	111, // 386: SpaceX.API.Device.StarlinkRouterClients.ipv4_address:type_name -> google.protobuf.StringValue
	114, // 387: SpaceX.API.Device.StarlinkRouterClients.has_hostname:type_name -> google.protobuf.BoolValue
	114, // 388: SpaceX.API.Device.StarlinkRouterClients.dhcp_v4_lease_is_active:type_name -> google.protobuf.BoolValue
	114, // 389: SpaceX.API.Device.StarlinkRouterClients.dhcp_v4_lease_was_renewed:type_name -> google.protobuf.BoolValue
	115, // 390: SpaceX.API.Device.StarlinkRouterClients.seconds_until_dhcp_v4_lease_expires:type_name -> google.protobuf.FloatValue
	112, // 391: SpaceX.API.Device.StarlinkRouterClients.dissociations_under_10s:type_name -> google.protobuf.UInt32Value
	112, // 392: SpaceX.API.Device.StarlinkRouterClients.dissociations_under_30s:type_name -> google.protobuf.UInt32Value
	112, // 393: SpaceX.API.Device.StarlinkRouterClients.dissociations_under_60s:type_name -> google.protobuf.UInt32Value
	112, // 394: SpaceX.API.Device.StarlinkRouterClients.dissociations_under_120s:type_name -> google.protobuf.UInt32Value
	115, // 395: SpaceX.API.Device.StarlinkRouterClients.seconds_to_conn_tcp_ipv4:type_name -> google.protobuf.FloatValue
	115, // 396: SpaceX.API.Device.StarlinkRouterClients.seconds_to_conn_tcp_ipv6:type_name -> google.protobuf.FloatValue
	115, // 397: SpaceX.API.Device.StarlinkRouterClients.seconds_to_conn_udp_ipv4:type_name -> google.protobuf.FloatValue
	115, // 398: SpaceX.API.Device.StarlinkRouterClients.seconds_to_conn_udp_ipv6:type_name -> google.protobuf.FloatValue
	112, // 399: SpaceX.API.Device.StarlinkRouterClients.flows_tcp_ipv4:type_name -> google.protobuf.UInt32Value
	112, // 400: SpaceX.API.Device.StarlinkRouterClients.flows_tcp_ipv6:type_name -> google.protobuf.UInt32Value
	112, // 401: SpaceX.API.Device.StarlinkRouterClients.flows_udp_ipv4:type_name -> google.protobuf.UInt32Value
	112, // 402: SpaceX.API.Device.StarlinkRouterClients.flows_udp_ipv6:type_name -> google.protobuf.UInt32Value
	113, // 403: SpaceX.API.Device.StarlinkRouterClientTesterRun.timestamp:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	111, // 404: SpaceX.API.Device.StarlinkRouterClientTesterRun.client_iface_name:type_name -> google.protobuf.StringValue
	111, // 405: SpaceX.API.Device.StarlinkRouterClientTesterRun.target_ssid:type_name -> google.protobuf.StringValue
	114, // 406: SpaceX.API.Device.StarlinkRouterClientTesterRun.target_has_password:type_name -> google.protobuf.BoolValue
	111, // 407: SpaceX.API.Device.StarlinkRouterClientTesterRun.target_auth:type_name -> google.protobuf.StringValue
	111, // 408: SpaceX.API.Device.StarlinkRouterClientTesterRun.target_encryption:type_name -> google.protobuf.StringValue
	111, // 409: SpaceX.API.Device.StarlinkRouterClientTesterRun.target_bssid:type_name -> google.protobuf.StringValue
	111, // 410: SpaceX.API.Device.StarlinkRouterClientTesterRun.target_irtt_server:type_name -> google.protobuf.StringValue
	112, // 411: SpaceX.API.Device.StarlinkRouterClientTesterRun.iteration:type_name -> google.protobuf.UInt32Value
	111, // 412: SpaceX.API.Device.StarlinkRouterClientTesterRun.error_code:type_name -> google.protobuf.StringValue
	115, // 413: SpaceX.API.Device.StarlinkRouterClientTesterRun.seconds_to_associate:type_name -> google.protobuf.FloatValue
	115, // 414: SpaceX.API.Device.StarlinkRouterClientTesterRun.seconds_to_lease:type_name -> google.protobuf.FloatValue
	115, // 415: SpaceX.API.Device.StarlinkRouterClientTesterRun.seconds_to_resolve_router:type_name -> google.protobuf.FloatValue
	115, // 416: SpaceX.API.Device.StarlinkRouterClientTesterRun.seconds_to_resolve_internet:type_name -> google.protobuf.FloatValue
	115, // 417: SpaceX.API.Device.StarlinkRouterClientTesterRun.seconds_to_ping_dish:type_name -> google.protobuf.FloatValue
	115, // 418: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_test_duration_s:type_name -> google.protobuf.FloatValue
	115, // 419: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_rtt_latency_min_ms:type_name -> google.protobuf.FloatValue
	115, // 420: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_rtt_latency_mean_ms:type_name -> google.protobuf.FloatValue
	115, // 421: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_rtt_latency_median_ms:type_name -> google.protobuf.FloatValue
	115, // 422: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_rtt_latency_max_ms:type_name -> google.protobuf.FloatValue
	115, // 423: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_rtt_latency_std_dev_ms:type_name -> google.protobuf.FloatValue
	112, // 424: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_pkts_sent:type_name -> google.protobuf.UInt32Value
	112, // 425: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_pkts_recv:type_name -> google.protobuf.UInt32Value
	115, // 426: SpaceX.API.Device.StarlinkRouterClientTesterRun.v4_irtt_loss_percent:type_name -> google.protobuf.FloatValue
	118, // 427: SpaceX.API.Device.WifiSetClientGivenNameRequest.client_name:type_name -> SpaceX.API.Device.ClientName
	119, // 428: SpaceX.API.Device.WifiSetClientGivenNameRequest.client_config:type_name -> SpaceX.API.Device.ClientConfig
	17,  // 429: SpaceX.API.Device.WifiSelfTestResponse.self_test:type_name -> SpaceX.API.Device.WifiSelfTest
	111, // 430: SpaceX.API.Device.starlink_router_hourly_metrics_v2.id:type_name -> google.protobuf.StringValue
	111, // 431: SpaceX.API.Device.starlink_router_hourly_metrics_v2.timestamp_date:type_name -> google.protobuf.StringValue
	112, // 432: SpaceX.API.Device.starlink_router_hourly_metrics_v2.timestamp_hour:type_name -> google.protobuf.UInt32Value
	112, // 433: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_hw_gen:type_name -> google.protobuf.UInt32Value
	111, // 434: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_sw:type_name -> google.protobuf.StringValue
	111, // 435: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_country:type_name -> google.protobuf.StringValue
	114, // 436: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_is_dev:type_name -> google.protobuf.BoolValue
	112, // 437: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_alloc_fds:type_name -> google.protobuf.UInt32Value
	115, // 438: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_cpu_usage:type_name -> google.protobuf.FloatValue
	115, // 439: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_mem_free_kb:type_name -> google.protobuf.FloatValue
	116, // 440: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_bootcount:type_name -> google.protobuf.Int32Value
	114, // 441: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_partitions_equal:type_name -> google.protobuf.BoolValue
	112, // 442: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_uptime_seconds:type_name -> google.protobuf.UInt32Value
	116, // 443: SpaceX.API.Device.starlink_router_hourly_metrics_v2.sys_anti_rollback_version:type_name -> google.protobuf.Int32Value
	112, // 444: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_channel:type_name -> google.protobuf.UInt32Value
	115, // 445: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_antenna1_rssi:type_name -> google.protobuf.FloatValue
	115, // 446: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_antenna2_rssi:type_name -> google.protobuf.FloatValue
	115, // 447: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_antenna3_rssi:type_name -> google.protobuf.FloatValue
	112, // 448: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_iface_count:type_name -> google.protobuf.UInt32Value
	115, // 449: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_chan_busy_fraction:type_name -> google.protobuf.FloatValue
	115, // 450: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_edcca_fraction:type_name -> google.protobuf.FloatValue
	115, // 451: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_overlapping_bss_fraction:type_name -> google.protobuf.FloatValue
	112, // 452: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_rx_bytes:type_name -> google.protobuf.UInt32Value
	112, // 453: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_rx_packets:type_name -> google.protobuf.UInt32Value
	112, // 454: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_rx_errors:type_name -> google.protobuf.UInt32Value
	112, // 455: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_rx_frame_errors:type_name -> google.protobuf.UInt32Value
	115, // 456: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_rx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 457: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_rx_airtime_fraction:type_name -> google.protobuf.FloatValue
	112, // 458: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_tx_bytes:type_name -> google.protobuf.UInt32Value
	112, // 459: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_tx_packets:type_name -> google.protobuf.UInt32Value
	112, // 460: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_tx_errors:type_name -> google.protobuf.UInt32Value
	115, // 461: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_tx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 462: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_tx_airtime_fraction:type_name -> google.protobuf.FloatValue
	112, // 463: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_channel:type_name -> google.protobuf.UInt32Value
	115, // 464: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_antenna1_rssi:type_name -> google.protobuf.FloatValue
	115, // 465: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_antenna2_rssi:type_name -> google.protobuf.FloatValue
	115, // 466: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_antenna3_rssi:type_name -> google.protobuf.FloatValue
	112, // 467: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_iface_count:type_name -> google.protobuf.UInt32Value
	115, // 468: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_chan_busy_fraction:type_name -> google.protobuf.FloatValue
	115, // 469: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_edcca_fraction:type_name -> google.protobuf.FloatValue
	115, // 470: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_overlapping_bss_fraction:type_name -> google.protobuf.FloatValue
	112, // 471: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_rx_bytes:type_name -> google.protobuf.UInt32Value
	112, // 472: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_rx_packets:type_name -> google.protobuf.UInt32Value
	112, // 473: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_rx_errors:type_name -> google.protobuf.UInt32Value
	112, // 474: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_rx_frame_errors:type_name -> google.protobuf.UInt32Value
	115, // 475: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_rx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 476: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_rx_airtime_fraction:type_name -> google.protobuf.FloatValue
	112, // 477: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_tx_bytes:type_name -> google.protobuf.UInt32Value
	112, // 478: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_tx_packets:type_name -> google.protobuf.UInt32Value
	112, // 479: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_tx_errors:type_name -> google.protobuf.UInt32Value
	115, // 480: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_tx_packet_error_rate:type_name -> google.protobuf.FloatValue
	115, // 481: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_tx_airtime_fraction:type_name -> google.protobuf.FloatValue
	115, // 482: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_thermal_temp:type_name -> google.protobuf.FloatValue
	115, // 483: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_thermal_temp:type_name -> google.protobuf.FloatValue
	115, // 484: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_thermal_duty_cycle:type_name -> google.protobuf.FloatValue
	115, // 485: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_thermal_duty_cycle:type_name -> google.protobuf.FloatValue
	112, // 486: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_2ghz_thermal_throttled_seconds:type_name -> google.protobuf.UInt32Value
	112, // 487: SpaceX.API.Device.starlink_router_hourly_metrics_v2.radios_5ghz_thermal_throttled_seconds:type_name -> google.protobuf.UInt32Value
	112, // 488: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_lan_eth_rx_bytes:type_name -> google.protobuf.UInt32Value
	112, // 489: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_lan_eth_rx_packets:type_name -> google.protobuf.UInt32Value
	112, // 490: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_lan_eth_rx_errors:type_name -> google.protobuf.UInt32Value
	112, // 491: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_lan_eth_rx_frame_errors:type_name -> google.protobuf.UInt32Value
	112, // 492: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_lan_eth_tx_bytes:type_name -> google.protobuf.UInt32Value
	112, // 493: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_lan_eth_tx_packets:type_name -> google.protobuf.UInt32Value
	112, // 494: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_lan_eth_tx_errors:type_name -> google.protobuf.UInt32Value
	112, // 495: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_wan_eth_rx_bytes:type_name -> google.protobuf.UInt32Value
	112, // 496: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_wan_eth_rx_packets:type_name -> google.protobuf.UInt32Value
	112, // 497: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_wan_eth_rx_errors:type_name -> google.protobuf.UInt32Value
	112, // 498: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_wan_eth_rx_frame_errors:type_name -> google.protobuf.UInt32Value
	112, // 499: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_wan_eth_tx_bytes:type_name -> google.protobuf.UInt32Value
	112, // 500: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_wan_eth_tx_packets:type_name -> google.protobuf.UInt32Value
	112, // 501: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ifaces_wan_eth_tx_errors:type_name -> google.protobuf.UInt32Value
	112, // 502: SpaceX.API.Device.starlink_router_hourly_metrics_v2.clients:type_name -> google.protobuf.UInt32Value
	112, // 503: SpaceX.API.Device.starlink_router_hourly_metrics_v2.clients_2ghz:type_name -> google.protobuf.UInt32Value
	112, // 504: SpaceX.API.Device.starlink_router_hourly_metrics_v2.clients_5ghz:type_name -> google.protobuf.UInt32Value
	112, // 505: SpaceX.API.Device.starlink_router_hourly_metrics_v2.clients_eth:type_name -> google.protobuf.UInt32Value
	112, // 506: SpaceX.API.Device.starlink_router_hourly_metrics_v2.clients_repeater:type_name -> google.protobuf.UInt32Value
	112, // 507: SpaceX.API.Device.starlink_router_hourly_metrics_v2.clients_repeater_2ghz:type_name -> google.protobuf.UInt32Value
	112, // 508: SpaceX.API.Device.starlink_router_hourly_metrics_v2.clients_repeater_5ghz:type_name -> google.protobuf.UInt32Value
	112, // 509: SpaceX.API.Device.starlink_router_hourly_metrics_v2.clients_repeater_eth:type_name -> google.protobuf.UInt32Value
	112, // 510: SpaceX.API.Device.starlink_router_hourly_metrics_v2.mesh_hops:type_name -> google.protobuf.UInt32Value
	115, // 511: SpaceX.API.Device.starlink_router_hourly_metrics_v2.mesh_one_hop_rssi_avg_2ghz:type_name -> google.protobuf.FloatValue
	115, // 512: SpaceX.API.Device.starlink_router_hourly_metrics_v2.mesh_one_hop_rssi_avg_5ghz:type_name -> google.protobuf.FloatValue
	115, // 513: SpaceX.API.Device.starlink_router_hourly_metrics_v2.mesh_two_hop_rssi_avg_2ghz:type_name -> google.protobuf.FloatValue
	115, // 514: SpaceX.API.Device.starlink_router_hourly_metrics_v2.mesh_two_hop_rssi_avg_5ghz:type_name -> google.protobuf.FloatValue
	115, // 515: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_seconds_since_last_1s_outage:type_name -> google.protobuf.FloatValue
	115, // 516: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_seconds_since_last_2s_outage:type_name -> google.protobuf.FloatValue
	115, // 517: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_seconds_since_last_5s_outage:type_name -> google.protobuf.FloatValue
	115, // 518: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_seconds_since_last_60s_outage:type_name -> google.protobuf.FloatValue
	115, // 519: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_seconds_since_last_300s_outage:type_name -> google.protobuf.FloatValue
	115, // 520: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_drop_rate:type_name -> google.protobuf.FloatValue
	115, // 521: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_drop_rate_last_1h:type_name -> google.protobuf.FloatValue
	115, // 522: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_latency:type_name -> google.protobuf.FloatValue
	115, // 523: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_dish_seconds_since_last_1s_outage:type_name -> google.protobuf.FloatValue
	115, // 524: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_dish_seconds_since_last_2s_outage:type_name -> google.protobuf.FloatValue
	115, // 525: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_dish_seconds_since_last_5s_outage:type_name -> google.protobuf.FloatValue
	115, // 526: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_dish_seconds_since_last_60s_outage:type_name -> google.protobuf.FloatValue
	115, // 527: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_dish_seconds_since_last_300s_outage:type_name -> google.protobuf.FloatValue
	115, // 528: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_dish_drop_rate:type_name -> google.protobuf.FloatValue
	115, // 529: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_dish_drop_rate_last_1h:type_name -> google.protobuf.FloatValue
	115, // 530: SpaceX.API.Device.starlink_router_hourly_metrics_v2.ping_dish_latency:type_name -> google.protobuf.FloatValue
	115, // 531: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_router_download_mbps:type_name -> google.protobuf.FloatValue
	115, // 532: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_router_upload_mbps:type_name -> google.protobuf.FloatValue
	115, // 533: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_router_rssi:type_name -> google.protobuf.FloatValue
	115, // 534: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_wifi_download_mbps:type_name -> google.protobuf.FloatValue
	115, // 535: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_wifi_upload_mbps:type_name -> google.protobuf.FloatValue
	115, // 536: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_client_download_mbps:type_name -> google.protobuf.FloatValue
	115, // 537: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_client_upload_mbps:type_name -> google.protobuf.FloatValue
	115, // 538: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_client_rssi:type_name -> google.protobuf.FloatValue
	112, // 539: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_client_iface:type_name -> google.protobuf.UInt32Value
	111, // 540: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_client_oui:type_name -> google.protobuf.StringValue
	112, // 541: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_client_tx_rate:type_name -> google.protobuf.UInt32Value
	112, // 542: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_client_rx_rate:type_name -> google.protobuf.UInt32Value
	112, // 543: SpaceX.API.Device.starlink_router_hourly_metrics_v2.client_speedtest_client_platform_type:type_name -> google.protobuf.UInt32Value
	115, // 544: SpaceX.API.Device.starlink_router_hourly_metrics_v2.speedtest_tcp_8_download_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 545: SpaceX.API.Device.starlink_router_hourly_metrics_v2.speedtest_tcp_8_download_mbps_max:type_name -> google.protobuf.FloatValue
	115, // 546: SpaceX.API.Device.starlink_router_hourly_metrics_v2.speedtest_tcp_8_upload_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 547: SpaceX.API.Device.starlink_router_hourly_metrics_v2.speedtest_tcp_8_upload_mbps_max:type_name -> google.protobuf.FloatValue
	115, // 548: SpaceX.API.Device.starlink_router_hourly_metrics_v2.speedtest_tcp_64_download_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 549: SpaceX.API.Device.starlink_router_hourly_metrics_v2.speedtest_tcp_64_download_mbps_max:type_name -> google.protobuf.FloatValue
	115, // 550: SpaceX.API.Device.starlink_router_hourly_metrics_v2.speedtest_tcp_64_upload_mbps_avg:type_name -> google.protobuf.FloatValue
	115, // 551: SpaceX.API.Device.starlink_router_hourly_metrics_v2.speedtest_tcp_64_upload_mbps_max:type_name -> google.protobuf.FloatValue
	112, // 552: SpaceX.API.Device.starlink_router_hourly_metrics_v2.dish_cell_id:type_name -> google.protobuf.UInt32Value
	114, // 553: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_setup_complete:type_name -> google.protobuf.BoolValue
	114, // 554: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_bands_split:type_name -> google.protobuf.BoolValue
	114, // 555: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_is_repeater:type_name -> google.protobuf.BoolValue
	114, // 556: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_open_network:type_name -> google.protobuf.BoolValue
	114, // 557: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_is_aviation:type_name -> google.protobuf.BoolValue
	114, // 558: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_secure_dns:type_name -> google.protobuf.BoolValue
	114, // 559: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_legacy:type_name -> google.protobuf.BoolValue
	114, // 560: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_ap_mode:type_name -> google.protobuf.BoolValue
	114, // 561: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_dfs_enabled:type_name -> google.protobuf.BoolValue
	114, // 562: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_network_name_is_default:type_name -> google.protobuf.BoolValue
	114, // 563: SpaceX.API.Device.starlink_router_hourly_metrics_v2.config_remote_ssh_enabled:type_name -> google.protobuf.BoolValue
	70,  // 564: SpaceX.API.Device.WifiFactoryTestCommandRequest.iwpriv_command:type_name -> SpaceX.API.Device.IwprivCommand
	71,  // 565: SpaceX.API.Device.WifiFactoryTestCommandRequest.ip_link_set_command:type_name -> SpaceX.API.Device.IpLinkSetCommand
	72,  // 566: SpaceX.API.Device.WifiFactoryTestCommandRequest.ip_addr_set_command:type_name -> SpaceX.API.Device.IpAddrSetCommand
	4,   // 567: SpaceX.API.Device.IwprivCommand.ioctl:type_name -> SpaceX.API.Device.IwprivCommand.Ioctl
	94,  // 568: SpaceX.API.Device.WifiBackhaulStatsResponse.iface:type_name -> SpaceX.API.Device.IfaceType
	11,  // 569: SpaceX.API.Device.WifiBackhaulStatsResponse.siteSurveyScan:type_name -> SpaceX.API.Device.WifiSiteSurveyResult
	104, // 570: SpaceX.API.Device.WifiUpdateResponse.stats:type_name -> SpaceX.API.Device.WifiSoftwareUpdateStats
	82,  // 571: SpaceX.API.Device.WifiGetHistoryResponse.DnsResolverDropRateEntry.value:type_name -> SpaceX.API.Device.WifiGetHistoryResponse.DnsResolverHistory
	6,   // 572: SpaceX.API.Device.Mesh.MeshStream:input_type -> SpaceX.API.Device.ToController
	14,  // 573: SpaceX.API.Device.Mesh.MeshStream:output_type -> SpaceX.API.Device.FromController
	573, // [573:574] is the sub-list for method output_type
	572, // [572:573] is the sub-list for method input_type
	572, // [572:572] is the sub-list for extension type_name
	572, // [572:572] is the sub-list for extension extendee
	0,   // [0:572] is the sub-list for field type_name
}

func init() { file_spacex_api_device_wifi_proto_init() }
func file_spacex_api_device_wifi_proto_init() {
	if File_spacex_api_device_wifi_proto != nil {
		return
	}
	file_spacex_api_device_common_proto_init()
	file_spacex_api_device_wifi_config_proto_init()
	file_spacex_api_device_wifi_util_proto_init()
	file_spacex_api_device_wifi_proto_msgTypes[1].OneofWrappers = []any{
		(*ToController_Clients)(nil),
		(*ToController_MeshJoin)(nil),
		(*ToController_Status)(nil),
		(*ToController_Speedtest)(nil),
	}
	file_spacex_api_device_wifi_proto_msgTypes[9].OneofWrappers = []any{
		(*FromController_WifiConfig)(nil),
		(*FromController_SteerClientRequest)(nil),
		(*FromController_Status)(nil),
		(*FromController_BackhaulRequest)(nil),
		(*FromController_StartSpeedtest)(nil),
		(*FromController_WifiBtmRequest)(nil),
	}
	file_spacex_api_device_wifi_proto_msgTypes[63].OneofWrappers = []any{
		(*WifiFactoryTestCommandRequest_IwprivCommand)(nil),
		(*WifiFactoryTestCommandRequest_IpLinkSetCommand)(nil),
		(*WifiFactoryTestCommandRequest_IpAddrSetCommand)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spacex_api_device_wifi_proto_rawDesc), len(file_spacex_api_device_wifi_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   86,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spacex_api_device_wifi_proto_goTypes,
		DependencyIndexes: file_spacex_api_device_wifi_proto_depIdxs,
		EnumInfos:         file_spacex_api_device_wifi_proto_enumTypes,
		MessageInfos:      file_spacex_api_device_wifi_proto_msgTypes,
	}.Build()
	File_spacex_api_device_wifi_proto = out.File
	file_spacex_api_device_wifi_proto_goTypes = nil
	file_spacex_api_device_wifi_proto_depIdxs = nil
}
