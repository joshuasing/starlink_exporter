// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: spacex_api/device/device.proto

package device

import (
	status "github.com/joshuasing/starlink_exporter/internal/spacex_api/common/status"
	unlock "github.com/joshuasing/starlink_exporter/internal/spacex_api/device/services/unlock"
	integrations "github.com/joshuasing/starlink_exporter/internal/spacex_api/telemetron/public/integrations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WifiClientSandboxAlert int32

const (
	WifiClientSandboxAlert_SANDBOX_ALERT_UNKNOWN      WifiClientSandboxAlert = 0
	WifiClientSandboxAlert_SANDBOX_ALERT_PORTAL       WifiClientSandboxAlert = 1
	WifiClientSandboxAlert_SANDBOX_ALERT_GROUND_API   WifiClientSandboxAlert = 2
	WifiClientSandboxAlert_SANDBOX_ALERT_STARLINK_API WifiClientSandboxAlert = 3
)

// Enum value maps for WifiClientSandboxAlert.
var (
	WifiClientSandboxAlert_name = map[int32]string{
		0: "SANDBOX_ALERT_UNKNOWN",
		1: "SANDBOX_ALERT_PORTAL",
		2: "SANDBOX_ALERT_GROUND_API",
		3: "SANDBOX_ALERT_STARLINK_API",
	}
	WifiClientSandboxAlert_value = map[string]int32{
		"SANDBOX_ALERT_UNKNOWN":      0,
		"SANDBOX_ALERT_PORTAL":       1,
		"SANDBOX_ALERT_GROUND_API":   2,
		"SANDBOX_ALERT_STARLINK_API": 3,
	}
)

func (x WifiClientSandboxAlert) Enum() *WifiClientSandboxAlert {
	p := new(WifiClientSandboxAlert)
	*p = x
	return p
}

func (x WifiClientSandboxAlert) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiClientSandboxAlert) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[0].Descriptor()
}

func (WifiClientSandboxAlert) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[0]
}

func (x WifiClientSandboxAlert) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiClientSandboxAlert.Descriptor instead.
func (WifiClientSandboxAlert) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{0}
}

type PositionSource int32

const (
	PositionSource_AUTO      PositionSource = 0
	PositionSource_NONE      PositionSource = 1
	PositionSource_UT_INFO   PositionSource = 2
	PositionSource_EXTERNAL  PositionSource = 3
	PositionSource_GPS       PositionSource = 4
	PositionSource_STARLINK  PositionSource = 5
	PositionSource_GNC_GPS   PositionSource = 6
	PositionSource_GNC_PNT   PositionSource = 7
	PositionSource_GNC_FUSED PositionSource = 8
	PositionSource_GNC_RAW   PositionSource = 9
)

// Enum value maps for PositionSource.
var (
	PositionSource_name = map[int32]string{
		0: "AUTO",
		1: "NONE",
		2: "UT_INFO",
		3: "EXTERNAL",
		4: "GPS",
		5: "STARLINK",
		6: "GNC_GPS",
		7: "GNC_PNT",
		8: "GNC_FUSED",
		9: "GNC_RAW",
	}
	PositionSource_value = map[string]int32{
		"AUTO":      0,
		"NONE":      1,
		"UT_INFO":   2,
		"EXTERNAL":  3,
		"GPS":       4,
		"STARLINK":  5,
		"GNC_GPS":   6,
		"GNC_PNT":   7,
		"GNC_FUSED": 8,
		"GNC_RAW":   9,
	}
)

func (x PositionSource) Enum() *PositionSource {
	p := new(PositionSource)
	*p = x
	return p
}

func (x PositionSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositionSource) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[1].Descriptor()
}

func (PositionSource) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[1]
}

func (x PositionSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PositionSource.Descriptor instead.
func (PositionSource) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{1}
}

type SpeedtestError int32

const (
	SpeedtestError_SPEEDTEST_ERROR_NONE      SpeedtestError = 0
	SpeedtestError_SPEEDTEST_ERROR_UNKNOWN   SpeedtestError = 1
	SpeedtestError_SPEEDTEST_ERROR_TOKEN     SpeedtestError = 2
	SpeedtestError_SPEEDTEST_ERROR_API       SpeedtestError = 3
	SpeedtestError_SPEEDTEST_ERROR_NO_RESULT SpeedtestError = 4
	SpeedtestError_SPEEDTEST_ERROR_OFFLINE   SpeedtestError = 5
)

// Enum value maps for SpeedtestError.
var (
	SpeedtestError_name = map[int32]string{
		0: "SPEEDTEST_ERROR_NONE",
		1: "SPEEDTEST_ERROR_UNKNOWN",
		2: "SPEEDTEST_ERROR_TOKEN",
		3: "SPEEDTEST_ERROR_API",
		4: "SPEEDTEST_ERROR_NO_RESULT",
		5: "SPEEDTEST_ERROR_OFFLINE",
	}
	SpeedtestError_value = map[string]int32{
		"SPEEDTEST_ERROR_NONE":      0,
		"SPEEDTEST_ERROR_UNKNOWN":   1,
		"SPEEDTEST_ERROR_TOKEN":     2,
		"SPEEDTEST_ERROR_API":       3,
		"SPEEDTEST_ERROR_NO_RESULT": 4,
		"SPEEDTEST_ERROR_OFFLINE":   5,
	}
)

func (x SpeedtestError) Enum() *SpeedtestError {
	p := new(SpeedtestError)
	*p = x
	return p
}

func (x SpeedtestError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpeedtestError) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[2].Descriptor()
}

func (SpeedtestError) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[2]
}

func (x SpeedtestError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpeedtestError.Descriptor instead.
func (SpeedtestError) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{2}
}

type SpeedTestStats_Target int32

const (
	SpeedTestStats_UNKNOWN    SpeedTestStats_Target = 0
	SpeedTestStats_FASTCOM    SpeedTestStats_Target = 1
	SpeedTestStats_CLOUDFLARE SpeedTestStats_Target = 2
)

// Enum value maps for SpeedTestStats_Target.
var (
	SpeedTestStats_Target_name = map[int32]string{
		0: "UNKNOWN",
		1: "FASTCOM",
		2: "CLOUDFLARE",
	}
	SpeedTestStats_Target_value = map[string]int32{
		"UNKNOWN":    0,
		"FASTCOM":    1,
		"CLOUDFLARE": 2,
	}
)

func (x SpeedTestStats_Target) Enum() *SpeedTestStats_Target {
	p := new(SpeedTestStats_Target)
	*p = x
	return p
}

func (x SpeedTestStats_Target) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpeedTestStats_Target) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[3].Descriptor()
}

func (SpeedTestStats_Target) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[3]
}

func (x SpeedTestStats_Target) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpeedTestStats_Target.Descriptor instead.
func (SpeedTestStats_Target) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{29, 0}
}

type ClientPlatform_Platform int32

const (
	ClientPlatform_UNKNOWN ClientPlatform_Platform = 0
	ClientPlatform_IOS     ClientPlatform_Platform = 1
	ClientPlatform_ANDROID ClientPlatform_Platform = 2
	ClientPlatform_WEB     ClientPlatform_Platform = 3
)

// Enum value maps for ClientPlatform_Platform.
var (
	ClientPlatform_Platform_name = map[int32]string{
		0: "UNKNOWN",
		1: "IOS",
		2: "ANDROID",
		3: "WEB",
	}
	ClientPlatform_Platform_value = map[string]int32{
		"UNKNOWN": 0,
		"IOS":     1,
		"ANDROID": 2,
		"WEB":     3,
	}
)

func (x ClientPlatform_Platform) Enum() *ClientPlatform_Platform {
	p := new(ClientPlatform_Platform)
	*p = x
	return p
}

func (x ClientPlatform_Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPlatform_Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[4].Descriptor()
}

func (ClientPlatform_Platform) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[4]
}

func (x ClientPlatform_Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientPlatform_Platform.Descriptor instead.
func (ClientPlatform_Platform) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{30, 0}
}

type DishGetDiagnosticsResponse_TestResult int32

const (
	DishGetDiagnosticsResponse_NO_RESULT DishGetDiagnosticsResponse_TestResult = 0
	DishGetDiagnosticsResponse_PASSED    DishGetDiagnosticsResponse_TestResult = 1
	DishGetDiagnosticsResponse_FAILED    DishGetDiagnosticsResponse_TestResult = 2
)

// Enum value maps for DishGetDiagnosticsResponse_TestResult.
var (
	DishGetDiagnosticsResponse_TestResult_name = map[int32]string{
		0: "NO_RESULT",
		1: "PASSED",
		2: "FAILED",
	}
	DishGetDiagnosticsResponse_TestResult_value = map[string]int32{
		"NO_RESULT": 0,
		"PASSED":    1,
		"FAILED":    2,
	}
)

func (x DishGetDiagnosticsResponse_TestResult) Enum() *DishGetDiagnosticsResponse_TestResult {
	p := new(DishGetDiagnosticsResponse_TestResult)
	*p = x
	return p
}

func (x DishGetDiagnosticsResponse_TestResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DishGetDiagnosticsResponse_TestResult) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[5].Descriptor()
}

func (DishGetDiagnosticsResponse_TestResult) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[5]
}

func (x DishGetDiagnosticsResponse_TestResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DishGetDiagnosticsResponse_TestResult.Descriptor instead.
func (DishGetDiagnosticsResponse_TestResult) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{74, 0}
}

type DishGetDiagnosticsResponse_TestResultCode int32

const (
	DishGetDiagnosticsResponse_GENERAL           DishGetDiagnosticsResponse_TestResultCode = 0
	DishGetDiagnosticsResponse_BOOT_UP           DishGetDiagnosticsResponse_TestResultCode = 1
	DishGetDiagnosticsResponse_CPU_VOLTAGE       DishGetDiagnosticsResponse_TestResultCode = 2
	DishGetDiagnosticsResponse_DBF_AAP_CS        DishGetDiagnosticsResponse_TestResultCode = 3
	DishGetDiagnosticsResponse_DBF_NUM_FEMS      DishGetDiagnosticsResponse_TestResultCode = 4
	DishGetDiagnosticsResponse_DBF_READ_ERRORS   DishGetDiagnosticsResponse_TestResultCode = 5
	DishGetDiagnosticsResponse_DBF_T_DIE_0       DishGetDiagnosticsResponse_TestResultCode = 6
	DishGetDiagnosticsResponse_DBF_T_DIE_1       DishGetDiagnosticsResponse_TestResultCode = 7
	DishGetDiagnosticsResponse_DBF_T_DIE_0_VALID DishGetDiagnosticsResponse_TestResultCode = 8
	DishGetDiagnosticsResponse_DBF_T_DIE_1_VALID DishGetDiagnosticsResponse_TestResultCode = 9
	DishGetDiagnosticsResponse_ETH_PRIME         DishGetDiagnosticsResponse_TestResultCode = 10
	DishGetDiagnosticsResponse_EIRP              DishGetDiagnosticsResponse_TestResultCode = 11
	DishGetDiagnosticsResponse_FEM_CUT           DishGetDiagnosticsResponse_TestResultCode = 12
	DishGetDiagnosticsResponse_FUSE_AVS          DishGetDiagnosticsResponse_TestResultCode = 13
	DishGetDiagnosticsResponse_GPS               DishGetDiagnosticsResponse_TestResultCode = 14
	DishGetDiagnosticsResponse_IMU               DishGetDiagnosticsResponse_TestResultCode = 15
	DishGetDiagnosticsResponse_PHY               DishGetDiagnosticsResponse_TestResultCode = 16
	DishGetDiagnosticsResponse_SCP_ERROR         DishGetDiagnosticsResponse_TestResultCode = 17
	DishGetDiagnosticsResponse_TEMPERATURE       DishGetDiagnosticsResponse_TestResultCode = 18
	DishGetDiagnosticsResponse_VTSENS            DishGetDiagnosticsResponse_TestResultCode = 19
)

// Enum value maps for DishGetDiagnosticsResponse_TestResultCode.
var (
	DishGetDiagnosticsResponse_TestResultCode_name = map[int32]string{
		0:  "GENERAL",
		1:  "BOOT_UP",
		2:  "CPU_VOLTAGE",
		3:  "DBF_AAP_CS",
		4:  "DBF_NUM_FEMS",
		5:  "DBF_READ_ERRORS",
		6:  "DBF_T_DIE_0",
		7:  "DBF_T_DIE_1",
		8:  "DBF_T_DIE_0_VALID",
		9:  "DBF_T_DIE_1_VALID",
		10: "ETH_PRIME",
		11: "EIRP",
		12: "FEM_CUT",
		13: "FUSE_AVS",
		14: "GPS",
		15: "IMU",
		16: "PHY",
		17: "SCP_ERROR",
		18: "TEMPERATURE",
		19: "VTSENS",
	}
	DishGetDiagnosticsResponse_TestResultCode_value = map[string]int32{
		"GENERAL":           0,
		"BOOT_UP":           1,
		"CPU_VOLTAGE":       2,
		"DBF_AAP_CS":        3,
		"DBF_NUM_FEMS":      4,
		"DBF_READ_ERRORS":   5,
		"DBF_T_DIE_0":       6,
		"DBF_T_DIE_1":       7,
		"DBF_T_DIE_0_VALID": 8,
		"DBF_T_DIE_1_VALID": 9,
		"ETH_PRIME":         10,
		"EIRP":              11,
		"FEM_CUT":           12,
		"FUSE_AVS":          13,
		"GPS":               14,
		"IMU":               15,
		"PHY":               16,
		"SCP_ERROR":         17,
		"TEMPERATURE":       18,
		"VTSENS":            19,
	}
)

func (x DishGetDiagnosticsResponse_TestResultCode) Enum() *DishGetDiagnosticsResponse_TestResultCode {
	p := new(DishGetDiagnosticsResponse_TestResultCode)
	*p = x
	return p
}

func (x DishGetDiagnosticsResponse_TestResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DishGetDiagnosticsResponse_TestResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[6].Descriptor()
}

func (DishGetDiagnosticsResponse_TestResultCode) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[6]
}

func (x DishGetDiagnosticsResponse_TestResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DishGetDiagnosticsResponse_TestResultCode.Descriptor instead.
func (DishGetDiagnosticsResponse_TestResultCode) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{74, 1}
}

type DishGetDiagnosticsResponse_DisablementCode int32

const (
	DishGetDiagnosticsResponse_UNKNOWN                       DishGetDiagnosticsResponse_DisablementCode = 0
	DishGetDiagnosticsResponse_OKAY                          DishGetDiagnosticsResponse_DisablementCode = 1
	DishGetDiagnosticsResponse_NO_ACTIVE_ACCOUNT             DishGetDiagnosticsResponse_DisablementCode = 2
	DishGetDiagnosticsResponse_TOO_FAR_FROM_SERVICE_ADDRESS  DishGetDiagnosticsResponse_DisablementCode = 3
	DishGetDiagnosticsResponse_IN_OCEAN                      DishGetDiagnosticsResponse_DisablementCode = 4
	DishGetDiagnosticsResponse_BLOCKED_COUNTRY               DishGetDiagnosticsResponse_DisablementCode = 6
	DishGetDiagnosticsResponse_DATA_OVERAGE_SANDBOX_POLICY   DishGetDiagnosticsResponse_DisablementCode = 7
	DishGetDiagnosticsResponse_CELL_IS_DISABLED              DishGetDiagnosticsResponse_DisablementCode = 8
	DishGetDiagnosticsResponse_ROAM_RESTRICTED               DishGetDiagnosticsResponse_DisablementCode = 10
	DishGetDiagnosticsResponse_UNKNOWN_LOCATION              DishGetDiagnosticsResponse_DisablementCode = 11
	DishGetDiagnosticsResponse_ACCOUNT_DISABLED              DishGetDiagnosticsResponse_DisablementCode = 12
	DishGetDiagnosticsResponse_UNSUPPORTED_VERSION           DishGetDiagnosticsResponse_DisablementCode = 13
	DishGetDiagnosticsResponse_MOVING_TOO_FAST_FOR_POLICY    DishGetDiagnosticsResponse_DisablementCode = 14
	DishGetDiagnosticsResponse_UNDER_AVIATION_FLYOVER_LIMITS DishGetDiagnosticsResponse_DisablementCode = 15
	DishGetDiagnosticsResponse_BLOCKED_AREA                  DishGetDiagnosticsResponse_DisablementCode = 16
)

// Enum value maps for DishGetDiagnosticsResponse_DisablementCode.
var (
	DishGetDiagnosticsResponse_DisablementCode_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "OKAY",
		2:  "NO_ACTIVE_ACCOUNT",
		3:  "TOO_FAR_FROM_SERVICE_ADDRESS",
		4:  "IN_OCEAN",
		6:  "BLOCKED_COUNTRY",
		7:  "DATA_OVERAGE_SANDBOX_POLICY",
		8:  "CELL_IS_DISABLED",
		10: "ROAM_RESTRICTED",
		11: "UNKNOWN_LOCATION",
		12: "ACCOUNT_DISABLED",
		13: "UNSUPPORTED_VERSION",
		14: "MOVING_TOO_FAST_FOR_POLICY",
		15: "UNDER_AVIATION_FLYOVER_LIMITS",
		16: "BLOCKED_AREA",
	}
	DishGetDiagnosticsResponse_DisablementCode_value = map[string]int32{
		"UNKNOWN":                       0,
		"OKAY":                          1,
		"NO_ACTIVE_ACCOUNT":             2,
		"TOO_FAR_FROM_SERVICE_ADDRESS":  3,
		"IN_OCEAN":                      4,
		"BLOCKED_COUNTRY":               6,
		"DATA_OVERAGE_SANDBOX_POLICY":   7,
		"CELL_IS_DISABLED":              8,
		"ROAM_RESTRICTED":               10,
		"UNKNOWN_LOCATION":              11,
		"ACCOUNT_DISABLED":              12,
		"UNSUPPORTED_VERSION":           13,
		"MOVING_TOO_FAST_FOR_POLICY":    14,
		"UNDER_AVIATION_FLYOVER_LIMITS": 15,
		"BLOCKED_AREA":                  16,
	}
)

func (x DishGetDiagnosticsResponse_DisablementCode) Enum() *DishGetDiagnosticsResponse_DisablementCode {
	p := new(DishGetDiagnosticsResponse_DisablementCode)
	*p = x
	return p
}

func (x DishGetDiagnosticsResponse_DisablementCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DishGetDiagnosticsResponse_DisablementCode) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[7].Descriptor()
}

func (DishGetDiagnosticsResponse_DisablementCode) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[7]
}

func (x DishGetDiagnosticsResponse_DisablementCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DishGetDiagnosticsResponse_DisablementCode.Descriptor instead.
func (DishGetDiagnosticsResponse_DisablementCode) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{74, 2}
}

type UdpConnectivityTestRequest_UDPProbeDataType int32

const (
	UdpConnectivityTestRequest_EMPTY                UdpConnectivityTestRequest_UDPProbeDataType = 0
	UdpConnectivityTestRequest_DNS_STATUS_REQUEST   UdpConnectivityTestRequest_UDPProbeDataType = 1
	UdpConnectivityTestRequest_DTLS_CLIENT_HELLO    UdpConnectivityTestRequest_UDPProbeDataType = 2
	UdpConnectivityTestRequest_DNS_VERSION_BIND_REQ UdpConnectivityTestRequest_UDPProbeDataType = 3
	UdpConnectivityTestRequest_RPC_CHECK            UdpConnectivityTestRequest_UDPProbeDataType = 4
	UdpConnectivityTestRequest_DNS_SD               UdpConnectivityTestRequest_UDPProbeDataType = 5
	UdpConnectivityTestRequest_SNMP_V1_PUBLIC       UdpConnectivityTestRequest_UDPProbeDataType = 6
	UdpConnectivityTestRequest_SNMP_V3_GET_REQUEST  UdpConnectivityTestRequest_UDPProbeDataType = 7
	UdpConnectivityTestRequest_NTP_MESSAGE          UdpConnectivityTestRequest_UDPProbeDataType = 8
	UdpConnectivityTestRequest_XDMCP                UdpConnectivityTestRequest_UDPProbeDataType = 9
	UdpConnectivityTestRequest_KERBEROS             UdpConnectivityTestRequest_UDPProbeDataType = 10
	UdpConnectivityTestRequest_SIP_OPTIONS          UdpConnectivityTestRequest_UDPProbeDataType = 11
	UdpConnectivityTestRequest_LDAP_SEARCH_REQ      UdpConnectivityTestRequest_UDPProbeDataType = 12
	UdpConnectivityTestRequest_MEMCACHED_STATS      UdpConnectivityTestRequest_UDPProbeDataType = 13
	UdpConnectivityTestRequest_OPENVPN              UdpConnectivityTestRequest_UDPProbeDataType = 14
	UdpConnectivityTestRequest_CIFS_NS_UC           UdpConnectivityTestRequest_UDPProbeDataType = 15
	UdpConnectivityTestRequest_TFTP_GET             UdpConnectivityTestRequest_UDPProbeDataType = 16
	UdpConnectivityTestRequest_DHCP_INFORM          UdpConnectivityTestRequest_UDPProbeDataType = 17
	UdpConnectivityTestRequest_QUIC                 UdpConnectivityTestRequest_UDPProbeDataType = 18
	UdpConnectivityTestRequest_RIPV1                UdpConnectivityTestRequest_UDPProbeDataType = 19
	UdpConnectivityTestRequest_NFS_PROC_NULL        UdpConnectivityTestRequest_UDPProbeDataType = 20
	UdpConnectivityTestRequest_COAP_REQUEST         UdpConnectivityTestRequest_UDPProbeDataType = 21
)

// Enum value maps for UdpConnectivityTestRequest_UDPProbeDataType.
var (
	UdpConnectivityTestRequest_UDPProbeDataType_name = map[int32]string{
		0:  "EMPTY",
		1:  "DNS_STATUS_REQUEST",
		2:  "DTLS_CLIENT_HELLO",
		3:  "DNS_VERSION_BIND_REQ",
		4:  "RPC_CHECK",
		5:  "DNS_SD",
		6:  "SNMP_V1_PUBLIC",
		7:  "SNMP_V3_GET_REQUEST",
		8:  "NTP_MESSAGE",
		9:  "XDMCP",
		10: "KERBEROS",
		11: "SIP_OPTIONS",
		12: "LDAP_SEARCH_REQ",
		13: "MEMCACHED_STATS",
		14: "OPENVPN",
		15: "CIFS_NS_UC",
		16: "TFTP_GET",
		17: "DHCP_INFORM",
		18: "QUIC",
		19: "RIPV1",
		20: "NFS_PROC_NULL",
		21: "COAP_REQUEST",
	}
	UdpConnectivityTestRequest_UDPProbeDataType_value = map[string]int32{
		"EMPTY":                0,
		"DNS_STATUS_REQUEST":   1,
		"DTLS_CLIENT_HELLO":    2,
		"DNS_VERSION_BIND_REQ": 3,
		"RPC_CHECK":            4,
		"DNS_SD":               5,
		"SNMP_V1_PUBLIC":       6,
		"SNMP_V3_GET_REQUEST":  7,
		"NTP_MESSAGE":          8,
		"XDMCP":                9,
		"KERBEROS":             10,
		"SIP_OPTIONS":          11,
		"LDAP_SEARCH_REQ":      12,
		"MEMCACHED_STATS":      13,
		"OPENVPN":              14,
		"CIFS_NS_UC":           15,
		"TFTP_GET":             16,
		"DHCP_INFORM":          17,
		"QUIC":                 18,
		"RIPV1":                19,
		"NFS_PROC_NULL":        20,
		"COAP_REQUEST":         21,
	}
)

func (x UdpConnectivityTestRequest_UDPProbeDataType) Enum() *UdpConnectivityTestRequest_UDPProbeDataType {
	p := new(UdpConnectivityTestRequest_UDPProbeDataType)
	*p = x
	return p
}

func (x UdpConnectivityTestRequest_UDPProbeDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UdpConnectivityTestRequest_UDPProbeDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_device_proto_enumTypes[8].Descriptor()
}

func (UdpConnectivityTestRequest_UDPProbeDataType) Type() protoreflect.EnumType {
	return &file_spacex_api_device_device_proto_enumTypes[8]
}

func (x UdpConnectivityTestRequest_UDPProbeDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UdpConnectivityTestRequest_UDPProbeDataType.Descriptor instead.
func (UdpConnectivityTestRequest_UDPProbeDataType) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{76, 0}
}

type ToDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ToDevice_Request
	//	*ToDevice_HealthCheck
	Message       isToDevice_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToDevice) Reset() {
	*x = ToDevice{}
	mi := &file_spacex_api_device_device_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToDevice) ProtoMessage() {}

func (x *ToDevice) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToDevice.ProtoReflect.Descriptor instead.
func (*ToDevice) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{0}
}

func (x *ToDevice) GetMessage() isToDevice_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ToDevice) GetRequest() *Request {
	if x != nil {
		if x, ok := x.Message.(*ToDevice_Request); ok {
			return x.Request
		}
	}
	return nil
}

func (x *ToDevice) GetHealthCheck() *HealthCheck {
	if x != nil {
		if x, ok := x.Message.(*ToDevice_HealthCheck); ok {
			return x.HealthCheck
		}
	}
	return nil
}

type isToDevice_Message interface {
	isToDevice_Message()
}

type ToDevice_Request struct {
	Request *Request `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

type ToDevice_HealthCheck struct {
	HealthCheck *HealthCheck `protobuf:"bytes,2,opt,name=health_check,json=healthCheck,proto3,oneof"`
}

func (*ToDevice_Request) isToDevice_Message() {}

func (*ToDevice_HealthCheck) isToDevice_Message() {}

type FromDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*FromDevice_Response
	//	*FromDevice_Event
	//	*FromDevice_HealthCheck
	Message       isFromDevice_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FromDevice) Reset() {
	*x = FromDevice{}
	mi := &file_spacex_api_device_device_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FromDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromDevice) ProtoMessage() {}

func (x *FromDevice) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromDevice.ProtoReflect.Descriptor instead.
func (*FromDevice) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{1}
}

func (x *FromDevice) GetMessage() isFromDevice_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *FromDevice) GetResponse() *Response {
	if x != nil {
		if x, ok := x.Message.(*FromDevice_Response); ok {
			return x.Response
		}
	}
	return nil
}

func (x *FromDevice) GetEvent() *Event {
	if x != nil {
		if x, ok := x.Message.(*FromDevice_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *FromDevice) GetHealthCheck() *HealthCheck {
	if x != nil {
		if x, ok := x.Message.(*FromDevice_HealthCheck); ok {
			return x.HealthCheck
		}
	}
	return nil
}

type isFromDevice_Message interface {
	isFromDevice_Message()
}

type FromDevice_Response struct {
	Response *Response `protobuf:"bytes,1,opt,name=response,proto3,oneof"`
}

type FromDevice_Event struct {
	Event *Event `protobuf:"bytes,2,opt,name=event,proto3,oneof"`
}

type FromDevice_HealthCheck struct {
	HealthCheck *HealthCheck `protobuf:"bytes,3,opt,name=health_check,json=healthCheck,proto3,oneof"`
}

func (*FromDevice_Response) isFromDevice_Message() {}

func (*FromDevice_Event) isFromDevice_Message() {}

func (*FromDevice_HealthCheck) isFromDevice_Message() {}

type SensitiveCommand struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TargetId  string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	// Types that are valid to be assigned to Request:
	//
	//	*SensitiveCommand_GetLocation
	Request       isSensitiveCommand_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensitiveCommand) Reset() {
	*x = SensitiveCommand{}
	mi := &file_spacex_api_device_device_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensitiveCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveCommand) ProtoMessage() {}

func (x *SensitiveCommand) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveCommand.ProtoReflect.Descriptor instead.
func (*SensitiveCommand) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{2}
}

func (x *SensitiveCommand) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SensitiveCommand) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *SensitiveCommand) GetRequest() isSensitiveCommand_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SensitiveCommand) GetGetLocation() *GetLocationRequest {
	if x != nil {
		if x, ok := x.Request.(*SensitiveCommand_GetLocation); ok {
			return x.GetLocation
		}
	}
	return nil
}

type isSensitiveCommand_Request interface {
	isSensitiveCommand_Request()
}

type SensitiveCommand_GetLocation struct {
	GetLocation *GetLocationRequest `protobuf:"bytes,3,opt,name=get_location,json=getLocation,proto3,oneof"`
}

func (*SensitiveCommand_GetLocation) isSensitiveCommand_Request() {}

type HealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_spacex_api_device_device_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{3}
}

type Request struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Id       uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EpochId  uint64                 `protobuf:"varint,14,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
	TargetId string                 `protobuf:"bytes,13,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	// Types that are valid to be assigned to Request:
	//
	//	*Request_SignedRequest
	//	*Request_GetNextId
	//	*Request_SensitiveRequest
	//	*Request_Authenticate
	//	*Request_EnableDebugTelem
	//	*Request_FactoryReset
	//	*Request_GetDeviceInfo
	//	*Request_GetHistory
	//	*Request_GetLog
	//	*Request_GetNetworkInterfaces
	//	*Request_GetPing
	//	*Request_PingHost
	//	*Request_GetStatus
	//	*Request_Reboot
	//	*Request_SetSku
	//	*Request_SetTrustedKeys
	//	*Request_SpeedTest
	//	*Request_Update
	//	*Request_GetLocation
	//	*Request_GetHeapDump
	//	*Request_RestartControl
	//	*Request_Fuse
	//	*Request_GetPersistentStats
	//	*Request_GetConnections
	//	*Request_StartSpeedtest
	//	*Request_GetSpeedtestStatus
	//	*Request_ReportClientSpeedtest
	//	*Request_InitiateRemoteSsh
	//	*Request_SelfTest
	//	*Request_SetTestMode
	//	*Request_SoftwareUpdate
	//	*Request_IqCapture
	//	*Request_GetRadioStats
	//	*Request_Time
	//	*Request_RunIperfServer
	//	*Request_TcpConnectivityTest
	//	*Request_UdpConnectivityTest
	//	*Request_GetGoroutineStackTraces
	//	*Request_DishStow
	//	*Request_DishGetContext
	//	*Request_DishGetObstructionMap
	//	*Request_DishSetEmc
	//	*Request_DishGetEmc
	//	*Request_DishSetConfig
	//	*Request_DishGetConfig
	//	*Request_DishPowerSave
	//	*Request_DishInhibitGps
	//	*Request_DishGetData
	//	*Request_DishClearObstructionMap
	//	*Request_DishSetMaxPowerTestMode
	//	*Request_DishActivateRssiScan
	//	*Request_DishGetRssiScanResult
	//	*Request_DishFactoryReset
	//	*Request_ResetButton
	//	*Request_SetPerVehicleConfig
	//	*Request_DishAviationTest
	//	*Request_WifiGetClients
	//	*Request_WifiGetPingMetrics
	//	*Request_WifiSetConfig
	//	*Request_WifiGetConfig
	//	*Request_WifiSetup
	//	*Request_WifiSetMeshDeviceTrust
	//	*Request_WifiSetMeshConfig
	//	*Request_WifiGetClientHistory
	//	*Request_WifiSetClientGivenName
	//	*Request_WifiSetAviationConformed
	//	*Request_WifiSelfTest
	//	*Request_WifiRunSelfTest
	//	*Request_WifiCalibrationMode
	//	*Request_WifiGuestInfo
	//	*Request_WifiRfTest
	//	*Request_WifiGetFirewall
	//	*Request_WifiTogglePoeNegotiation
	//	*Request_WifiFactoryTestCommand
	//	*Request_WifiStartLocalTelemProxy
	//	*Request_WifiBackhaulStats
	//	*Request_WifiToggleUmbilicalMode
	//	*Request_WifiClientSandbox
	//	*Request_TransceiverIfLoopbackTest
	//	*Request_TransceiverGetStatus
	//	*Request_TransceiverGetTelemetry
	//	*Request_StartUnlock
	//	*Request_FinishUnlock
	//	*Request_GetDiagnostics
	Request       isRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_spacex_api_device_device_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{4}
}

func (x *Request) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Request) GetEpochId() uint64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

func (x *Request) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Request) GetRequest() isRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Request) GetSignedRequest() *SignedData {
	if x != nil {
		if x, ok := x.Request.(*Request_SignedRequest); ok {
			return x.SignedRequest
		}
	}
	return nil
}

func (x *Request) GetGetNextId() *GetNextIdRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetNextId); ok {
			return x.GetNextId
		}
	}
	return nil
}

func (x *Request) GetSensitiveRequest() *SignedData {
	if x != nil {
		if x, ok := x.Request.(*Request_SensitiveRequest); ok {
			return x.SensitiveRequest
		}
	}
	return nil
}

func (x *Request) GetAuthenticate() *AuthenticateRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_Authenticate); ok {
			return x.Authenticate
		}
	}
	return nil
}

func (x *Request) GetEnableDebugTelem() *EnableDebugTelemRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_EnableDebugTelem); ok {
			return x.EnableDebugTelem
		}
	}
	return nil
}

func (x *Request) GetFactoryReset() *FactoryResetRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_FactoryReset); ok {
			return x.FactoryReset
		}
	}
	return nil
}

func (x *Request) GetGetDeviceInfo() *GetDeviceInfoRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetDeviceInfo); ok {
			return x.GetDeviceInfo
		}
	}
	return nil
}

func (x *Request) GetGetHistory() *GetHistoryRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetHistory); ok {
			return x.GetHistory
		}
	}
	return nil
}

func (x *Request) GetGetLog() *GetLogRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetLog); ok {
			return x.GetLog
		}
	}
	return nil
}

func (x *Request) GetGetNetworkInterfaces() *GetNetworkInterfacesRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetNetworkInterfaces); ok {
			return x.GetNetworkInterfaces
		}
	}
	return nil
}

func (x *Request) GetGetPing() *GetPingRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetPing); ok {
			return x.GetPing
		}
	}
	return nil
}

func (x *Request) GetPingHost() *PingHostRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_PingHost); ok {
			return x.PingHost
		}
	}
	return nil
}

func (x *Request) GetGetStatus() *GetStatusRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetStatus); ok {
			return x.GetStatus
		}
	}
	return nil
}

func (x *Request) GetReboot() *RebootRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_Reboot); ok {
			return x.Reboot
		}
	}
	return nil
}

func (x *Request) GetSetSku() *SetSkuRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_SetSku); ok {
			return x.SetSku
		}
	}
	return nil
}

func (x *Request) GetSetTrustedKeys() *SetTrustedKeysRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_SetTrustedKeys); ok {
			return x.SetTrustedKeys
		}
	}
	return nil
}

func (x *Request) GetSpeedTest() *SpeedTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_SpeedTest); ok {
			return x.SpeedTest
		}
	}
	return nil
}

func (x *Request) GetUpdate() *UpdateRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *Request) GetGetLocation() *GetLocationRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetLocation); ok {
			return x.GetLocation
		}
	}
	return nil
}

func (x *Request) GetGetHeapDump() *GetHeapDumpRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetHeapDump); ok {
			return x.GetHeapDump
		}
	}
	return nil
}

func (x *Request) GetRestartControl() *RestartControlRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_RestartControl); ok {
			return x.RestartControl
		}
	}
	return nil
}

func (x *Request) GetFuse() *FuseRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_Fuse); ok {
			return x.Fuse
		}
	}
	return nil
}

func (x *Request) GetGetPersistentStats() *GetPersistentStatsRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetPersistentStats); ok {
			return x.GetPersistentStats
		}
	}
	return nil
}

func (x *Request) GetGetConnections() *GetConnectionsRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetConnections); ok {
			return x.GetConnections
		}
	}
	return nil
}

func (x *Request) GetStartSpeedtest() *StartSpeedtestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_StartSpeedtest); ok {
			return x.StartSpeedtest
		}
	}
	return nil
}

func (x *Request) GetGetSpeedtestStatus() *GetSpeedtestStatusRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetSpeedtestStatus); ok {
			return x.GetSpeedtestStatus
		}
	}
	return nil
}

func (x *Request) GetReportClientSpeedtest() *ReportClientSpeedtestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_ReportClientSpeedtest); ok {
			return x.ReportClientSpeedtest
		}
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *Request) GetInitiateRemoteSsh() *InitiateRemoteSshRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_InitiateRemoteSsh); ok {
			return x.InitiateRemoteSsh
		}
	}
	return nil
}

func (x *Request) GetSelfTest() *SelfTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_SelfTest); ok {
			return x.SelfTest
		}
	}
	return nil
}

func (x *Request) GetSetTestMode() *SetTestModeRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_SetTestMode); ok {
			return x.SetTestMode
		}
	}
	return nil
}

func (x *Request) GetSoftwareUpdate() *SoftwareUpdateRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_SoftwareUpdate); ok {
			return x.SoftwareUpdate
		}
	}
	return nil
}

func (x *Request) GetIqCapture() *IQCaptureRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_IqCapture); ok {
			return x.IqCapture
		}
	}
	return nil
}

func (x *Request) GetGetRadioStats() *GetRadioStatsRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetRadioStats); ok {
			return x.GetRadioStats
		}
	}
	return nil
}

func (x *Request) GetTime() *GetTimeRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_Time); ok {
			return x.Time
		}
	}
	return nil
}

func (x *Request) GetRunIperfServer() *RunIperfServerRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_RunIperfServer); ok {
			return x.RunIperfServer
		}
	}
	return nil
}

func (x *Request) GetTcpConnectivityTest() *TcpConnectivityTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_TcpConnectivityTest); ok {
			return x.TcpConnectivityTest
		}
	}
	return nil
}

func (x *Request) GetUdpConnectivityTest() *UdpConnectivityTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_UdpConnectivityTest); ok {
			return x.UdpConnectivityTest
		}
	}
	return nil
}

func (x *Request) GetGetGoroutineStackTraces() *GetGoroutineStackTracesRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetGoroutineStackTraces); ok {
			return x.GetGoroutineStackTraces
		}
	}
	return nil
}

func (x *Request) GetDishStow() *DishStowRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishStow); ok {
			return x.DishStow
		}
	}
	return nil
}

func (x *Request) GetDishGetContext() *DishGetContextRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishGetContext); ok {
			return x.DishGetContext
		}
	}
	return nil
}

func (x *Request) GetDishGetObstructionMap() *DishGetObstructionMapRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishGetObstructionMap); ok {
			return x.DishGetObstructionMap
		}
	}
	return nil
}

func (x *Request) GetDishSetEmc() *DishSetEmcRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishSetEmc); ok {
			return x.DishSetEmc
		}
	}
	return nil
}

func (x *Request) GetDishGetEmc() *DishGetEmcRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishGetEmc); ok {
			return x.DishGetEmc
		}
	}
	return nil
}

func (x *Request) GetDishSetConfig() *DishSetConfigRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishSetConfig); ok {
			return x.DishSetConfig
		}
	}
	return nil
}

func (x *Request) GetDishGetConfig() *DishGetConfigRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishGetConfig); ok {
			return x.DishGetConfig
		}
	}
	return nil
}

func (x *Request) GetDishPowerSave() *DishPowerSaveRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishPowerSave); ok {
			return x.DishPowerSave
		}
	}
	return nil
}

func (x *Request) GetDishInhibitGps() *DishInhibitGpsRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishInhibitGps); ok {
			return x.DishInhibitGps
		}
	}
	return nil
}

func (x *Request) GetDishGetData() *DishGetDataRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishGetData); ok {
			return x.DishGetData
		}
	}
	return nil
}

func (x *Request) GetDishClearObstructionMap() *DishClearObstructionMapRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishClearObstructionMap); ok {
			return x.DishClearObstructionMap
		}
	}
	return nil
}

func (x *Request) GetDishSetMaxPowerTestMode() *DishSetMaxPowerTestModeRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishSetMaxPowerTestMode); ok {
			return x.DishSetMaxPowerTestMode
		}
	}
	return nil
}

func (x *Request) GetDishActivateRssiScan() *DishActivateRssiScanRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishActivateRssiScan); ok {
			return x.DishActivateRssiScan
		}
	}
	return nil
}

func (x *Request) GetDishGetRssiScanResult() *DishGetRssiScanResultRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishGetRssiScanResult); ok {
			return x.DishGetRssiScanResult
		}
	}
	return nil
}

func (x *Request) GetDishFactoryReset() *DishFactoryResetRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishFactoryReset); ok {
			return x.DishFactoryReset
		}
	}
	return nil
}

func (x *Request) GetResetButton() *ResetButtonRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_ResetButton); ok {
			return x.ResetButton
		}
	}
	return nil
}

func (x *Request) GetSetPerVehicleConfig() *SoftwareUpdateRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_SetPerVehicleConfig); ok {
			return x.SetPerVehicleConfig
		}
	}
	return nil
}

func (x *Request) GetDishAviationTest() *DishAviationTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_DishAviationTest); ok {
			return x.DishAviationTest
		}
	}
	return nil
}

func (x *Request) GetWifiGetClients() *WifiGetClientsRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiGetClients); ok {
			return x.WifiGetClients
		}
	}
	return nil
}

func (x *Request) GetWifiGetPingMetrics() *WifiGetPingMetricsRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiGetPingMetrics); ok {
			return x.WifiGetPingMetrics
		}
	}
	return nil
}

func (x *Request) GetWifiSetConfig() *WifiSetConfigRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiSetConfig); ok {
			return x.WifiSetConfig
		}
	}
	return nil
}

func (x *Request) GetWifiGetConfig() *WifiGetConfigRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiGetConfig); ok {
			return x.WifiGetConfig
		}
	}
	return nil
}

func (x *Request) GetWifiSetup() *WifiSetupRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiSetup); ok {
			return x.WifiSetup
		}
	}
	return nil
}

func (x *Request) GetWifiSetMeshDeviceTrust() *WifiSetMeshDeviceTrustRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiSetMeshDeviceTrust); ok {
			return x.WifiSetMeshDeviceTrust
		}
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *Request) GetWifiSetMeshConfig() *WifiSetMeshConfigRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiSetMeshConfig); ok {
			return x.WifiSetMeshConfig
		}
	}
	return nil
}

func (x *Request) GetWifiGetClientHistory() *WifiGetClientHistoryRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiGetClientHistory); ok {
			return x.WifiGetClientHistory
		}
	}
	return nil
}

func (x *Request) GetWifiSetClientGivenName() *WifiSetClientGivenNameRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiSetClientGivenName); ok {
			return x.WifiSetClientGivenName
		}
	}
	return nil
}

func (x *Request) GetWifiSetAviationConformed() *WifiSetAviationConformedRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiSetAviationConformed); ok {
			return x.WifiSetAviationConformed
		}
	}
	return nil
}

func (x *Request) GetWifiSelfTest() *WifiSelfTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiSelfTest); ok {
			return x.WifiSelfTest
		}
	}
	return nil
}

func (x *Request) GetWifiRunSelfTest() *WifiRunSelfTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiRunSelfTest); ok {
			return x.WifiRunSelfTest
		}
	}
	return nil
}

func (x *Request) GetWifiCalibrationMode() *WifiCalibrationModeRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiCalibrationMode); ok {
			return x.WifiCalibrationMode
		}
	}
	return nil
}

func (x *Request) GetWifiGuestInfo() *WifiGuestInfoRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiGuestInfo); ok {
			return x.WifiGuestInfo
		}
	}
	return nil
}

func (x *Request) GetWifiRfTest() *WifiRfTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiRfTest); ok {
			return x.WifiRfTest
		}
	}
	return nil
}

func (x *Request) GetWifiGetFirewall() *WifiGetFirewallRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiGetFirewall); ok {
			return x.WifiGetFirewall
		}
	}
	return nil
}

func (x *Request) GetWifiTogglePoeNegotiation() *WifiTogglePoeNegotiationRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiTogglePoeNegotiation); ok {
			return x.WifiTogglePoeNegotiation
		}
	}
	return nil
}

func (x *Request) GetWifiFactoryTestCommand() *WifiFactoryTestCommandRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiFactoryTestCommand); ok {
			return x.WifiFactoryTestCommand
		}
	}
	return nil
}

func (x *Request) GetWifiStartLocalTelemProxy() *WifiStartLocalTelemProxyRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiStartLocalTelemProxy); ok {
			return x.WifiStartLocalTelemProxy
		}
	}
	return nil
}

func (x *Request) GetWifiBackhaulStats() *WifiBackhaulStatsRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiBackhaulStats); ok {
			return x.WifiBackhaulStats
		}
	}
	return nil
}

func (x *Request) GetWifiToggleUmbilicalMode() *WifiToggleUmbilicalModeRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiToggleUmbilicalMode); ok {
			return x.WifiToggleUmbilicalMode
		}
	}
	return nil
}

func (x *Request) GetWifiClientSandbox() *WifiClientSandboxRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_WifiClientSandbox); ok {
			return x.WifiClientSandbox
		}
	}
	return nil
}

func (x *Request) GetTransceiverIfLoopbackTest() *TransceiverIFLoopbackTestRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_TransceiverIfLoopbackTest); ok {
			return x.TransceiverIfLoopbackTest
		}
	}
	return nil
}

func (x *Request) GetTransceiverGetStatus() *TransceiverGetStatusRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_TransceiverGetStatus); ok {
			return x.TransceiverGetStatus
		}
	}
	return nil
}

func (x *Request) GetTransceiverGetTelemetry() *TransceiverGetTelemetryRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_TransceiverGetTelemetry); ok {
			return x.TransceiverGetTelemetry
		}
	}
	return nil
}

func (x *Request) GetStartUnlock() *unlock.StartUnlockRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_StartUnlock); ok {
			return x.StartUnlock
		}
	}
	return nil
}

func (x *Request) GetFinishUnlock() *unlock.FinishUnlockRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_FinishUnlock); ok {
			return x.FinishUnlock
		}
	}
	return nil
}

func (x *Request) GetGetDiagnostics() *GetDiagnosticsRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_GetDiagnostics); ok {
			return x.GetDiagnostics
		}
	}
	return nil
}

type isRequest_Request interface {
	isRequest_Request()
}

type Request_SignedRequest struct {
	SignedRequest *SignedData `protobuf:"bytes,15,opt,name=signed_request,json=signedRequest,proto3,oneof"`
}

type Request_GetNextId struct {
	GetNextId *GetNextIdRequest `protobuf:"bytes,1006,opt,name=get_next_id,json=getNextId,proto3,oneof"`
}

type Request_SensitiveRequest struct {
	SensitiveRequest *SignedData `protobuf:"bytes,1078,opt,name=sensitive_request,json=sensitiveRequest,proto3,oneof"`
}

type Request_Authenticate struct {
	Authenticate *AuthenticateRequest `protobuf:"bytes,1005,opt,name=authenticate,proto3,oneof"`
}

type Request_EnableDebugTelem struct {
	EnableDebugTelem *EnableDebugTelemRequest `protobuf:"bytes,1034,opt,name=enable_debug_telem,json=enableDebugTelem,proto3,oneof"`
}

type Request_FactoryReset struct {
	FactoryReset *FactoryResetRequest `protobuf:"bytes,1011,opt,name=factory_reset,json=factoryReset,proto3,oneof"`
}

type Request_GetDeviceInfo struct {
	GetDeviceInfo *GetDeviceInfoRequest `protobuf:"bytes,1008,opt,name=get_device_info,json=getDeviceInfo,proto3,oneof"`
}

type Request_GetHistory struct {
	GetHistory *GetHistoryRequest `protobuf:"bytes,1007,opt,name=get_history,json=getHistory,proto3,oneof"`
}

type Request_GetLog struct {
	GetLog *GetLogRequest `protobuf:"bytes,1012,opt,name=get_log,json=getLog,proto3,oneof"`
}

type Request_GetNetworkInterfaces struct {
	GetNetworkInterfaces *GetNetworkInterfacesRequest `protobuf:"bytes,1015,opt,name=get_network_interfaces,json=getNetworkInterfaces,proto3,oneof"`
}

type Request_GetPing struct {
	GetPing *GetPingRequest `protobuf:"bytes,1009,opt,name=get_ping,json=getPing,proto3,oneof"`
}

type Request_PingHost struct {
	PingHost *PingHostRequest `protobuf:"bytes,1016,opt,name=ping_host,json=pingHost,proto3,oneof"`
}

type Request_GetStatus struct {
	GetStatus *GetStatusRequest `protobuf:"bytes,1004,opt,name=get_status,json=getStatus,proto3,oneof"`
}

type Request_Reboot struct {
	Reboot *RebootRequest `protobuf:"bytes,1001,opt,name=reboot,proto3,oneof"`
}

type Request_SetSku struct {
	SetSku *SetSkuRequest `protobuf:"bytes,1013,opt,name=set_sku,json=setSku,proto3,oneof"`
}

type Request_SetTrustedKeys struct {
	SetTrustedKeys *SetTrustedKeysRequest `protobuf:"bytes,1010,opt,name=set_trusted_keys,json=setTrustedKeys,proto3,oneof"`
}

type Request_SpeedTest struct {
	SpeedTest *SpeedTestRequest `protobuf:"bytes,1003,opt,name=speed_test,json=speedTest,proto3,oneof"`
}

type Request_Update struct {
	Update *UpdateRequest `protobuf:"bytes,1014,opt,name=update,proto3,oneof"`
}

type Request_GetLocation struct {
	GetLocation *GetLocationRequest `protobuf:"bytes,1017,opt,name=get_location,json=getLocation,proto3,oneof"`
}

type Request_GetHeapDump struct {
	GetHeapDump *GetHeapDumpRequest `protobuf:"bytes,1019,opt,name=get_heap_dump,json=getHeapDump,proto3,oneof"`
}

type Request_RestartControl struct {
	RestartControl *RestartControlRequest `protobuf:"bytes,1020,opt,name=restart_control,json=restartControl,proto3,oneof"`
}

type Request_Fuse struct {
	Fuse *FuseRequest `protobuf:"bytes,1021,opt,name=fuse,proto3,oneof"`
}

type Request_GetPersistentStats struct {
	GetPersistentStats *GetPersistentStatsRequest `protobuf:"bytes,1022,opt,name=get_persistent_stats,json=getPersistentStats,proto3,oneof"`
}

type Request_GetConnections struct {
	GetConnections *GetConnectionsRequest `protobuf:"bytes,1023,opt,name=get_connections,json=getConnections,proto3,oneof"`
}

type Request_StartSpeedtest struct {
	StartSpeedtest *StartSpeedtestRequest `protobuf:"bytes,1027,opt,name=start_speedtest,json=startSpeedtest,proto3,oneof"`
}

type Request_GetSpeedtestStatus struct {
	GetSpeedtestStatus *GetSpeedtestStatusRequest `protobuf:"bytes,1028,opt,name=get_speedtest_status,json=getSpeedtestStatus,proto3,oneof"`
}

type Request_ReportClientSpeedtest struct {
	ReportClientSpeedtest *ReportClientSpeedtestRequest `protobuf:"bytes,1029,opt,name=report_client_speedtest,json=reportClientSpeedtest,proto3,oneof"`
}

type Request_InitiateRemoteSsh struct {
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	InitiateRemoteSsh *InitiateRemoteSshRequest `protobuf:"bytes,1030,opt,name=initiate_remote_ssh,json=initiateRemoteSsh,proto3,oneof"`
}

type Request_SelfTest struct {
	SelfTest *SelfTestRequest `protobuf:"bytes,1031,opt,name=self_test,json=selfTest,proto3,oneof"`
}

type Request_SetTestMode struct {
	SetTestMode *SetTestModeRequest `protobuf:"bytes,1032,opt,name=set_test_mode,json=setTestMode,proto3,oneof"`
}

type Request_SoftwareUpdate struct {
	SoftwareUpdate *SoftwareUpdateRequest `protobuf:"bytes,1033,opt,name=software_update,json=softwareUpdate,proto3,oneof"`
}

type Request_IqCapture struct {
	IqCapture *IQCaptureRequest `protobuf:"bytes,1035,opt,name=iq_capture,json=iqCapture,proto3,oneof"`
}

type Request_GetRadioStats struct {
	GetRadioStats *GetRadioStatsRequest `protobuf:"bytes,1036,opt,name=get_radio_stats,json=getRadioStats,proto3,oneof"`
}

type Request_Time struct {
	Time *GetTimeRequest `protobuf:"bytes,1037,opt,name=time,proto3,oneof"`
}

type Request_RunIperfServer struct {
	RunIperfServer *RunIperfServerRequest `protobuf:"bytes,1038,opt,name=run_iperf_server,json=runIperfServer,proto3,oneof"`
}

type Request_TcpConnectivityTest struct {
	TcpConnectivityTest *TcpConnectivityTestRequest `protobuf:"bytes,1039,opt,name=tcp_connectivity_test,json=tcpConnectivityTest,proto3,oneof"`
}

type Request_UdpConnectivityTest struct {
	UdpConnectivityTest *UdpConnectivityTestRequest `protobuf:"bytes,1040,opt,name=udp_connectivity_test,json=udpConnectivityTest,proto3,oneof"`
}

type Request_GetGoroutineStackTraces struct {
	GetGoroutineStackTraces *GetGoroutineStackTracesRequest `protobuf:"bytes,1041,opt,name=get_goroutine_stack_traces,json=getGoroutineStackTraces,proto3,oneof"`
}

type Request_DishStow struct {
	DishStow *DishStowRequest `protobuf:"bytes,2002,opt,name=dish_stow,json=dishStow,proto3,oneof"`
}

type Request_DishGetContext struct {
	DishGetContext *DishGetContextRequest `protobuf:"bytes,2003,opt,name=dish_get_context,json=dishGetContext,proto3,oneof"`
}

type Request_DishGetObstructionMap struct {
	DishGetObstructionMap *DishGetObstructionMapRequest `protobuf:"bytes,2008,opt,name=dish_get_obstruction_map,json=dishGetObstructionMap,proto3,oneof"`
}

type Request_DishSetEmc struct {
	DishSetEmc *DishSetEmcRequest `protobuf:"bytes,2007,opt,name=dish_set_emc,json=dishSetEmc,proto3,oneof"`
}

type Request_DishGetEmc struct {
	DishGetEmc *DishGetEmcRequest `protobuf:"bytes,2009,opt,name=dish_get_emc,json=dishGetEmc,proto3,oneof"`
}

type Request_DishSetConfig struct {
	DishSetConfig *DishSetConfigRequest `protobuf:"bytes,2010,opt,name=dish_set_config,json=dishSetConfig,proto3,oneof"`
}

type Request_DishGetConfig struct {
	DishGetConfig *DishGetConfigRequest `protobuf:"bytes,2011,opt,name=dish_get_config,json=dishGetConfig,proto3,oneof"`
}

type Request_DishPowerSave struct {
	DishPowerSave *DishPowerSaveRequest `protobuf:"bytes,2013,opt,name=dish_power_save,json=dishPowerSave,proto3,oneof"`
}

type Request_DishInhibitGps struct {
	DishInhibitGps *DishInhibitGpsRequest `protobuf:"bytes,2014,opt,name=dish_inhibit_gps,json=dishInhibitGps,proto3,oneof"`
}

type Request_DishGetData struct {
	DishGetData *DishGetDataRequest `protobuf:"bytes,2015,opt,name=dish_get_data,json=dishGetData,proto3,oneof"`
}

type Request_DishClearObstructionMap struct {
	DishClearObstructionMap *DishClearObstructionMapRequest `protobuf:"bytes,2017,opt,name=dish_clear_obstruction_map,json=dishClearObstructionMap,proto3,oneof"`
}

type Request_DishSetMaxPowerTestMode struct {
	DishSetMaxPowerTestMode *DishSetMaxPowerTestModeRequest `protobuf:"bytes,2018,opt,name=dish_set_max_power_test_mode,json=dishSetMaxPowerTestMode,proto3,oneof"`
}

type Request_DishActivateRssiScan struct {
	DishActivateRssiScan *DishActivateRssiScanRequest `protobuf:"bytes,2019,opt,name=dish_activate_rssi_scan,json=dishActivateRssiScan,proto3,oneof"`
}

type Request_DishGetRssiScanResult struct {
	DishGetRssiScanResult *DishGetRssiScanResultRequest `protobuf:"bytes,2020,opt,name=dish_get_rssi_scan_result,json=dishGetRssiScanResult,proto3,oneof"`
}

type Request_DishFactoryReset struct {
	DishFactoryReset *DishFactoryResetRequest `protobuf:"bytes,2021,opt,name=dish_factory_reset,json=dishFactoryReset,proto3,oneof"`
}

type Request_ResetButton struct {
	ResetButton *ResetButtonRequest `protobuf:"bytes,2022,opt,name=reset_button,json=resetButton,proto3,oneof"`
}

type Request_SetPerVehicleConfig struct {
	SetPerVehicleConfig *SoftwareUpdateRequest `protobuf:"bytes,2023,opt,name=set_per_vehicle_config,json=setPerVehicleConfig,proto3,oneof"`
}

type Request_DishAviationTest struct {
	DishAviationTest *DishAviationTestRequest `protobuf:"bytes,2024,opt,name=dish_aviation_test,json=dishAviationTest,proto3,oneof"`
}

type Request_WifiGetClients struct {
	WifiGetClients *WifiGetClientsRequest `protobuf:"bytes,3002,opt,name=wifi_get_clients,json=wifiGetClients,proto3,oneof"`
}

type Request_WifiGetPingMetrics struct {
	WifiGetPingMetrics *WifiGetPingMetricsRequest `protobuf:"bytes,3007,opt,name=wifi_get_ping_metrics,json=wifiGetPingMetrics,proto3,oneof"`
}

type Request_WifiSetConfig struct {
	WifiSetConfig *WifiSetConfigRequest `protobuf:"bytes,3001,opt,name=wifi_set_config,json=wifiSetConfig,proto3,oneof"`
}

type Request_WifiGetConfig struct {
	WifiGetConfig *WifiGetConfigRequest `protobuf:"bytes,3009,opt,name=wifi_get_config,json=wifiGetConfig,proto3,oneof"`
}

type Request_WifiSetup struct {
	WifiSetup *WifiSetupRequest `protobuf:"bytes,3003,opt,name=wifi_setup,json=wifiSetup,proto3,oneof"`
}

type Request_WifiSetMeshDeviceTrust struct {
	WifiSetMeshDeviceTrust *WifiSetMeshDeviceTrustRequest `protobuf:"bytes,3012,opt,name=wifi_set_mesh_device_trust,json=wifiSetMeshDeviceTrust,proto3,oneof"`
}

type Request_WifiSetMeshConfig struct {
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	WifiSetMeshConfig *WifiSetMeshConfigRequest `protobuf:"bytes,3013,opt,name=wifi_set_mesh_config,json=wifiSetMeshConfig,proto3,oneof"`
}

type Request_WifiGetClientHistory struct {
	WifiGetClientHistory *WifiGetClientHistoryRequest `protobuf:"bytes,3015,opt,name=wifi_get_client_history,json=wifiGetClientHistory,proto3,oneof"`
}

type Request_WifiSetClientGivenName struct {
	WifiSetClientGivenName *WifiSetClientGivenNameRequest `protobuf:"bytes,3017,opt,name=wifi_set_client_given_name,json=wifiSetClientGivenName,proto3,oneof"`
}

type Request_WifiSetAviationConformed struct {
	WifiSetAviationConformed *WifiSetAviationConformedRequest `protobuf:"bytes,3016,opt,name=wifi_set_aviation_conformed,json=wifiSetAviationConformed,proto3,oneof"`
}

type Request_WifiSelfTest struct {
	WifiSelfTest *WifiSelfTestRequest `protobuf:"bytes,3018,opt,name=wifi_self_test,json=wifiSelfTest,proto3,oneof"`
}

type Request_WifiRunSelfTest struct {
	WifiRunSelfTest *WifiRunSelfTestRequest `protobuf:"bytes,3028,opt,name=wifi_run_self_test,json=wifiRunSelfTest,proto3,oneof"`
}

type Request_WifiCalibrationMode struct {
	WifiCalibrationMode *WifiCalibrationModeRequest `protobuf:"bytes,3019,opt,name=wifi_calibration_mode,json=wifiCalibrationMode,proto3,oneof"`
}

type Request_WifiGuestInfo struct {
	WifiGuestInfo *WifiGuestInfoRequest `protobuf:"bytes,3020,opt,name=wifi_guest_info,json=wifiGuestInfo,proto3,oneof"`
}

type Request_WifiRfTest struct {
	WifiRfTest *WifiRfTestRequest `protobuf:"bytes,3021,opt,name=wifi_rf_test,json=wifiRfTest,proto3,oneof"`
}

type Request_WifiGetFirewall struct {
	WifiGetFirewall *WifiGetFirewallRequest `protobuf:"bytes,3024,opt,name=wifi_get_firewall,json=wifiGetFirewall,proto3,oneof"`
}

type Request_WifiTogglePoeNegotiation struct {
	WifiTogglePoeNegotiation *WifiTogglePoeNegotiationRequest `protobuf:"bytes,3025,opt,name=wifi_toggle_poe_negotiation,json=wifiTogglePoeNegotiation,proto3,oneof"`
}

type Request_WifiFactoryTestCommand struct {
	WifiFactoryTestCommand *WifiFactoryTestCommandRequest `protobuf:"bytes,3026,opt,name=wifi_factory_test_command,json=wifiFactoryTestCommand,proto3,oneof"`
}

type Request_WifiStartLocalTelemProxy struct {
	WifiStartLocalTelemProxy *WifiStartLocalTelemProxyRequest `protobuf:"bytes,3027,opt,name=wifi_start_local_telem_proxy,json=wifiStartLocalTelemProxy,proto3,oneof"`
}

type Request_WifiBackhaulStats struct {
	WifiBackhaulStats *WifiBackhaulStatsRequest `protobuf:"bytes,3029,opt,name=wifi_backhaul_stats,json=wifiBackhaulStats,proto3,oneof"`
}

type Request_WifiToggleUmbilicalMode struct {
	WifiToggleUmbilicalMode *WifiToggleUmbilicalModeRequest `protobuf:"bytes,3030,opt,name=wifi_toggle_umbilical_mode,json=wifiToggleUmbilicalMode,proto3,oneof"`
}

type Request_WifiClientSandbox struct {
	WifiClientSandbox *WifiClientSandboxRequest `protobuf:"bytes,3031,opt,name=wifi_client_sandbox,json=wifiClientSandbox,proto3,oneof"`
}

type Request_TransceiverIfLoopbackTest struct {
	TransceiverIfLoopbackTest *TransceiverIFLoopbackTestRequest `protobuf:"bytes,4001,opt,name=transceiver_if_loopback_test,json=transceiverIfLoopbackTest,proto3,oneof"`
}

type Request_TransceiverGetStatus struct {
	TransceiverGetStatus *TransceiverGetStatusRequest `protobuf:"bytes,4003,opt,name=transceiver_get_status,json=transceiverGetStatus,proto3,oneof"`
}

type Request_TransceiverGetTelemetry struct {
	TransceiverGetTelemetry *TransceiverGetTelemetryRequest `protobuf:"bytes,4004,opt,name=transceiver_get_telemetry,json=transceiverGetTelemetry,proto3,oneof"`
}

type Request_StartUnlock struct {
	StartUnlock *unlock.StartUnlockRequest `protobuf:"bytes,5000,opt,name=start_unlock,json=startUnlock,proto3,oneof"`
}

type Request_FinishUnlock struct {
	FinishUnlock *unlock.FinishUnlockRequest `protobuf:"bytes,5001,opt,name=finish_unlock,json=finishUnlock,proto3,oneof"`
}

type Request_GetDiagnostics struct {
	GetDiagnostics *GetDiagnosticsRequest `protobuf:"bytes,6000,opt,name=get_diagnostics,json=getDiagnostics,proto3,oneof"`
}

func (*Request_SignedRequest) isRequest_Request() {}

func (*Request_GetNextId) isRequest_Request() {}

func (*Request_SensitiveRequest) isRequest_Request() {}

func (*Request_Authenticate) isRequest_Request() {}

func (*Request_EnableDebugTelem) isRequest_Request() {}

func (*Request_FactoryReset) isRequest_Request() {}

func (*Request_GetDeviceInfo) isRequest_Request() {}

func (*Request_GetHistory) isRequest_Request() {}

func (*Request_GetLog) isRequest_Request() {}

func (*Request_GetNetworkInterfaces) isRequest_Request() {}

func (*Request_GetPing) isRequest_Request() {}

func (*Request_PingHost) isRequest_Request() {}

func (*Request_GetStatus) isRequest_Request() {}

func (*Request_Reboot) isRequest_Request() {}

func (*Request_SetSku) isRequest_Request() {}

func (*Request_SetTrustedKeys) isRequest_Request() {}

func (*Request_SpeedTest) isRequest_Request() {}

func (*Request_Update) isRequest_Request() {}

func (*Request_GetLocation) isRequest_Request() {}

func (*Request_GetHeapDump) isRequest_Request() {}

func (*Request_RestartControl) isRequest_Request() {}

func (*Request_Fuse) isRequest_Request() {}

func (*Request_GetPersistentStats) isRequest_Request() {}

func (*Request_GetConnections) isRequest_Request() {}

func (*Request_StartSpeedtest) isRequest_Request() {}

func (*Request_GetSpeedtestStatus) isRequest_Request() {}

func (*Request_ReportClientSpeedtest) isRequest_Request() {}

func (*Request_InitiateRemoteSsh) isRequest_Request() {}

func (*Request_SelfTest) isRequest_Request() {}

func (*Request_SetTestMode) isRequest_Request() {}

func (*Request_SoftwareUpdate) isRequest_Request() {}

func (*Request_IqCapture) isRequest_Request() {}

func (*Request_GetRadioStats) isRequest_Request() {}

func (*Request_Time) isRequest_Request() {}

func (*Request_RunIperfServer) isRequest_Request() {}

func (*Request_TcpConnectivityTest) isRequest_Request() {}

func (*Request_UdpConnectivityTest) isRequest_Request() {}

func (*Request_GetGoroutineStackTraces) isRequest_Request() {}

func (*Request_DishStow) isRequest_Request() {}

func (*Request_DishGetContext) isRequest_Request() {}

func (*Request_DishGetObstructionMap) isRequest_Request() {}

func (*Request_DishSetEmc) isRequest_Request() {}

func (*Request_DishGetEmc) isRequest_Request() {}

func (*Request_DishSetConfig) isRequest_Request() {}

func (*Request_DishGetConfig) isRequest_Request() {}

func (*Request_DishPowerSave) isRequest_Request() {}

func (*Request_DishInhibitGps) isRequest_Request() {}

func (*Request_DishGetData) isRequest_Request() {}

func (*Request_DishClearObstructionMap) isRequest_Request() {}

func (*Request_DishSetMaxPowerTestMode) isRequest_Request() {}

func (*Request_DishActivateRssiScan) isRequest_Request() {}

func (*Request_DishGetRssiScanResult) isRequest_Request() {}

func (*Request_DishFactoryReset) isRequest_Request() {}

func (*Request_ResetButton) isRequest_Request() {}

func (*Request_SetPerVehicleConfig) isRequest_Request() {}

func (*Request_DishAviationTest) isRequest_Request() {}

func (*Request_WifiGetClients) isRequest_Request() {}

func (*Request_WifiGetPingMetrics) isRequest_Request() {}

func (*Request_WifiSetConfig) isRequest_Request() {}

func (*Request_WifiGetConfig) isRequest_Request() {}

func (*Request_WifiSetup) isRequest_Request() {}

func (*Request_WifiSetMeshDeviceTrust) isRequest_Request() {}

func (*Request_WifiSetMeshConfig) isRequest_Request() {}

func (*Request_WifiGetClientHistory) isRequest_Request() {}

func (*Request_WifiSetClientGivenName) isRequest_Request() {}

func (*Request_WifiSetAviationConformed) isRequest_Request() {}

func (*Request_WifiSelfTest) isRequest_Request() {}

func (*Request_WifiRunSelfTest) isRequest_Request() {}

func (*Request_WifiCalibrationMode) isRequest_Request() {}

func (*Request_WifiGuestInfo) isRequest_Request() {}

func (*Request_WifiRfTest) isRequest_Request() {}

func (*Request_WifiGetFirewall) isRequest_Request() {}

func (*Request_WifiTogglePoeNegotiation) isRequest_Request() {}

func (*Request_WifiFactoryTestCommand) isRequest_Request() {}

func (*Request_WifiStartLocalTelemProxy) isRequest_Request() {}

func (*Request_WifiBackhaulStats) isRequest_Request() {}

func (*Request_WifiToggleUmbilicalMode) isRequest_Request() {}

func (*Request_WifiClientSandbox) isRequest_Request() {}

func (*Request_TransceiverIfLoopbackTest) isRequest_Request() {}

func (*Request_TransceiverGetStatus) isRequest_Request() {}

func (*Request_TransceiverGetTelemetry) isRequest_Request() {}

func (*Request_StartUnlock) isRequest_Request() {}

func (*Request_FinishUnlock) isRequest_Request() {}

func (*Request_GetDiagnostics) isRequest_Request() {}

type Response struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status     *status.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ApiVersion uint64                 `protobuf:"varint,3,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// Types that are valid to be assigned to Response:
	//
	//	*Response_GetNextId
	//	*Response_EnableDebugTelem
	//	*Response_FactoryReset
	//	*Response_GetDeviceInfo
	//	*Response_GetLog
	//	*Response_GetNetworkInterfaces
	//	*Response_GetPing
	//	*Response_PingHost
	//	*Response_Reboot
	//	*Response_SpeedTest
	//	*Response_SetSku
	//	*Response_SetTrustedKeys
	//	*Response_Update
	//	*Response_GetLocation
	//	*Response_GetHeapDump
	//	*Response_RestartControl
	//	*Response_Fuse
	//	*Response_GetConnections
	//	*Response_StartSpeedtest
	//	*Response_GetSpeedtestStatus
	//	*Response_ReportClientSpeedtest
	//	*Response_InitiateRemoteSsh
	//	*Response_SelfTest
	//	*Response_SetTestMode
	//	*Response_SoftwareUpdate
	//	*Response_GetRadioStats
	//	*Response_Time
	//	*Response_RunIperfServer
	//	*Response_GetGoroutineStackTraces
	//	*Response_DishAuthenticate
	//	*Response_DishGetContext
	//	*Response_DishGetHistory
	//	*Response_DishGetStatus
	//	*Response_DishGetObstructionMap
	//	*Response_DishStow
	//	*Response_DishSetEmc
	//	*Response_DishGetEmc
	//	*Response_DishSetConfig
	//	*Response_DishGetConfig
	//	*Response_DishInhibitGps
	//	*Response_DishClearObstructionMap
	//	*Response_DishSetMaxPowerTestMode
	//	*Response_DishActivateRssiScan
	//	*Response_DishGetRssiScanResult
	//	*Response_DishFactoryReset
	//	*Response_ResetButton
	//	*Response_SetPerVehicleConfig
	//	*Response_DishAviationTest
	//	*Response_WifiAuthenticate
	//	*Response_WifiGetClients
	//	*Response_WifiGetHistory
	//	*Response_WifiGetPingMetrics
	//	*Response_WifiGetStatus
	//	*Response_WifiSetConfig
	//	*Response_WifiGetConfig
	//	*Response_WifiSetup
	//	*Response_WifiGetPersistentStats
	//	*Response_WifiSetMeshDeviceTrust
	//	*Response_WifiSetMeshConfig
	//	*Response_WifiGetClientHistory
	//	*Response_WifiSelfTest
	//	*Response_WifiGuestInfo
	//	*Response_WifiRfTest
	//	*Response_WifiGetFirewall
	//	*Response_WifiFactoryTestCommand
	//	*Response_WifiBackhaulStats
	//	*Response_WifiClientSandbox
	//	*Response_WifiUpdate
	//	*Response_TransceiverIfLoopbackTest
	//	*Response_TransceiverGetStatus
	//	*Response_TransceiverGetTelemetry
	//	*Response_StartUnlock
	//	*Response_FinishUnlock
	//	*Response_WifiGetDiagnostics
	//	*Response_DishGetDiagnostics
	Response      isResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_spacex_api_device_device_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Response) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Response) GetApiVersion() uint64 {
	if x != nil {
		return x.ApiVersion
	}
	return 0
}

func (x *Response) GetResponse() isResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Response) GetGetNextId() *GetNextIdResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetNextId); ok {
			return x.GetNextId
		}
	}
	return nil
}

func (x *Response) GetEnableDebugTelem() *EnableDebugTelemResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_EnableDebugTelem); ok {
			return x.EnableDebugTelem
		}
	}
	return nil
}

func (x *Response) GetFactoryReset() *FactoryResetResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_FactoryReset); ok {
			return x.FactoryReset
		}
	}
	return nil
}

func (x *Response) GetGetDeviceInfo() *GetDeviceInfoResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetDeviceInfo); ok {
			return x.GetDeviceInfo
		}
	}
	return nil
}

func (x *Response) GetGetLog() *GetLogResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetLog); ok {
			return x.GetLog
		}
	}
	return nil
}

func (x *Response) GetGetNetworkInterfaces() *GetNetworkInterfacesResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetNetworkInterfaces); ok {
			return x.GetNetworkInterfaces
		}
	}
	return nil
}

func (x *Response) GetGetPing() *GetPingResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetPing); ok {
			return x.GetPing
		}
	}
	return nil
}

func (x *Response) GetPingHost() *PingHostResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_PingHost); ok {
			return x.PingHost
		}
	}
	return nil
}

func (x *Response) GetReboot() *RebootResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_Reboot); ok {
			return x.Reboot
		}
	}
	return nil
}

func (x *Response) GetSpeedTest() *SpeedTestResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_SpeedTest); ok {
			return x.SpeedTest
		}
	}
	return nil
}

func (x *Response) GetSetSku() *SetSkuResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_SetSku); ok {
			return x.SetSku
		}
	}
	return nil
}

func (x *Response) GetSetTrustedKeys() *SetTrustedKeysResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_SetTrustedKeys); ok {
			return x.SetTrustedKeys
		}
	}
	return nil
}

func (x *Response) GetUpdate() *UpdateResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *Response) GetGetLocation() *GetLocationResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetLocation); ok {
			return x.GetLocation
		}
	}
	return nil
}

func (x *Response) GetGetHeapDump() *GetHeapDumpResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetHeapDump); ok {
			return x.GetHeapDump
		}
	}
	return nil
}

func (x *Response) GetRestartControl() *RestartControlResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_RestartControl); ok {
			return x.RestartControl
		}
	}
	return nil
}

func (x *Response) GetFuse() *FuseResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_Fuse); ok {
			return x.Fuse
		}
	}
	return nil
}

func (x *Response) GetGetConnections() *GetConnectionsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetConnections); ok {
			return x.GetConnections
		}
	}
	return nil
}

func (x *Response) GetStartSpeedtest() *StartSpeedtestResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_StartSpeedtest); ok {
			return x.StartSpeedtest
		}
	}
	return nil
}

func (x *Response) GetGetSpeedtestStatus() *GetSpeedtestStatusResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetSpeedtestStatus); ok {
			return x.GetSpeedtestStatus
		}
	}
	return nil
}

func (x *Response) GetReportClientSpeedtest() *ReportClientSpeedtestResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_ReportClientSpeedtest); ok {
			return x.ReportClientSpeedtest
		}
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *Response) GetInitiateRemoteSsh() *InitiateRemoteSshResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_InitiateRemoteSsh); ok {
			return x.InitiateRemoteSsh
		}
	}
	return nil
}

func (x *Response) GetSelfTest() *SelfTestResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_SelfTest); ok {
			return x.SelfTest
		}
	}
	return nil
}

func (x *Response) GetSetTestMode() *SetTestModeResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_SetTestMode); ok {
			return x.SetTestMode
		}
	}
	return nil
}

func (x *Response) GetSoftwareUpdate() *SoftwareUpdateResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_SoftwareUpdate); ok {
			return x.SoftwareUpdate
		}
	}
	return nil
}

func (x *Response) GetGetRadioStats() *GetRadioStatsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetRadioStats); ok {
			return x.GetRadioStats
		}
	}
	return nil
}

func (x *Response) GetTime() *GetTimeResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_Time); ok {
			return x.Time
		}
	}
	return nil
}

func (x *Response) GetRunIperfServer() *RunIperfServerResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_RunIperfServer); ok {
			return x.RunIperfServer
		}
	}
	return nil
}

func (x *Response) GetGetGoroutineStackTraces() *GetGoroutineStackTracesResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_GetGoroutineStackTraces); ok {
			return x.GetGoroutineStackTraces
		}
	}
	return nil
}

func (x *Response) GetDishAuthenticate() *DishAuthenticateResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishAuthenticate); ok {
			return x.DishAuthenticate
		}
	}
	return nil
}

func (x *Response) GetDishGetContext() *DishGetContextResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishGetContext); ok {
			return x.DishGetContext
		}
	}
	return nil
}

func (x *Response) GetDishGetHistory() *DishGetHistoryResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishGetHistory); ok {
			return x.DishGetHistory
		}
	}
	return nil
}

func (x *Response) GetDishGetStatus() *DishGetStatusResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishGetStatus); ok {
			return x.DishGetStatus
		}
	}
	return nil
}

func (x *Response) GetDishGetObstructionMap() *DishGetObstructionMapResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishGetObstructionMap); ok {
			return x.DishGetObstructionMap
		}
	}
	return nil
}

func (x *Response) GetDishStow() *DishStowResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishStow); ok {
			return x.DishStow
		}
	}
	return nil
}

func (x *Response) GetDishSetEmc() *DishSetEmcResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishSetEmc); ok {
			return x.DishSetEmc
		}
	}
	return nil
}

func (x *Response) GetDishGetEmc() *DishGetEmcResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishGetEmc); ok {
			return x.DishGetEmc
		}
	}
	return nil
}

func (x *Response) GetDishSetConfig() *DishSetConfigResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishSetConfig); ok {
			return x.DishSetConfig
		}
	}
	return nil
}

func (x *Response) GetDishGetConfig() *DishGetConfigResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishGetConfig); ok {
			return x.DishGetConfig
		}
	}
	return nil
}

func (x *Response) GetDishInhibitGps() *DishInhibitGpsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishInhibitGps); ok {
			return x.DishInhibitGps
		}
	}
	return nil
}

func (x *Response) GetDishClearObstructionMap() *DishClearObstructionMapResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishClearObstructionMap); ok {
			return x.DishClearObstructionMap
		}
	}
	return nil
}

func (x *Response) GetDishSetMaxPowerTestMode() *DishSetMaxPowerTestModeResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishSetMaxPowerTestMode); ok {
			return x.DishSetMaxPowerTestMode
		}
	}
	return nil
}

func (x *Response) GetDishActivateRssiScan() *DishActivateRssiScanResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishActivateRssiScan); ok {
			return x.DishActivateRssiScan
		}
	}
	return nil
}

func (x *Response) GetDishGetRssiScanResult() *DishGetRssiScanResultResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishGetRssiScanResult); ok {
			return x.DishGetRssiScanResult
		}
	}
	return nil
}

func (x *Response) GetDishFactoryReset() *DishFactoryResetResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishFactoryReset); ok {
			return x.DishFactoryReset
		}
	}
	return nil
}

func (x *Response) GetResetButton() *ResetButtonResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_ResetButton); ok {
			return x.ResetButton
		}
	}
	return nil
}

func (x *Response) GetSetPerVehicleConfig() *SetPerVehicleConfigResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_SetPerVehicleConfig); ok {
			return x.SetPerVehicleConfig
		}
	}
	return nil
}

func (x *Response) GetDishAviationTest() *DishAviationTestResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishAviationTest); ok {
			return x.DishAviationTest
		}
	}
	return nil
}

func (x *Response) GetWifiAuthenticate() *WifiAuthenticateResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiAuthenticate); ok {
			return x.WifiAuthenticate
		}
	}
	return nil
}

func (x *Response) GetWifiGetClients() *WifiGetClientsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetClients); ok {
			return x.WifiGetClients
		}
	}
	return nil
}

func (x *Response) GetWifiGetHistory() *WifiGetHistoryResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetHistory); ok {
			return x.WifiGetHistory
		}
	}
	return nil
}

func (x *Response) GetWifiGetPingMetrics() *WifiGetPingMetricsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetPingMetrics); ok {
			return x.WifiGetPingMetrics
		}
	}
	return nil
}

func (x *Response) GetWifiGetStatus() *WifiGetStatusResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetStatus); ok {
			return x.WifiGetStatus
		}
	}
	return nil
}

func (x *Response) GetWifiSetConfig() *WifiSetConfigResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiSetConfig); ok {
			return x.WifiSetConfig
		}
	}
	return nil
}

func (x *Response) GetWifiGetConfig() *WifiGetConfigResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetConfig); ok {
			return x.WifiGetConfig
		}
	}
	return nil
}

func (x *Response) GetWifiSetup() *WifiSetupResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiSetup); ok {
			return x.WifiSetup
		}
	}
	return nil
}

func (x *Response) GetWifiGetPersistentStats() *WifiGetPersistentStatsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetPersistentStats); ok {
			return x.WifiGetPersistentStats
		}
	}
	return nil
}

func (x *Response) GetWifiSetMeshDeviceTrust() *WifiSetMeshDeviceTrustResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiSetMeshDeviceTrust); ok {
			return x.WifiSetMeshDeviceTrust
		}
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *Response) GetWifiSetMeshConfig() *WifiSetMeshConfigResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiSetMeshConfig); ok {
			return x.WifiSetMeshConfig
		}
	}
	return nil
}

func (x *Response) GetWifiGetClientHistory() *WifiGetClientHistoryResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetClientHistory); ok {
			return x.WifiGetClientHistory
		}
	}
	return nil
}

func (x *Response) GetWifiSelfTest() *WifiSelfTestResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiSelfTest); ok {
			return x.WifiSelfTest
		}
	}
	return nil
}

func (x *Response) GetWifiGuestInfo() *WifiGuestInfoResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGuestInfo); ok {
			return x.WifiGuestInfo
		}
	}
	return nil
}

func (x *Response) GetWifiRfTest() *WifiRfTestResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiRfTest); ok {
			return x.WifiRfTest
		}
	}
	return nil
}

func (x *Response) GetWifiGetFirewall() *WifiGetFirewallResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetFirewall); ok {
			return x.WifiGetFirewall
		}
	}
	return nil
}

func (x *Response) GetWifiFactoryTestCommand() *WifiFactoryTestCommandResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiFactoryTestCommand); ok {
			return x.WifiFactoryTestCommand
		}
	}
	return nil
}

func (x *Response) GetWifiBackhaulStats() *WifiBackhaulStatsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiBackhaulStats); ok {
			return x.WifiBackhaulStats
		}
	}
	return nil
}

func (x *Response) GetWifiClientSandbox() *WifiClientSandboxResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiClientSandbox); ok {
			return x.WifiClientSandbox
		}
	}
	return nil
}

func (x *Response) GetWifiUpdate() *WifiUpdateResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiUpdate); ok {
			return x.WifiUpdate
		}
	}
	return nil
}

func (x *Response) GetTransceiverIfLoopbackTest() *TransceiverIFLoopbackTestResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_TransceiverIfLoopbackTest); ok {
			return x.TransceiverIfLoopbackTest
		}
	}
	return nil
}

func (x *Response) GetTransceiverGetStatus() *TransceiverGetStatusResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_TransceiverGetStatus); ok {
			return x.TransceiverGetStatus
		}
	}
	return nil
}

func (x *Response) GetTransceiverGetTelemetry() *TransceiverGetTelemetryResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_TransceiverGetTelemetry); ok {
			return x.TransceiverGetTelemetry
		}
	}
	return nil
}

func (x *Response) GetStartUnlock() *unlock.StartUnlockResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_StartUnlock); ok {
			return x.StartUnlock
		}
	}
	return nil
}

func (x *Response) GetFinishUnlock() *unlock.FinishUnlockResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_FinishUnlock); ok {
			return x.FinishUnlock
		}
	}
	return nil
}

func (x *Response) GetWifiGetDiagnostics() *WifiGetDiagnosticsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_WifiGetDiagnostics); ok {
			return x.WifiGetDiagnostics
		}
	}
	return nil
}

func (x *Response) GetDishGetDiagnostics() *DishGetDiagnosticsResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_DishGetDiagnostics); ok {
			return x.DishGetDiagnostics
		}
	}
	return nil
}

type isResponse_Response interface {
	isResponse_Response()
}

type Response_GetNextId struct {
	GetNextId *GetNextIdResponse `protobuf:"bytes,1006,opt,name=get_next_id,json=getNextId,proto3,oneof"`
}

type Response_EnableDebugTelem struct {
	EnableDebugTelem *EnableDebugTelemResponse `protobuf:"bytes,1034,opt,name=enable_debug_telem,json=enableDebugTelem,proto3,oneof"`
}

type Response_FactoryReset struct {
	FactoryReset *FactoryResetResponse `protobuf:"bytes,1011,opt,name=factory_reset,json=factoryReset,proto3,oneof"`
}

type Response_GetDeviceInfo struct {
	GetDeviceInfo *GetDeviceInfoResponse `protobuf:"bytes,1004,opt,name=get_device_info,json=getDeviceInfo,proto3,oneof"`
}

type Response_GetLog struct {
	GetLog *GetLogResponse `protobuf:"bytes,1012,opt,name=get_log,json=getLog,proto3,oneof"`
}

type Response_GetNetworkInterfaces struct {
	GetNetworkInterfaces *GetNetworkInterfacesResponse `protobuf:"bytes,1015,opt,name=get_network_interfaces,json=getNetworkInterfaces,proto3,oneof"`
}

type Response_GetPing struct {
	GetPing *GetPingResponse `protobuf:"bytes,1009,opt,name=get_ping,json=getPing,proto3,oneof"`
}

type Response_PingHost struct {
	PingHost *PingHostResponse `protobuf:"bytes,1016,opt,name=ping_host,json=pingHost,proto3,oneof"`
}

type Response_Reboot struct {
	Reboot *RebootResponse `protobuf:"bytes,1001,opt,name=reboot,proto3,oneof"`
}

type Response_SpeedTest struct {
	SpeedTest *SpeedTestResponse `protobuf:"bytes,1003,opt,name=speed_test,json=speedTest,proto3,oneof"`
}

type Response_SetSku struct {
	SetSku *SetSkuResponse `protobuf:"bytes,1013,opt,name=set_sku,json=setSku,proto3,oneof"`
}

type Response_SetTrustedKeys struct {
	SetTrustedKeys *SetTrustedKeysResponse `protobuf:"bytes,1010,opt,name=set_trusted_keys,json=setTrustedKeys,proto3,oneof"`
}

type Response_Update struct {
	Update *UpdateResponse `protobuf:"bytes,1014,opt,name=update,proto3,oneof"`
}

type Response_GetLocation struct {
	GetLocation *GetLocationResponse `protobuf:"bytes,1017,opt,name=get_location,json=getLocation,proto3,oneof"`
}

type Response_GetHeapDump struct {
	GetHeapDump *GetHeapDumpResponse `protobuf:"bytes,1019,opt,name=get_heap_dump,json=getHeapDump,proto3,oneof"`
}

type Response_RestartControl struct {
	RestartControl *RestartControlResponse `protobuf:"bytes,1020,opt,name=restart_control,json=restartControl,proto3,oneof"`
}

type Response_Fuse struct {
	Fuse *FuseResponse `protobuf:"bytes,1021,opt,name=fuse,proto3,oneof"`
}

type Response_GetConnections struct {
	GetConnections *GetConnectionsResponse `protobuf:"bytes,1023,opt,name=get_connections,json=getConnections,proto3,oneof"`
}

type Response_StartSpeedtest struct {
	StartSpeedtest *StartSpeedtestResponse `protobuf:"bytes,1027,opt,name=start_speedtest,json=startSpeedtest,proto3,oneof"`
}

type Response_GetSpeedtestStatus struct {
	GetSpeedtestStatus *GetSpeedtestStatusResponse `protobuf:"bytes,1028,opt,name=get_speedtest_status,json=getSpeedtestStatus,proto3,oneof"`
}

type Response_ReportClientSpeedtest struct {
	ReportClientSpeedtest *ReportClientSpeedtestResponse `protobuf:"bytes,1029,opt,name=report_client_speedtest,json=reportClientSpeedtest,proto3,oneof"`
}

type Response_InitiateRemoteSsh struct {
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	InitiateRemoteSsh *InitiateRemoteSshResponse `protobuf:"bytes,1030,opt,name=initiate_remote_ssh,json=initiateRemoteSsh,proto3,oneof"`
}

type Response_SelfTest struct {
	SelfTest *SelfTestResponse `protobuf:"bytes,1031,opt,name=self_test,json=selfTest,proto3,oneof"`
}

type Response_SetTestMode struct {
	SetTestMode *SetTestModeResponse `protobuf:"bytes,1032,opt,name=set_test_mode,json=setTestMode,proto3,oneof"`
}

type Response_SoftwareUpdate struct {
	SoftwareUpdate *SoftwareUpdateResponse `protobuf:"bytes,1033,opt,name=software_update,json=softwareUpdate,proto3,oneof"`
}

type Response_GetRadioStats struct {
	GetRadioStats *GetRadioStatsResponse `protobuf:"bytes,1035,opt,name=get_radio_stats,json=getRadioStats,proto3,oneof"`
}

type Response_Time struct {
	Time *GetTimeResponse `protobuf:"bytes,1037,opt,name=time,proto3,oneof"`
}

type Response_RunIperfServer struct {
	RunIperfServer *RunIperfServerResponse `protobuf:"bytes,1038,opt,name=run_iperf_server,json=runIperfServer,proto3,oneof"`
}

type Response_GetGoroutineStackTraces struct {
	GetGoroutineStackTraces *GetGoroutineStackTracesResponse `protobuf:"bytes,1041,opt,name=get_goroutine_stack_traces,json=getGoroutineStackTraces,proto3,oneof"`
}

type Response_DishAuthenticate struct {
	DishAuthenticate *DishAuthenticateResponse `protobuf:"bytes,2005,opt,name=dish_authenticate,json=dishAuthenticate,proto3,oneof"`
}

type Response_DishGetContext struct {
	DishGetContext *DishGetContextResponse `protobuf:"bytes,2003,opt,name=dish_get_context,json=dishGetContext,proto3,oneof"`
}

type Response_DishGetHistory struct {
	DishGetHistory *DishGetHistoryResponse `protobuf:"bytes,2006,opt,name=dish_get_history,json=dishGetHistory,proto3,oneof"`
}

type Response_DishGetStatus struct {
	DishGetStatus *DishGetStatusResponse `protobuf:"bytes,2004,opt,name=dish_get_status,json=dishGetStatus,proto3,oneof"`
}

type Response_DishGetObstructionMap struct {
	DishGetObstructionMap *DishGetObstructionMapResponse `protobuf:"bytes,2008,opt,name=dish_get_obstruction_map,json=dishGetObstructionMap,proto3,oneof"`
}

type Response_DishStow struct {
	DishStow *DishStowResponse `protobuf:"bytes,2002,opt,name=dish_stow,json=dishStow,proto3,oneof"`
}

type Response_DishSetEmc struct {
	DishSetEmc *DishSetEmcResponse `protobuf:"bytes,2007,opt,name=dish_set_emc,json=dishSetEmc,proto3,oneof"`
}

type Response_DishGetEmc struct {
	DishGetEmc *DishGetEmcResponse `protobuf:"bytes,2009,opt,name=dish_get_emc,json=dishGetEmc,proto3,oneof"`
}

type Response_DishSetConfig struct {
	DishSetConfig *DishSetConfigResponse `protobuf:"bytes,2010,opt,name=dish_set_config,json=dishSetConfig,proto3,oneof"`
}

type Response_DishGetConfig struct {
	DishGetConfig *DishGetConfigResponse `protobuf:"bytes,2011,opt,name=dish_get_config,json=dishGetConfig,proto3,oneof"`
}

type Response_DishInhibitGps struct {
	DishInhibitGps *DishInhibitGpsResponse `protobuf:"bytes,2013,opt,name=dish_inhibit_gps,json=dishInhibitGps,proto3,oneof"`
}

type Response_DishClearObstructionMap struct {
	DishClearObstructionMap *DishClearObstructionMapResponse `protobuf:"bytes,2015,opt,name=dish_clear_obstruction_map,json=dishClearObstructionMap,proto3,oneof"`
}

type Response_DishSetMaxPowerTestMode struct {
	DishSetMaxPowerTestMode *DishSetMaxPowerTestModeResponse `protobuf:"bytes,2018,opt,name=dish_set_max_power_test_mode,json=dishSetMaxPowerTestMode,proto3,oneof"`
}

type Response_DishActivateRssiScan struct {
	DishActivateRssiScan *DishActivateRssiScanResponse `protobuf:"bytes,2019,opt,name=dish_activate_rssi_scan,json=dishActivateRssiScan,proto3,oneof"`
}

type Response_DishGetRssiScanResult struct {
	DishGetRssiScanResult *DishGetRssiScanResultResponse `protobuf:"bytes,2020,opt,name=dish_get_rssi_scan_result,json=dishGetRssiScanResult,proto3,oneof"`
}

type Response_DishFactoryReset struct {
	DishFactoryReset *DishFactoryResetResponse `protobuf:"bytes,2021,opt,name=dish_factory_reset,json=dishFactoryReset,proto3,oneof"`
}

type Response_ResetButton struct {
	ResetButton *ResetButtonResponse `protobuf:"bytes,2022,opt,name=reset_button,json=resetButton,proto3,oneof"`
}

type Response_SetPerVehicleConfig struct {
	SetPerVehicleConfig *SetPerVehicleConfigResponse `protobuf:"bytes,2023,opt,name=set_per_vehicle_config,json=setPerVehicleConfig,proto3,oneof"`
}

type Response_DishAviationTest struct {
	DishAviationTest *DishAviationTestResponse `protobuf:"bytes,2024,opt,name=dish_aviation_test,json=dishAviationTest,proto3,oneof"`
}

type Response_WifiAuthenticate struct {
	WifiAuthenticate *WifiAuthenticateResponse `protobuf:"bytes,3005,opt,name=wifi_authenticate,json=wifiAuthenticate,proto3,oneof"`
}

type Response_WifiGetClients struct {
	WifiGetClients *WifiGetClientsResponse `protobuf:"bytes,3002,opt,name=wifi_get_clients,json=wifiGetClients,proto3,oneof"`
}

type Response_WifiGetHistory struct {
	WifiGetHistory *WifiGetHistoryResponse `protobuf:"bytes,3006,opt,name=wifi_get_history,json=wifiGetHistory,proto3,oneof"`
}

type Response_WifiGetPingMetrics struct {
	WifiGetPingMetrics *WifiGetPingMetricsResponse `protobuf:"bytes,3007,opt,name=wifi_get_ping_metrics,json=wifiGetPingMetrics,proto3,oneof"`
}

type Response_WifiGetStatus struct {
	WifiGetStatus *WifiGetStatusResponse `protobuf:"bytes,3004,opt,name=wifi_get_status,json=wifiGetStatus,proto3,oneof"`
}

type Response_WifiSetConfig struct {
	WifiSetConfig *WifiSetConfigResponse `protobuf:"bytes,3001,opt,name=wifi_set_config,json=wifiSetConfig,proto3,oneof"`
}

type Response_WifiGetConfig struct {
	WifiGetConfig *WifiGetConfigResponse `protobuf:"bytes,3009,opt,name=wifi_get_config,json=wifiGetConfig,proto3,oneof"`
}

type Response_WifiSetup struct {
	WifiSetup *WifiSetupResponse `protobuf:"bytes,3003,opt,name=wifi_setup,json=wifiSetup,proto3,oneof"`
}

type Response_WifiGetPersistentStats struct {
	WifiGetPersistentStats *WifiGetPersistentStatsResponse `protobuf:"bytes,3022,opt,name=wifi_get_persistent_stats,json=wifiGetPersistentStats,proto3,oneof"`
}

type Response_WifiSetMeshDeviceTrust struct {
	WifiSetMeshDeviceTrust *WifiSetMeshDeviceTrustResponse `protobuf:"bytes,3012,opt,name=wifi_set_mesh_device_trust,json=wifiSetMeshDeviceTrust,proto3,oneof"`
}

type Response_WifiSetMeshConfig struct {
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	WifiSetMeshConfig *WifiSetMeshConfigResponse `protobuf:"bytes,3013,opt,name=wifi_set_mesh_config,json=wifiSetMeshConfig,proto3,oneof"`
}

type Response_WifiGetClientHistory struct {
	WifiGetClientHistory *WifiGetClientHistoryResponse `protobuf:"bytes,3015,opt,name=wifi_get_client_history,json=wifiGetClientHistory,proto3,oneof"`
}

type Response_WifiSelfTest struct {
	WifiSelfTest *WifiSelfTestResponse `protobuf:"bytes,3016,opt,name=wifi_self_test,json=wifiSelfTest,proto3,oneof"`
}

type Response_WifiGuestInfo struct {
	WifiGuestInfo *WifiGuestInfoResponse `protobuf:"bytes,3020,opt,name=wifi_guest_info,json=wifiGuestInfo,proto3,oneof"`
}

type Response_WifiRfTest struct {
	WifiRfTest *WifiRfTestResponse `protobuf:"bytes,3021,opt,name=wifi_rf_test,json=wifiRfTest,proto3,oneof"`
}

type Response_WifiGetFirewall struct {
	WifiGetFirewall *WifiGetFirewallResponse `protobuf:"bytes,3024,opt,name=wifi_get_firewall,json=wifiGetFirewall,proto3,oneof"`
}

type Response_WifiFactoryTestCommand struct {
	WifiFactoryTestCommand *WifiFactoryTestCommandResponse `protobuf:"bytes,3025,opt,name=wifi_factory_test_command,json=wifiFactoryTestCommand,proto3,oneof"`
}

type Response_WifiBackhaulStats struct {
	WifiBackhaulStats *WifiBackhaulStatsResponse `protobuf:"bytes,3026,opt,name=wifi_backhaul_stats,json=wifiBackhaulStats,proto3,oneof"`
}

type Response_WifiClientSandbox struct {
	WifiClientSandbox *WifiClientSandboxResponse `protobuf:"bytes,3027,opt,name=wifi_client_sandbox,json=wifiClientSandbox,proto3,oneof"`
}

type Response_WifiUpdate struct {
	WifiUpdate *WifiUpdateResponse `protobuf:"bytes,3028,opt,name=wifi_update,json=wifiUpdate,proto3,oneof"`
}

type Response_TransceiverIfLoopbackTest struct {
	TransceiverIfLoopbackTest *TransceiverIFLoopbackTestResponse `protobuf:"bytes,4001,opt,name=transceiver_if_loopback_test,json=transceiverIfLoopbackTest,proto3,oneof"`
}

type Response_TransceiverGetStatus struct {
	TransceiverGetStatus *TransceiverGetStatusResponse `protobuf:"bytes,4003,opt,name=transceiver_get_status,json=transceiverGetStatus,proto3,oneof"`
}

type Response_TransceiverGetTelemetry struct {
	TransceiverGetTelemetry *TransceiverGetTelemetryResponse `protobuf:"bytes,4004,opt,name=transceiver_get_telemetry,json=transceiverGetTelemetry,proto3,oneof"`
}

type Response_StartUnlock struct {
	StartUnlock *unlock.StartUnlockResponse `protobuf:"bytes,5000,opt,name=start_unlock,json=startUnlock,proto3,oneof"`
}

type Response_FinishUnlock struct {
	FinishUnlock *unlock.FinishUnlockResponse `protobuf:"bytes,5001,opt,name=finish_unlock,json=finishUnlock,proto3,oneof"`
}

type Response_WifiGetDiagnostics struct {
	WifiGetDiagnostics *WifiGetDiagnosticsResponse `protobuf:"bytes,6000,opt,name=wifi_get_diagnostics,json=wifiGetDiagnostics,proto3,oneof"`
}

type Response_DishGetDiagnostics struct {
	DishGetDiagnostics *DishGetDiagnosticsResponse `protobuf:"bytes,6001,opt,name=dish_get_diagnostics,json=dishGetDiagnostics,proto3,oneof"`
}

func (*Response_GetNextId) isResponse_Response() {}

func (*Response_EnableDebugTelem) isResponse_Response() {}

func (*Response_FactoryReset) isResponse_Response() {}

func (*Response_GetDeviceInfo) isResponse_Response() {}

func (*Response_GetLog) isResponse_Response() {}

func (*Response_GetNetworkInterfaces) isResponse_Response() {}

func (*Response_GetPing) isResponse_Response() {}

func (*Response_PingHost) isResponse_Response() {}

func (*Response_Reboot) isResponse_Response() {}

func (*Response_SpeedTest) isResponse_Response() {}

func (*Response_SetSku) isResponse_Response() {}

func (*Response_SetTrustedKeys) isResponse_Response() {}

func (*Response_Update) isResponse_Response() {}

func (*Response_GetLocation) isResponse_Response() {}

func (*Response_GetHeapDump) isResponse_Response() {}

func (*Response_RestartControl) isResponse_Response() {}

func (*Response_Fuse) isResponse_Response() {}

func (*Response_GetConnections) isResponse_Response() {}

func (*Response_StartSpeedtest) isResponse_Response() {}

func (*Response_GetSpeedtestStatus) isResponse_Response() {}

func (*Response_ReportClientSpeedtest) isResponse_Response() {}

func (*Response_InitiateRemoteSsh) isResponse_Response() {}

func (*Response_SelfTest) isResponse_Response() {}

func (*Response_SetTestMode) isResponse_Response() {}

func (*Response_SoftwareUpdate) isResponse_Response() {}

func (*Response_GetRadioStats) isResponse_Response() {}

func (*Response_Time) isResponse_Response() {}

func (*Response_RunIperfServer) isResponse_Response() {}

func (*Response_GetGoroutineStackTraces) isResponse_Response() {}

func (*Response_DishAuthenticate) isResponse_Response() {}

func (*Response_DishGetContext) isResponse_Response() {}

func (*Response_DishGetHistory) isResponse_Response() {}

func (*Response_DishGetStatus) isResponse_Response() {}

func (*Response_DishGetObstructionMap) isResponse_Response() {}

func (*Response_DishStow) isResponse_Response() {}

func (*Response_DishSetEmc) isResponse_Response() {}

func (*Response_DishGetEmc) isResponse_Response() {}

func (*Response_DishSetConfig) isResponse_Response() {}

func (*Response_DishGetConfig) isResponse_Response() {}

func (*Response_DishInhibitGps) isResponse_Response() {}

func (*Response_DishClearObstructionMap) isResponse_Response() {}

func (*Response_DishSetMaxPowerTestMode) isResponse_Response() {}

func (*Response_DishActivateRssiScan) isResponse_Response() {}

func (*Response_DishGetRssiScanResult) isResponse_Response() {}

func (*Response_DishFactoryReset) isResponse_Response() {}

func (*Response_ResetButton) isResponse_Response() {}

func (*Response_SetPerVehicleConfig) isResponse_Response() {}

func (*Response_DishAviationTest) isResponse_Response() {}

func (*Response_WifiAuthenticate) isResponse_Response() {}

func (*Response_WifiGetClients) isResponse_Response() {}

func (*Response_WifiGetHistory) isResponse_Response() {}

func (*Response_WifiGetPingMetrics) isResponse_Response() {}

func (*Response_WifiGetStatus) isResponse_Response() {}

func (*Response_WifiSetConfig) isResponse_Response() {}

func (*Response_WifiGetConfig) isResponse_Response() {}

func (*Response_WifiSetup) isResponse_Response() {}

func (*Response_WifiGetPersistentStats) isResponse_Response() {}

func (*Response_WifiSetMeshDeviceTrust) isResponse_Response() {}

func (*Response_WifiSetMeshConfig) isResponse_Response() {}

func (*Response_WifiGetClientHistory) isResponse_Response() {}

func (*Response_WifiSelfTest) isResponse_Response() {}

func (*Response_WifiGuestInfo) isResponse_Response() {}

func (*Response_WifiRfTest) isResponse_Response() {}

func (*Response_WifiGetFirewall) isResponse_Response() {}

func (*Response_WifiFactoryTestCommand) isResponse_Response() {}

func (*Response_WifiBackhaulStats) isResponse_Response() {}

func (*Response_WifiClientSandbox) isResponse_Response() {}

func (*Response_WifiUpdate) isResponse_Response() {}

func (*Response_TransceiverIfLoopbackTest) isResponse_Response() {}

func (*Response_TransceiverGetStatus) isResponse_Response() {}

func (*Response_TransceiverGetTelemetry) isResponse_Response() {}

func (*Response_StartUnlock) isResponse_Response() {}

func (*Response_FinishUnlock) isResponse_Response() {}

func (*Response_WifiGetDiagnostics) isResponse_Response() {}

func (*Response_DishGetDiagnostics) isResponse_Response() {}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*Event_WifiNewClientConnected
	//	*Event_WifiAccountBonding
	//	*Event_WifiNewPeer
	//	*Event_WifiCloudStatus
	//	*Event_WifiClientSandbox
	Event         isEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_spacex_api_device_device_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{6}
}

func (x *Event) GetEvent() isEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Event) GetWifiNewClientConnected() *WifiNewClientConnectedEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_WifiNewClientConnected); ok {
			return x.WifiNewClientConnected
		}
	}
	return nil
}

func (x *Event) GetWifiAccountBonding() *WifiAccountBondingEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_WifiAccountBonding); ok {
			return x.WifiAccountBonding
		}
	}
	return nil
}

func (x *Event) GetWifiNewPeer() *WifiNewPeerEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_WifiNewPeer); ok {
			return x.WifiNewPeer
		}
	}
	return nil
}

func (x *Event) GetWifiCloudStatus() *WifiCloudStatusEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_WifiCloudStatus); ok {
			return x.WifiCloudStatus
		}
	}
	return nil
}

func (x *Event) GetWifiClientSandbox() *WifiClientSandboxRequest {
	if x != nil {
		if x, ok := x.Event.(*Event_WifiClientSandbox); ok {
			return x.WifiClientSandbox
		}
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_WifiNewClientConnected struct {
	WifiNewClientConnected *WifiNewClientConnectedEvent `protobuf:"bytes,3001,opt,name=wifi_new_client_connected,json=wifiNewClientConnected,proto3,oneof"`
}

type Event_WifiAccountBonding struct {
	WifiAccountBonding *WifiAccountBondingEvent `protobuf:"bytes,3002,opt,name=wifi_account_bonding,json=wifiAccountBonding,proto3,oneof"`
}

type Event_WifiNewPeer struct {
	WifiNewPeer *WifiNewPeerEvent `protobuf:"bytes,3003,opt,name=wifi_new_peer,json=wifiNewPeer,proto3,oneof"`
}

type Event_WifiCloudStatus struct {
	WifiCloudStatus *WifiCloudStatusEvent `protobuf:"bytes,3004,opt,name=wifi_cloud_status,json=wifiCloudStatus,proto3,oneof"`
}

type Event_WifiClientSandbox struct {
	WifiClientSandbox *WifiClientSandboxRequest `protobuf:"bytes,3005,opt,name=wifi_client_sandbox,json=wifiClientSandbox,proto3,oneof"`
}

func (*Event_WifiNewClientConnected) isEvent_Event() {}

func (*Event_WifiAccountBonding) isEvent_Event() {}

func (*Event_WifiNewPeer) isEvent_Event() {}

func (*Event_WifiCloudStatus) isEvent_Event() {}

func (*Event_WifiClientSandbox) isEvent_Event() {}

type WifiCloudStatusEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ApiVersion       uint32                 `protobuf:"varint,4,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	DirectLinkToDish bool                   `protobuf:"varint,1,opt,name=direct_link_to_dish,json=directLinkToDish,proto3" json:"direct_link_to_dish,omitempty"`
	HardwareVersion  string                 `protobuf:"bytes,2,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	IsBypassed       bool                   `protobuf:"varint,3,opt,name=is_bypassed,json=isBypassed,proto3" json:"is_bypassed,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WifiCloudStatusEvent) Reset() {
	*x = WifiCloudStatusEvent{}
	mi := &file_spacex_api_device_device_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiCloudStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiCloudStatusEvent) ProtoMessage() {}

func (x *WifiCloudStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiCloudStatusEvent.ProtoReflect.Descriptor instead.
func (*WifiCloudStatusEvent) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{7}
}

func (x *WifiCloudStatusEvent) GetApiVersion() uint32 {
	if x != nil {
		return x.ApiVersion
	}
	return 0
}

func (x *WifiCloudStatusEvent) GetDirectLinkToDish() bool {
	if x != nil {
		return x.DirectLinkToDish
	}
	return false
}

func (x *WifiCloudStatusEvent) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

func (x *WifiCloudStatusEvent) GetIsBypassed() bool {
	if x != nil {
		return x.IsBypassed
	}
	return false
}

type WifiClientSandboxRequest struct {
	state               protoimpl.MessageState     `protogen:"open.v1"`
	ClientSandboxStatus []*WifiClientSandboxStatus `protobuf:"bytes,1,rep,name=client_sandbox_status,json=clientSandboxStatus,proto3" json:"client_sandbox_status,omitempty"`
	Alerts              []WifiClientSandboxAlert   `protobuf:"varint,2,rep,packed,name=alerts,proto3,enum=SpaceX.API.Device.WifiClientSandboxAlert" json:"alerts,omitempty"`
	UnixTimestampNs     uint64                     `protobuf:"varint,3,opt,name=unix_timestamp_ns,json=unixTimestampNs,proto3" json:"unix_timestamp_ns,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *WifiClientSandboxRequest) Reset() {
	*x = WifiClientSandboxRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClientSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClientSandboxRequest) ProtoMessage() {}

func (x *WifiClientSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClientSandboxRequest.ProtoReflect.Descriptor instead.
func (*WifiClientSandboxRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{8}
}

func (x *WifiClientSandboxRequest) GetClientSandboxStatus() []*WifiClientSandboxStatus {
	if x != nil {
		return x.ClientSandboxStatus
	}
	return nil
}

func (x *WifiClientSandboxRequest) GetAlerts() []WifiClientSandboxAlert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *WifiClientSandboxRequest) GetUnixTimestampNs() uint64 {
	if x != nil {
		return x.UnixTimestampNs
	}
	return 0
}

type WifiClientSandboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiClientSandboxResponse) Reset() {
	*x = WifiClientSandboxResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClientSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClientSandboxResponse) ProtoMessage() {}

func (x *WifiClientSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClientSandboxResponse.ProtoReflect.Descriptor instead.
func (*WifiClientSandboxResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{9}
}

type WifiClientSandboxStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Sandbox       uint32                 `protobuf:"varint,2,opt,name=sandbox,proto3" json:"sandbox,omitempty"`
	Sandboxed     bool                   `protobuf:"varint,3,opt,name=sandboxed,proto3" json:"sandboxed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiClientSandboxStatus) Reset() {
	*x = WifiClientSandboxStatus{}
	mi := &file_spacex_api_device_device_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiClientSandboxStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClientSandboxStatus) ProtoMessage() {}

func (x *WifiClientSandboxStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClientSandboxStatus.ProtoReflect.Descriptor instead.
func (*WifiClientSandboxStatus) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{10}
}

func (x *WifiClientSandboxStatus) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *WifiClientSandboxStatus) GetSandbox() uint32 {
	if x != nil {
		return x.Sandbox
	}
	return 0
}

func (x *WifiClientSandboxStatus) GetSandboxed() bool {
	if x != nil {
		return x.Sandboxed
	}
	return false
}

type EnableDebugTelemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DurationM     uint32                 `protobuf:"varint,1,opt,name=duration_m,json=durationM,proto3" json:"duration_m,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableDebugTelemRequest) Reset() {
	*x = EnableDebugTelemRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableDebugTelemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableDebugTelemRequest) ProtoMessage() {}

func (x *EnableDebugTelemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableDebugTelemRequest.ProtoReflect.Descriptor instead.
func (*EnableDebugTelemRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{11}
}

func (x *EnableDebugTelemRequest) GetDurationM() uint32 {
	if x != nil {
		return x.DurationM
	}
	return 0
}

type EnableDebugTelemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableDebugTelemResponse) Reset() {
	*x = EnableDebugTelemResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableDebugTelemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableDebugTelemResponse) ProtoMessage() {}

func (x *EnableDebugTelemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableDebugTelemResponse.ProtoReflect.Descriptor instead.
func (*EnableDebugTelemResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{12}
}

type FactoryResetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FactoryResetRequest) Reset() {
	*x = FactoryResetRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FactoryResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FactoryResetRequest) ProtoMessage() {}

func (x *FactoryResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FactoryResetRequest.ProtoReflect.Descriptor instead.
func (*FactoryResetRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{13}
}

type FactoryResetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FactoryResetResponse) Reset() {
	*x = FactoryResetResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FactoryResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FactoryResetResponse) ProtoMessage() {}

func (x *FactoryResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FactoryResetResponse.ProtoReflect.Descriptor instead.
func (*FactoryResetResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{14}
}

type GetTimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimeRequest) Reset() {
	*x = GetTimeRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeRequest) ProtoMessage() {}

func (x *GetTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeRequest.ProtoReflect.Descriptor instead.
func (*GetTimeRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{15}
}

type GetTimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnixNano      int64                  `protobuf:"varint,1,opt,name=unix_nano,json=unixNano,proto3" json:"unix_nano,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimeResponse) Reset() {
	*x = GetTimeResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeResponse) ProtoMessage() {}

func (x *GetTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeResponse.ProtoReflect.Descriptor instead.
func (*GetTimeResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{16}
}

func (x *GetTimeResponse) GetUnixNano() int64 {
	if x != nil {
		return x.UnixNano
	}
	return 0
}

type FuseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PreventReboot bool                   `protobuf:"varint,1,opt,name=prevent_reboot,json=preventReboot,proto3" json:"prevent_reboot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FuseRequest) Reset() {
	*x = FuseRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuseRequest) ProtoMessage() {}

func (x *FuseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuseRequest.ProtoReflect.Descriptor instead.
func (*FuseRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{17}
}

func (x *FuseRequest) GetPreventReboot() bool {
	if x != nil {
		return x.PreventReboot
	}
	return false
}

type FuseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FuseResponse) Reset() {
	*x = FuseResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuseResponse) ProtoMessage() {}

func (x *FuseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuseResponse.ProtoReflect.Descriptor instead.
func (*FuseResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{18}
}

type GetHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoryRequest) Reset() {
	*x = GetHistoryRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRequest) ProtoMessage() {}

func (x *GetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{19}
}

type GetLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogRequest) Reset() {
	*x = GetLogRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogRequest) ProtoMessage() {}

func (x *GetLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogRequest.ProtoReflect.Descriptor instead.
func (*GetLogRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{20}
}

type GetLogResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Current *GetLogResponse_Logs   `protobuf:"bytes,4,opt,name=current,proto3" json:"current,omitempty"`
	Saved   *GetLogResponse_Logs   `protobuf:"bytes,5,opt,name=saved,proto3" json:"saved,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	Syslog string `protobuf:"bytes,1,opt,name=syslog,proto3" json:"syslog,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	OfflineLog string `protobuf:"bytes,2,opt,name=offline_log,json=offlineLog,proto3" json:"offline_log,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	PersistentLog string `protobuf:"bytes,3,opt,name=persistent_log,json=persistentLog,proto3" json:"persistent_log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogResponse) Reset() {
	*x = GetLogResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogResponse) ProtoMessage() {}

func (x *GetLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogResponse.ProtoReflect.Descriptor instead.
func (*GetLogResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{21}
}

func (x *GetLogResponse) GetCurrent() *GetLogResponse_Logs {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *GetLogResponse) GetSaved() *GetLogResponse_Logs {
	if x != nil {
		return x.Saved
	}
	return nil
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *GetLogResponse) GetSyslog() string {
	if x != nil {
		return x.Syslog
	}
	return ""
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *GetLogResponse) GetOfflineLog() string {
	if x != nil {
		return x.OfflineLog
	}
	return ""
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *GetLogResponse) GetPersistentLog() string {
	if x != nil {
		return x.PersistentLog
	}
	return ""
}

type GetPingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPingRequest) Reset() {
	*x = GetPingRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPingRequest) ProtoMessage() {}

func (x *GetPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPingRequest.ProtoReflect.Descriptor instead.
func (*GetPingRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{22}
}

type GetPingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       map[string]*PingResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPingResponse) Reset() {
	*x = GetPingResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPingResponse) ProtoMessage() {}

func (x *GetPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPingResponse.ProtoReflect.Descriptor instead.
func (*GetPingResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{23}
}

func (x *GetPingResponse) GetResults() map[string]*PingResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type PingHostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Size          uint32                 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingHostRequest) Reset() {
	*x = PingHostRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingHostRequest) ProtoMessage() {}

func (x *PingHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingHostRequest.ProtoReflect.Descriptor instead.
func (*PingHostRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{24}
}

func (x *PingHostRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PingHostRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PingHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *PingResult            `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingHostResponse) Reset() {
	*x = PingHostResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingHostResponse) ProtoMessage() {}

func (x *PingHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingHostResponse.ProtoReflect.Descriptor instead.
func (*PingHostResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{25}
}

func (x *PingHostResponse) GetResult() *PingResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouterRole    RouterRole             `protobuf:"varint,1,opt,name=router_role,json=routerRole,proto3,enum=SpaceX.API.Device.RouterRole" json:"router_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{26}
}

func (x *GetStatusRequest) GetRouterRole() RouterRole {
	if x != nil {
		return x.RouterRole
	}
	return RouterRole_UNSPECIFIED
}

type RebootRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootRequest) Reset() {
	*x = RebootRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootRequest) ProtoMessage() {}

func (x *RebootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootRequest.ProtoReflect.Descriptor instead.
func (*RebootRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{27}
}

type RebootResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootResponse) Reset() {
	*x = RebootResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootResponse) ProtoMessage() {}

func (x *RebootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootResponse.ProtoReflect.Descriptor instead.
func (*RebootResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{28}
}

type SpeedTestStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	LatencyMs float32 `protobuf:"fixed32,3,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	StartTime         uint64                `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	UploadStartTime   int64                 `protobuf:"varint,5,opt,name=upload_start_time,json=uploadStartTime,proto3" json:"upload_start_time,omitempty"`
	DownloadStartTime int64                 `protobuf:"varint,6,opt,name=download_start_time,json=downloadStartTime,proto3" json:"download_start_time,omitempty"`
	UploadMbps        float32               `protobuf:"fixed32,1,opt,name=upload_mbps,json=uploadMbps,proto3" json:"upload_mbps,omitempty"`
	DownloadMbps      float32               `protobuf:"fixed32,2,opt,name=download_mbps,json=downloadMbps,proto3" json:"download_mbps,omitempty"`
	Target            SpeedTestStats_Target `protobuf:"varint,7,opt,name=target,proto3,enum=SpaceX.API.Device.SpeedTestStats_Target" json:"target,omitempty"`
	TcpStreams        uint32                `protobuf:"varint,8,opt,name=tcp_streams,json=tcpStreams,proto3" json:"tcp_streams,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SpeedTestStats) Reset() {
	*x = SpeedTestStats{}
	mi := &file_spacex_api_device_device_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeedTestStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeedTestStats) ProtoMessage() {}

func (x *SpeedTestStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeedTestStats.ProtoReflect.Descriptor instead.
func (*SpeedTestStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{29}
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *SpeedTestStats) GetLatencyMs() float32 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *SpeedTestStats) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SpeedTestStats) GetUploadStartTime() int64 {
	if x != nil {
		return x.UploadStartTime
	}
	return 0
}

func (x *SpeedTestStats) GetDownloadStartTime() int64 {
	if x != nil {
		return x.DownloadStartTime
	}
	return 0
}

func (x *SpeedTestStats) GetUploadMbps() float32 {
	if x != nil {
		return x.UploadMbps
	}
	return 0
}

func (x *SpeedTestStats) GetDownloadMbps() float32 {
	if x != nil {
		return x.DownloadMbps
	}
	return 0
}

func (x *SpeedTestStats) GetTarget() SpeedTestStats_Target {
	if x != nil {
		return x.Target
	}
	return SpeedTestStats_UNKNOWN
}

func (x *SpeedTestStats) GetTcpStreams() uint32 {
	if x != nil {
		return x.TcpStreams
	}
	return 0
}

type ClientPlatform struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Platform      ClientPlatform_Platform `protobuf:"varint,1,opt,name=platform,proto3,enum=SpaceX.API.Device.ClientPlatform_Platform" json:"platform,omitempty"`
	MajorVersion  float32                 `protobuf:"fixed32,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion  float32                 `protobuf:"fixed32,3,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientPlatform) Reset() {
	*x = ClientPlatform{}
	mi := &file_spacex_api_device_device_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPlatform) ProtoMessage() {}

func (x *ClientPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPlatform.ProtoReflect.Descriptor instead.
func (*ClientPlatform) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{30}
}

func (x *ClientPlatform) GetPlatform() ClientPlatform_Platform {
	if x != nil {
		return x.Platform
	}
	return ClientPlatform_UNKNOWN
}

func (x *ClientPlatform) GetMajorVersion() float32 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *ClientPlatform) GetMinorVersion() float32 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

type SpeedTestRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              uint32                 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	ClientSpeedtest *SpeedTestStats        `protobuf:"bytes,1,opt,name=client_speedtest,json=clientSpeedtest,proto3" json:"client_speedtest,omitempty"`
	ClientRssi      float32                `protobuf:"fixed32,2,opt,name=client_rssi,json=clientRssi,proto3" json:"client_rssi,omitempty"`
	ClientPlatform  *ClientPlatform        `protobuf:"bytes,3,opt,name=client_platform,json=clientPlatform,proto3" json:"client_platform,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SpeedTestRequest) Reset() {
	*x = SpeedTestRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeedTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeedTestRequest) ProtoMessage() {}

func (x *SpeedTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeedTestRequest.ProtoReflect.Descriptor instead.
func (*SpeedTestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{31}
}

func (x *SpeedTestRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpeedTestRequest) GetClientSpeedtest() *SpeedTestStats {
	if x != nil {
		return x.ClientSpeedtest
	}
	return nil
}

func (x *SpeedTestRequest) GetClientRssi() float32 {
	if x != nil {
		return x.ClientRssi
	}
	return 0
}

func (x *SpeedTestRequest) GetClientPlatform() *ClientPlatform {
	if x != nil {
		return x.ClientPlatform
	}
	return nil
}

type SpeedTestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	DownloadBps float32 `protobuf:"fixed32,1,opt,name=download_bps,json=downloadBps,proto3" json:"download_bps,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	UploadBps float32 `protobuf:"fixed32,2,opt,name=upload_bps,json=uploadBps,proto3" json:"upload_bps,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	LatencyS float32 `protobuf:"fixed32,3,opt,name=latency_s,json=latencyS,proto3" json:"latency_s,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	DownloadMbps float32 `protobuf:"fixed32,4,opt,name=download_mbps,json=downloadMbps,proto3" json:"download_mbps,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	UploadMbps float32 `protobuf:"fixed32,5,opt,name=upload_mbps,json=uploadMbps,proto3" json:"upload_mbps,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	LatencyMs              float32         `protobuf:"fixed32,6,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	RouterSpeedtest        *SpeedTestStats `protobuf:"bytes,15,opt,name=router_speedtest,json=routerSpeedtest,proto3" json:"router_speedtest,omitempty"`
	DownloadMbps_1TcpConn  float32         `protobuf:"fixed32,7,opt,name=download_mbps_1_tcp_conn,json=downloadMbps1TcpConn,proto3" json:"download_mbps_1_tcp_conn,omitempty"`
	UploadMbps_1TcpConn    float32         `protobuf:"fixed32,8,opt,name=upload_mbps_1_tcp_conn,json=uploadMbps1TcpConn,proto3" json:"upload_mbps_1_tcp_conn,omitempty"`
	DownloadMbps_4TcpConn  float32         `protobuf:"fixed32,9,opt,name=download_mbps_4_tcp_conn,json=downloadMbps4TcpConn,proto3" json:"download_mbps_4_tcp_conn,omitempty"`
	UploadMbps_4TcpConn    float32         `protobuf:"fixed32,10,opt,name=upload_mbps_4_tcp_conn,json=uploadMbps4TcpConn,proto3" json:"upload_mbps_4_tcp_conn,omitempty"`
	DownloadMbps_16TcpConn float32         `protobuf:"fixed32,11,opt,name=download_mbps_16_tcp_conn,json=downloadMbps16TcpConn,proto3" json:"download_mbps_16_tcp_conn,omitempty"`
	UploadMbps_16TcpConn   float32         `protobuf:"fixed32,12,opt,name=upload_mbps_16_tcp_conn,json=uploadMbps16TcpConn,proto3" json:"upload_mbps_16_tcp_conn,omitempty"`
	DownloadMbps_64TcpConn float32         `protobuf:"fixed32,13,opt,name=download_mbps_64_tcp_conn,json=downloadMbps64TcpConn,proto3" json:"download_mbps_64_tcp_conn,omitempty"`
	UploadMbps_64TcpConn   float32         `protobuf:"fixed32,14,opt,name=upload_mbps_64_tcp_conn,json=uploadMbps64TcpConn,proto3" json:"upload_mbps_64_tcp_conn,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SpeedTestResponse) Reset() {
	*x = SpeedTestResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeedTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeedTestResponse) ProtoMessage() {}

func (x *SpeedTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeedTestResponse.ProtoReflect.Descriptor instead.
func (*SpeedTestResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{32}
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *SpeedTestResponse) GetDownloadBps() float32 {
	if x != nil {
		return x.DownloadBps
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *SpeedTestResponse) GetUploadBps() float32 {
	if x != nil {
		return x.UploadBps
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *SpeedTestResponse) GetLatencyS() float32 {
	if x != nil {
		return x.LatencyS
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *SpeedTestResponse) GetDownloadMbps() float32 {
	if x != nil {
		return x.DownloadMbps
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *SpeedTestResponse) GetUploadMbps() float32 {
	if x != nil {
		return x.UploadMbps
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *SpeedTestResponse) GetLatencyMs() float32 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *SpeedTestResponse) GetRouterSpeedtest() *SpeedTestStats {
	if x != nil {
		return x.RouterSpeedtest
	}
	return nil
}

func (x *SpeedTestResponse) GetDownloadMbps_1TcpConn() float32 {
	if x != nil {
		return x.DownloadMbps_1TcpConn
	}
	return 0
}

func (x *SpeedTestResponse) GetUploadMbps_1TcpConn() float32 {
	if x != nil {
		return x.UploadMbps_1TcpConn
	}
	return 0
}

func (x *SpeedTestResponse) GetDownloadMbps_4TcpConn() float32 {
	if x != nil {
		return x.DownloadMbps_4TcpConn
	}
	return 0
}

func (x *SpeedTestResponse) GetUploadMbps_4TcpConn() float32 {
	if x != nil {
		return x.UploadMbps_4TcpConn
	}
	return 0
}

func (x *SpeedTestResponse) GetDownloadMbps_16TcpConn() float32 {
	if x != nil {
		return x.DownloadMbps_16TcpConn
	}
	return 0
}

func (x *SpeedTestResponse) GetUploadMbps_16TcpConn() float32 {
	if x != nil {
		return x.UploadMbps_16TcpConn
	}
	return 0
}

func (x *SpeedTestResponse) GetDownloadMbps_64TcpConn() float32 {
	if x != nil {
		return x.DownloadMbps_64TcpConn
	}
	return 0
}

func (x *SpeedTestResponse) GetUploadMbps_64TcpConn() float32 {
	if x != nil {
		return x.UploadMbps_64TcpConn
	}
	return 0
}

type RunIperfServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DurationS     uint32                 `protobuf:"varint,1,opt,name=duration_s,json=durationS,proto3" json:"duration_s,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunIperfServerRequest) Reset() {
	*x = RunIperfServerRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunIperfServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunIperfServerRequest) ProtoMessage() {}

func (x *RunIperfServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunIperfServerRequest.ProtoReflect.Descriptor instead.
func (*RunIperfServerRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{33}
}

func (x *RunIperfServerRequest) GetDurationS() uint32 {
	if x != nil {
		return x.DurationS
	}
	return 0
}

type RunIperfServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          uint32                 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunIperfServerResponse) Reset() {
	*x = RunIperfServerResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunIperfServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunIperfServerResponse) ProtoMessage() {}

func (x *RunIperfServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunIperfServerResponse.ProtoReflect.Descriptor instead.
func (*RunIperfServerResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{34}
}

func (x *RunIperfServerResponse) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetConnectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnectionsRequest) Reset() {
	*x = GetConnectionsRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionsRequest) ProtoMessage() {}

func (x *GetConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionsRequest.ProtoReflect.Descriptor instead.
func (*GetConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{35}
}

type GetConnectionsResponse struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Services      map[string]*GetConnectionsResponse_ServiceConnection `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnectionsResponse) Reset() {
	*x = GetConnectionsResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionsResponse) ProtoMessage() {}

func (x *GetConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionsResponse.ProtoReflect.Descriptor instead.
func (*GetConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{36}
}

func (x *GetConnectionsResponse) GetServices() map[string]*GetConnectionsResponse_ServiceConnection {
	if x != nil {
		return x.Services
	}
	return nil
}

type GetDeviceInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceInfoRequest) Reset() {
	*x = GetDeviceInfoRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfoRequest) ProtoMessage() {}

func (x *GetDeviceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfoRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceInfoRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{37}
}

type GetDeviceInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceInfo    *DeviceInfo            `protobuf:"bytes,1,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceInfoResponse) Reset() {
	*x = GetDeviceInfoResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfoResponse) ProtoMessage() {}

func (x *GetDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{38}
}

func (x *GetDeviceInfoResponse) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type SetTrustedKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []*PublicKey           `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTrustedKeysRequest) Reset() {
	*x = SetTrustedKeysRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrustedKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrustedKeysRequest) ProtoMessage() {}

func (x *SetTrustedKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrustedKeysRequest.ProtoReflect.Descriptor instead.
func (*SetTrustedKeysRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{39}
}

func (x *SetTrustedKeysRequest) GetKeys() []*PublicKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type SetTrustedKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTrustedKeysResponse) Reset() {
	*x = SetTrustedKeysResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrustedKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrustedKeysResponse) ProtoMessage() {}

func (x *SetTrustedKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrustedKeysResponse.ProtoReflect.Descriptor instead.
func (*SetTrustedKeysResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{40}
}

type SetSkuRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Sku              string                 `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	CountryCode      string                 `protobuf:"bytes,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	ApplyCountryCode bool                   `protobuf:"varint,4,opt,name=apply_country_code,json=applyCountryCode,proto3" json:"apply_country_code,omitempty"`
	PinCountryCode   bool                   `protobuf:"varint,5,opt,name=pin_country_code,json=pinCountryCode,proto3" json:"pin_country_code,omitempty"`
	CustomPowerTable bool                   `protobuf:"varint,6,opt,name=custom_power_table,json=customPowerTable,proto3" json:"custom_power_table,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SetSkuRequest) Reset() {
	*x = SetSkuRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSkuRequest) ProtoMessage() {}

func (x *SetSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSkuRequest.ProtoReflect.Descriptor instead.
func (*SetSkuRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{41}
}

func (x *SetSkuRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *SetSkuRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *SetSkuRequest) GetApplyCountryCode() bool {
	if x != nil {
		return x.ApplyCountryCode
	}
	return false
}

func (x *SetSkuRequest) GetPinCountryCode() bool {
	if x != nil {
		return x.PinCountryCode
	}
	return false
}

func (x *SetSkuRequest) GetCustomPowerTable() bool {
	if x != nil {
		return x.CustomPowerTable
	}
	return false
}

type SetSkuResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSkuResponse) Reset() {
	*x = SetSkuResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSkuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSkuResponse) ProtoMessage() {}

func (x *SetSkuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSkuResponse.ProtoReflect.Descriptor instead.
func (*SetSkuResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{42}
}

type UpdateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ScheduleReboot *bool                  `protobuf:"varint,1,opt,name=schedule_reboot,json=scheduleReboot,proto3,oneof" json:"schedule_reboot,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateRequest) GetScheduleReboot() bool {
	if x != nil && x.ScheduleReboot != nil {
		return *x.ScheduleReboot
	}
	return false
}

type UpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{44}
}

type RestartControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartControlRequest) Reset() {
	*x = RestartControlRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartControlRequest) ProtoMessage() {}

func (x *RestartControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartControlRequest.ProtoReflect.Descriptor instead.
func (*RestartControlRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{45}
}

type RestartControlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartControlResponse) Reset() {
	*x = RestartControlResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartControlResponse) ProtoMessage() {}

func (x *RestartControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartControlResponse.ProtoReflect.Descriptor instead.
func (*RestartControlResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{46}
}

type GetNetworkInterfacesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkInterfacesRequest) Reset() {
	*x = GetNetworkInterfacesRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkInterfacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInterfacesRequest) ProtoMessage() {}

func (x *GetNetworkInterfacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkInterfacesRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkInterfacesRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{47}
}

type GetNetworkInterfacesResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NetworkInterfaces []*NetworkInterface    `protobuf:"bytes,1006,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetNetworkInterfacesResponse) Reset() {
	*x = GetNetworkInterfacesResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkInterfacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInterfacesResponse) ProtoMessage() {}

func (x *GetNetworkInterfacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkInterfacesResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkInterfacesResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{48}
}

func (x *GetNetworkInterfacesResponse) GetNetworkInterfaces() []*NetworkInterface {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

type GetRadioStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRadioStatsRequest) Reset() {
	*x = GetRadioStatsRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRadioStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRadioStatsRequest) ProtoMessage() {}

func (x *GetRadioStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRadioStatsRequest.ProtoReflect.Descriptor instead.
func (*GetRadioStatsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{49}
}

type GetRadioStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RadioStats    []*RadioStats          `protobuf:"bytes,1,rep,name=radio_stats,json=radioStats,proto3" json:"radio_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRadioStatsResponse) Reset() {
	*x = GetRadioStatsResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRadioStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRadioStatsResponse) ProtoMessage() {}

func (x *GetRadioStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRadioStatsResponse.ProtoReflect.Descriptor instead.
func (*GetRadioStatsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{50}
}

func (x *GetRadioStatsResponse) GetRadioStats() []*RadioStats {
	if x != nil {
		return x.RadioStats
	}
	return nil
}

type GetHeapDumpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHeapDumpRequest) Reset() {
	*x = GetHeapDumpRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHeapDumpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeapDumpRequest) ProtoMessage() {}

func (x *GetHeapDumpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeapDumpRequest.ProtoReflect.Descriptor instead.
func (*GetHeapDumpRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{51}
}

type GetHeapDumpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HeapDump      string                 `protobuf:"bytes,1,opt,name=heap_dump,json=heapDump,proto3" json:"heap_dump,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHeapDumpResponse) Reset() {
	*x = GetHeapDumpResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHeapDumpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeapDumpResponse) ProtoMessage() {}

func (x *GetHeapDumpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeapDumpResponse.ProtoReflect.Descriptor instead.
func (*GetHeapDumpResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{52}
}

func (x *GetHeapDumpResponse) GetHeapDump() string {
	if x != nil {
		return x.HeapDump
	}
	return ""
}

type GetLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        PositionSource         `protobuf:"varint,1,opt,name=source,proto3,enum=SpaceX.API.Device.PositionSource" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationRequest) Reset() {
	*x = GetLocationRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationRequest) ProtoMessage() {}

func (x *GetLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationRequest.ProtoReflect.Descriptor instead.
func (*GetLocationRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{53}
}

func (x *GetLocationRequest) GetSource() PositionSource {
	if x != nil {
		return x.Source
	}
	return PositionSource_AUTO
}

type GetLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lla           *LLAPosition           `protobuf:"bytes,1,opt,name=lla,proto3" json:"lla,omitempty"`
	SigmaM        float64                `protobuf:"fixed64,4,opt,name=sigma_m,json=sigmaM,proto3" json:"sigma_m,omitempty"`
	Source        PositionSource         `protobuf:"varint,3,opt,name=source,proto3,enum=SpaceX.API.Device.PositionSource" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationResponse) Reset() {
	*x = GetLocationResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationResponse) ProtoMessage() {}

func (x *GetLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationResponse.ProtoReflect.Descriptor instead.
func (*GetLocationResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{54}
}

func (x *GetLocationResponse) GetLla() *LLAPosition {
	if x != nil {
		return x.Lla
	}
	return nil
}

func (x *GetLocationResponse) GetSigmaM() float64 {
	if x != nil {
		return x.SigmaM
	}
	return 0
}

func (x *GetLocationResponse) GetSource() PositionSource {
	if x != nil {
		return x.Source
	}
	return PositionSource_AUTO
}

type DishSetEmcRequest struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Theta                     float64                `protobuf:"fixed64,1,opt,name=theta,proto3" json:"theta,omitempty"`
	Phi                       float64                `protobuf:"fixed64,2,opt,name=phi,proto3" json:"phi,omitempty"`
	RxChan                    uint32                 `protobuf:"varint,3,opt,name=rx_chan,json=rxChan,proto3" json:"rx_chan,omitempty"`
	TxChan                    uint32                 `protobuf:"varint,4,opt,name=tx_chan,json=txChan,proto3" json:"tx_chan,omitempty"`
	Modulation                uint32                 `protobuf:"varint,5,opt,name=modulation,proto3" json:"modulation,omitempty"`
	DesiredTiltAngle          float64                `protobuf:"fixed64,7,opt,name=desired_tilt_angle,json=desiredTiltAngle,proto3" json:"desired_tilt_angle,omitempty"`
	ChanOverride              bool                   `protobuf:"varint,8,opt,name=chan_override,json=chanOverride,proto3" json:"chan_override,omitempty"`
	ThetaEnabled              bool                   `protobuf:"varint,9,opt,name=theta_enabled,json=thetaEnabled,proto3" json:"theta_enabled,omitempty"`
	PhiEnabled                bool                   `protobuf:"varint,10,opt,name=phi_enabled,json=phiEnabled,proto3" json:"phi_enabled,omitempty"`
	Idle                      bool                   `protobuf:"varint,11,opt,name=idle,proto3" json:"idle,omitempty"`
	FastSwitching             bool                   `protobuf:"varint,12,opt,name=fast_switching,json=fastSwitching,proto3" json:"fast_switching,omitempty"`
	SkySearch                 bool                   `protobuf:"varint,13,opt,name=sky_search,json=skySearch,proto3" json:"sky_search,omitempty"`
	ForcePllUnlock            bool                   `protobuf:"varint,14,opt,name=force_pll_unlock,json=forcePllUnlock,proto3" json:"force_pll_unlock,omitempty"`
	ForceEirpFailure          bool                   `protobuf:"varint,15,opt,name=force_eirp_failure,json=forceEirpFailure,proto3" json:"force_eirp_failure,omitempty"`
	SnowActiveOverride        bool                   `protobuf:"varint,16,opt,name=snow_active_override,json=snowActiveOverride,proto3" json:"snow_active_override,omitempty"`
	ManualTilting             bool                   `protobuf:"varint,18,opt,name=manual_tilting,json=manualTilting,proto3" json:"manual_tilting,omitempty"`
	TiltToStowed              bool                   `protobuf:"varint,19,opt,name=tilt_to_stowed,json=tiltToStowed,proto3" json:"tilt_to_stowed,omitempty"`
	Reboot                    bool                   `protobuf:"varint,20,opt,name=reboot,proto3" json:"reboot,omitempty"`
	ContinuousMotorTest       bool                   `protobuf:"varint,21,opt,name=continuous_motor_test,json=continuousMotorTest,proto3" json:"continuous_motor_test,omitempty"`
	DistanceOverrideMeters    float64                `protobuf:"fixed64,22,opt,name=distance_override_meters,json=distanceOverrideMeters,proto3" json:"distance_override_meters,omitempty"`
	CountryCodeOverride       uint32                 `protobuf:"varint,24,opt,name=country_code_override,json=countryCodeOverride,proto3" json:"country_code_override,omitempty"`
	TxDutyCycleOverride       int32                  `protobuf:"varint,25,opt,name=tx_duty_cycle_override,json=txDutyCycleOverride,proto3" json:"tx_duty_cycle_override,omitempty"`
	RxDutyCycleOverride       int32                  `protobuf:"varint,26,opt,name=rx_duty_cycle_override,json=rxDutyCycleOverride,proto3" json:"rx_duty_cycle_override,omitempty"`
	EirpLegalLimitDbwOverride float64                `protobuf:"fixed64,27,opt,name=eirp_legal_limit_dbw_override,json=eirpLegalLimitDbwOverride,proto3" json:"eirp_legal_limit_dbw_override,omitempty"`
	EirpAdjustmentDb          float64                `protobuf:"fixed64,28,opt,name=eirp_adjustment_db,json=eirpAdjustmentDb,proto3" json:"eirp_adjustment_db,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DishSetEmcRequest) Reset() {
	*x = DishSetEmcRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishSetEmcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishSetEmcRequest) ProtoMessage() {}

func (x *DishSetEmcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishSetEmcRequest.ProtoReflect.Descriptor instead.
func (*DishSetEmcRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{55}
}

func (x *DishSetEmcRequest) GetTheta() float64 {
	if x != nil {
		return x.Theta
	}
	return 0
}

func (x *DishSetEmcRequest) GetPhi() float64 {
	if x != nil {
		return x.Phi
	}
	return 0
}

func (x *DishSetEmcRequest) GetRxChan() uint32 {
	if x != nil {
		return x.RxChan
	}
	return 0
}

func (x *DishSetEmcRequest) GetTxChan() uint32 {
	if x != nil {
		return x.TxChan
	}
	return 0
}

func (x *DishSetEmcRequest) GetModulation() uint32 {
	if x != nil {
		return x.Modulation
	}
	return 0
}

func (x *DishSetEmcRequest) GetDesiredTiltAngle() float64 {
	if x != nil {
		return x.DesiredTiltAngle
	}
	return 0
}

func (x *DishSetEmcRequest) GetChanOverride() bool {
	if x != nil {
		return x.ChanOverride
	}
	return false
}

func (x *DishSetEmcRequest) GetThetaEnabled() bool {
	if x != nil {
		return x.ThetaEnabled
	}
	return false
}

func (x *DishSetEmcRequest) GetPhiEnabled() bool {
	if x != nil {
		return x.PhiEnabled
	}
	return false
}

func (x *DishSetEmcRequest) GetIdle() bool {
	if x != nil {
		return x.Idle
	}
	return false
}

func (x *DishSetEmcRequest) GetFastSwitching() bool {
	if x != nil {
		return x.FastSwitching
	}
	return false
}

func (x *DishSetEmcRequest) GetSkySearch() bool {
	if x != nil {
		return x.SkySearch
	}
	return false
}

func (x *DishSetEmcRequest) GetForcePllUnlock() bool {
	if x != nil {
		return x.ForcePllUnlock
	}
	return false
}

func (x *DishSetEmcRequest) GetForceEirpFailure() bool {
	if x != nil {
		return x.ForceEirpFailure
	}
	return false
}

func (x *DishSetEmcRequest) GetSnowActiveOverride() bool {
	if x != nil {
		return x.SnowActiveOverride
	}
	return false
}

func (x *DishSetEmcRequest) GetManualTilting() bool {
	if x != nil {
		return x.ManualTilting
	}
	return false
}

func (x *DishSetEmcRequest) GetTiltToStowed() bool {
	if x != nil {
		return x.TiltToStowed
	}
	return false
}

func (x *DishSetEmcRequest) GetReboot() bool {
	if x != nil {
		return x.Reboot
	}
	return false
}

func (x *DishSetEmcRequest) GetContinuousMotorTest() bool {
	if x != nil {
		return x.ContinuousMotorTest
	}
	return false
}

func (x *DishSetEmcRequest) GetDistanceOverrideMeters() float64 {
	if x != nil {
		return x.DistanceOverrideMeters
	}
	return 0
}

func (x *DishSetEmcRequest) GetCountryCodeOverride() uint32 {
	if x != nil {
		return x.CountryCodeOverride
	}
	return 0
}

func (x *DishSetEmcRequest) GetTxDutyCycleOverride() int32 {
	if x != nil {
		return x.TxDutyCycleOverride
	}
	return 0
}

func (x *DishSetEmcRequest) GetRxDutyCycleOverride() int32 {
	if x != nil {
		return x.RxDutyCycleOverride
	}
	return 0
}

func (x *DishSetEmcRequest) GetEirpLegalLimitDbwOverride() float64 {
	if x != nil {
		return x.EirpLegalLimitDbwOverride
	}
	return 0
}

func (x *DishSetEmcRequest) GetEirpAdjustmentDb() float64 {
	if x != nil {
		return x.EirpAdjustmentDb
	}
	return 0
}

type DishSetEmcResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DishSetEmcResponse) Reset() {
	*x = DishSetEmcResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishSetEmcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishSetEmcResponse) ProtoMessage() {}

func (x *DishSetEmcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishSetEmcResponse.ProtoReflect.Descriptor instead.
func (*DishSetEmcResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{56}
}

type DishSetMaxPowerTestModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DishSetMaxPowerTestModeRequest) Reset() {
	*x = DishSetMaxPowerTestModeRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishSetMaxPowerTestModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishSetMaxPowerTestModeRequest) ProtoMessage() {}

func (x *DishSetMaxPowerTestModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishSetMaxPowerTestModeRequest.ProtoReflect.Descriptor instead.
func (*DishSetMaxPowerTestModeRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{57}
}

func (x *DishSetMaxPowerTestModeRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type DishSetMaxPowerTestModeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DishSetMaxPowerTestModeResponse) Reset() {
	*x = DishSetMaxPowerTestModeResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishSetMaxPowerTestModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishSetMaxPowerTestModeResponse) ProtoMessage() {}

func (x *DishSetMaxPowerTestModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishSetMaxPowerTestModeResponse.ProtoReflect.Descriptor instead.
func (*DishSetMaxPowerTestModeResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{58}
}

func (x *DishSetMaxPowerTestModeResponse) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type DishGetEmcRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DishGetEmcRequest) Reset() {
	*x = DishGetEmcRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishGetEmcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetEmcRequest) ProtoMessage() {}

func (x *DishGetEmcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetEmcRequest.ProtoReflect.Descriptor instead.
func (*DishGetEmcRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{59}
}

type DishGetEmcResponse struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Uuid                      string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Timestamp                 uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CplaneUpdates             uint32                 `protobuf:"varint,11,opt,name=cplane_updates,json=cplaneUpdates,proto3" json:"cplane_updates,omitempty"`
	GpsLatitude               float64                `protobuf:"fixed64,16,opt,name=gps_latitude,json=gpsLatitude,proto3" json:"gps_latitude,omitempty"`
	GpsLongitude              float64                `protobuf:"fixed64,17,opt,name=gps_longitude,json=gpsLongitude,proto3" json:"gps_longitude,omitempty"`
	GpsPdop                   float64                `protobuf:"fixed64,18,opt,name=gps_pdop,json=gpsPdop,proto3" json:"gps_pdop,omitempty"`
	RfMode                    uint32                 `protobuf:"varint,19,opt,name=rf_mode,json=rfMode,proto3" json:"rf_mode,omitempty"`
	Phi                       float64                `protobuf:"fixed64,20,opt,name=phi,proto3" json:"phi,omitempty"`
	Theta                     float64                `protobuf:"fixed64,21,opt,name=theta,proto3" json:"theta,omitempty"`
	RxChannel                 uint32                 `protobuf:"varint,22,opt,name=rx_channel,json=rxChannel,proto3" json:"rx_channel,omitempty"`
	TxChannel                 uint32                 `protobuf:"varint,23,opt,name=tx_channel,json=txChannel,proto3" json:"tx_channel,omitempty"`
	TDbfMax                   float32                `protobuf:"fixed32,24,opt,name=t_dbf_max,json=tDbfMax,proto3" json:"t_dbf_max,omitempty"`
	TCenter                   float64                `protobuf:"fixed64,25,opt,name=t_center,json=tCenter,proto3" json:"t_center,omitempty"`
	AutoPowerSnowMeltEnabled  bool                   `protobuf:"varint,30,opt,name=auto_power_snow_melt_enabled,json=autoPowerSnowMeltEnabled,proto3" json:"auto_power_snow_melt_enabled,omitempty"`
	Voltage                   float64                `protobuf:"fixed64,32,opt,name=voltage,proto3" json:"voltage,omitempty"`
	RxBeamState               uint32                 `protobuf:"varint,33,opt,name=rx_beam_state,json=rxBeamState,proto3" json:"rx_beam_state,omitempty"`
	TxBeamState               uint32                 `protobuf:"varint,34,opt,name=tx_beam_state,json=txBeamState,proto3" json:"tx_beam_state,omitempty"`
	HalfDuplexState           uint32                 `protobuf:"varint,35,opt,name=half_duplex_state,json=halfDuplexState,proto3" json:"half_duplex_state,omitempty"`
	ManualTiltEnabled         bool                   `protobuf:"varint,36,opt,name=manual_tilt_enabled,json=manualTiltEnabled,proto3" json:"manual_tilt_enabled,omitempty"`
	TiltAngle                 float64                `protobuf:"fixed64,37,opt,name=tilt_angle,json=tiltAngle,proto3" json:"tilt_angle,omitempty"`
	PllTxLockDetected         uint32                 `protobuf:"varint,38,opt,name=pll_tx_lock_detected,json=pllTxLockDetected,proto3" json:"pll_tx_lock_detected,omitempty"`
	EirpExceededThreshold     bool                   `protobuf:"varint,39,opt,name=eirp_exceeded_threshold,json=eirpExceededThreshold,proto3" json:"eirp_exceeded_threshold,omitempty"`
	IdleOverrideEnabled       bool                   `protobuf:"varint,41,opt,name=idle_override_enabled,json=idleOverrideEnabled,proto3" json:"idle_override_enabled,omitempty"`
	ThetaOverrideEnabled      bool                   `protobuf:"varint,42,opt,name=theta_override_enabled,json=thetaOverrideEnabled,proto3" json:"theta_override_enabled,omitempty"`
	ThetaOverrideValue        float64                `protobuf:"fixed64,43,opt,name=theta_override_value,json=thetaOverrideValue,proto3" json:"theta_override_value,omitempty"`
	PhiOverrideEnabled        bool                   `protobuf:"varint,44,opt,name=phi_override_enabled,json=phiOverrideEnabled,proto3" json:"phi_override_enabled,omitempty"`
	PhiOverrideValue          float64                `protobuf:"fixed64,45,opt,name=phi_override_value,json=phiOverrideValue,proto3" json:"phi_override_value,omitempty"`
	RxChanOverrideValue       uint32                 `protobuf:"varint,46,opt,name=rx_chan_override_value,json=rxChanOverrideValue,proto3" json:"rx_chan_override_value,omitempty"`
	TxChanOverrideValue       uint32                 `protobuf:"varint,47,opt,name=tx_chan_override_value,json=txChanOverrideValue,proto3" json:"tx_chan_override_value,omitempty"`
	SkySearchOverrideEnabled  bool                   `protobuf:"varint,48,opt,name=sky_search_override_enabled,json=skySearchOverrideEnabled,proto3" json:"sky_search_override_enabled,omitempty"`
	FastSwitchingEnabled      bool                   `protobuf:"varint,49,opt,name=fast_switching_enabled,json=fastSwitchingEnabled,proto3" json:"fast_switching_enabled,omitempty"`
	ModulationOverrideValue   uint32                 `protobuf:"varint,50,opt,name=modulation_override_value,json=modulationOverrideValue,proto3" json:"modulation_override_value,omitempty"`
	ForceEirpFailure          bool                   `protobuf:"varint,51,opt,name=force_eirp_failure,json=forceEirpFailure,proto3" json:"force_eirp_failure,omitempty"`
	ForcePllUnlock            bool                   `protobuf:"varint,52,opt,name=force_pll_unlock,json=forcePllUnlock,proto3" json:"force_pll_unlock,omitempty"`
	UtIneSuccess              uint32                 `protobuf:"varint,53,opt,name=ut_ine_success,json=utIneSuccess,proto3" json:"ut_ine_success,omitempty"`
	RfReady                   bool                   `protobuf:"varint,54,opt,name=rf_ready,json=rfReady,proto3" json:"rf_ready,omitempty"`
	TiltToStowed              bool                   `protobuf:"varint,55,opt,name=tilt_to_stowed,json=tiltToStowed,proto3" json:"tilt_to_stowed,omitempty"`
	Reboot                    bool                   `protobuf:"varint,56,opt,name=reboot,proto3" json:"reboot,omitempty"`
	ContinuousMotorTest       bool                   `protobuf:"varint,57,opt,name=continuous_motor_test,json=continuousMotorTest,proto3" json:"continuous_motor_test,omitempty"`
	DistanceOverrideMeters    float64                `protobuf:"fixed64,58,opt,name=distance_override_meters,json=distanceOverrideMeters,proto3" json:"distance_override_meters,omitempty"`
	CountryCodeOverride       uint32                 `protobuf:"varint,62,opt,name=country_code_override,json=countryCodeOverride,proto3" json:"country_code_override,omitempty"`
	MaxPointingDistance       float64                `protobuf:"fixed64,63,opt,name=max_pointing_distance,json=maxPointingDistance,proto3" json:"max_pointing_distance,omitempty"`
	DistanceScalingFactor     float64                `protobuf:"fixed64,64,opt,name=distance_scaling_factor,json=distanceScalingFactor,proto3" json:"distance_scaling_factor,omitempty"`
	TxDutyCycleOverride       int32                  `protobuf:"varint,65,opt,name=tx_duty_cycle_override,json=txDutyCycleOverride,proto3" json:"tx_duty_cycle_override,omitempty"`
	RxDutyCycleOverride       int32                  `protobuf:"varint,66,opt,name=rx_duty_cycle_override,json=rxDutyCycleOverride,proto3" json:"rx_duty_cycle_override,omitempty"`
	TxTimeMs                  float32                `protobuf:"fixed32,67,opt,name=tx_time_ms,json=txTimeMs,proto3" json:"tx_time_ms,omitempty"`
	RxTimeMs                  float32                `protobuf:"fixed32,68,opt,name=rx_time_ms,json=rxTimeMs,proto3" json:"rx_time_ms,omitempty"`
	EirpLegalLimitDbw         float64                `protobuf:"fixed64,69,opt,name=eirp_legal_limit_dbw,json=eirpLegalLimitDbw,proto3" json:"eirp_legal_limit_dbw,omitempty"`
	EirpLegalLimitDbwOverride float64                `protobuf:"fixed64,70,opt,name=eirp_legal_limit_dbw_override,json=eirpLegalLimitDbwOverride,proto3" json:"eirp_legal_limit_dbw_override,omitempty"`
	EirpAdjustmentDb          float64                `protobuf:"fixed64,71,opt,name=eirp_adjustment_db,json=eirpAdjustmentDb,proto3" json:"eirp_adjustment_db,omitempty"`
	EirpPredictedDbw          float64                `protobuf:"fixed64,72,opt,name=eirp_predicted_dbw,json=eirpPredictedDbw,proto3" json:"eirp_predicted_dbw,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DishGetEmcResponse) Reset() {
	*x = DishGetEmcResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishGetEmcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetEmcResponse) ProtoMessage() {}

func (x *DishGetEmcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetEmcResponse.ProtoReflect.Descriptor instead.
func (*DishGetEmcResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{60}
}

func (x *DishGetEmcResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DishGetEmcResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DishGetEmcResponse) GetCplaneUpdates() uint32 {
	if x != nil {
		return x.CplaneUpdates
	}
	return 0
}

func (x *DishGetEmcResponse) GetGpsLatitude() float64 {
	if x != nil {
		return x.GpsLatitude
	}
	return 0
}

func (x *DishGetEmcResponse) GetGpsLongitude() float64 {
	if x != nil {
		return x.GpsLongitude
	}
	return 0
}

func (x *DishGetEmcResponse) GetGpsPdop() float64 {
	if x != nil {
		return x.GpsPdop
	}
	return 0
}

func (x *DishGetEmcResponse) GetRfMode() uint32 {
	if x != nil {
		return x.RfMode
	}
	return 0
}

func (x *DishGetEmcResponse) GetPhi() float64 {
	if x != nil {
		return x.Phi
	}
	return 0
}

func (x *DishGetEmcResponse) GetTheta() float64 {
	if x != nil {
		return x.Theta
	}
	return 0
}

func (x *DishGetEmcResponse) GetRxChannel() uint32 {
	if x != nil {
		return x.RxChannel
	}
	return 0
}

func (x *DishGetEmcResponse) GetTxChannel() uint32 {
	if x != nil {
		return x.TxChannel
	}
	return 0
}

func (x *DishGetEmcResponse) GetTDbfMax() float32 {
	if x != nil {
		return x.TDbfMax
	}
	return 0
}

func (x *DishGetEmcResponse) GetTCenter() float64 {
	if x != nil {
		return x.TCenter
	}
	return 0
}

func (x *DishGetEmcResponse) GetAutoPowerSnowMeltEnabled() bool {
	if x != nil {
		return x.AutoPowerSnowMeltEnabled
	}
	return false
}

func (x *DishGetEmcResponse) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *DishGetEmcResponse) GetRxBeamState() uint32 {
	if x != nil {
		return x.RxBeamState
	}
	return 0
}

func (x *DishGetEmcResponse) GetTxBeamState() uint32 {
	if x != nil {
		return x.TxBeamState
	}
	return 0
}

func (x *DishGetEmcResponse) GetHalfDuplexState() uint32 {
	if x != nil {
		return x.HalfDuplexState
	}
	return 0
}

func (x *DishGetEmcResponse) GetManualTiltEnabled() bool {
	if x != nil {
		return x.ManualTiltEnabled
	}
	return false
}

func (x *DishGetEmcResponse) GetTiltAngle() float64 {
	if x != nil {
		return x.TiltAngle
	}
	return 0
}

func (x *DishGetEmcResponse) GetPllTxLockDetected() uint32 {
	if x != nil {
		return x.PllTxLockDetected
	}
	return 0
}

func (x *DishGetEmcResponse) GetEirpExceededThreshold() bool {
	if x != nil {
		return x.EirpExceededThreshold
	}
	return false
}

func (x *DishGetEmcResponse) GetIdleOverrideEnabled() bool {
	if x != nil {
		return x.IdleOverrideEnabled
	}
	return false
}

func (x *DishGetEmcResponse) GetThetaOverrideEnabled() bool {
	if x != nil {
		return x.ThetaOverrideEnabled
	}
	return false
}

func (x *DishGetEmcResponse) GetThetaOverrideValue() float64 {
	if x != nil {
		return x.ThetaOverrideValue
	}
	return 0
}

func (x *DishGetEmcResponse) GetPhiOverrideEnabled() bool {
	if x != nil {
		return x.PhiOverrideEnabled
	}
	return false
}

func (x *DishGetEmcResponse) GetPhiOverrideValue() float64 {
	if x != nil {
		return x.PhiOverrideValue
	}
	return 0
}

func (x *DishGetEmcResponse) GetRxChanOverrideValue() uint32 {
	if x != nil {
		return x.RxChanOverrideValue
	}
	return 0
}

func (x *DishGetEmcResponse) GetTxChanOverrideValue() uint32 {
	if x != nil {
		return x.TxChanOverrideValue
	}
	return 0
}

func (x *DishGetEmcResponse) GetSkySearchOverrideEnabled() bool {
	if x != nil {
		return x.SkySearchOverrideEnabled
	}
	return false
}

func (x *DishGetEmcResponse) GetFastSwitchingEnabled() bool {
	if x != nil {
		return x.FastSwitchingEnabled
	}
	return false
}

func (x *DishGetEmcResponse) GetModulationOverrideValue() uint32 {
	if x != nil {
		return x.ModulationOverrideValue
	}
	return 0
}

func (x *DishGetEmcResponse) GetForceEirpFailure() bool {
	if x != nil {
		return x.ForceEirpFailure
	}
	return false
}

func (x *DishGetEmcResponse) GetForcePllUnlock() bool {
	if x != nil {
		return x.ForcePllUnlock
	}
	return false
}

func (x *DishGetEmcResponse) GetUtIneSuccess() uint32 {
	if x != nil {
		return x.UtIneSuccess
	}
	return 0
}

func (x *DishGetEmcResponse) GetRfReady() bool {
	if x != nil {
		return x.RfReady
	}
	return false
}

func (x *DishGetEmcResponse) GetTiltToStowed() bool {
	if x != nil {
		return x.TiltToStowed
	}
	return false
}

func (x *DishGetEmcResponse) GetReboot() bool {
	if x != nil {
		return x.Reboot
	}
	return false
}

func (x *DishGetEmcResponse) GetContinuousMotorTest() bool {
	if x != nil {
		return x.ContinuousMotorTest
	}
	return false
}

func (x *DishGetEmcResponse) GetDistanceOverrideMeters() float64 {
	if x != nil {
		return x.DistanceOverrideMeters
	}
	return 0
}

func (x *DishGetEmcResponse) GetCountryCodeOverride() uint32 {
	if x != nil {
		return x.CountryCodeOverride
	}
	return 0
}

func (x *DishGetEmcResponse) GetMaxPointingDistance() float64 {
	if x != nil {
		return x.MaxPointingDistance
	}
	return 0
}

func (x *DishGetEmcResponse) GetDistanceScalingFactor() float64 {
	if x != nil {
		return x.DistanceScalingFactor
	}
	return 0
}

func (x *DishGetEmcResponse) GetTxDutyCycleOverride() int32 {
	if x != nil {
		return x.TxDutyCycleOverride
	}
	return 0
}

func (x *DishGetEmcResponse) GetRxDutyCycleOverride() int32 {
	if x != nil {
		return x.RxDutyCycleOverride
	}
	return 0
}

func (x *DishGetEmcResponse) GetTxTimeMs() float32 {
	if x != nil {
		return x.TxTimeMs
	}
	return 0
}

func (x *DishGetEmcResponse) GetRxTimeMs() float32 {
	if x != nil {
		return x.RxTimeMs
	}
	return 0
}

func (x *DishGetEmcResponse) GetEirpLegalLimitDbw() float64 {
	if x != nil {
		return x.EirpLegalLimitDbw
	}
	return 0
}

func (x *DishGetEmcResponse) GetEirpLegalLimitDbwOverride() float64 {
	if x != nil {
		return x.EirpLegalLimitDbwOverride
	}
	return 0
}

func (x *DishGetEmcResponse) GetEirpAdjustmentDb() float64 {
	if x != nil {
		return x.EirpAdjustmentDb
	}
	return 0
}

func (x *DishGetEmcResponse) GetEirpPredictedDbw() float64 {
	if x != nil {
		return x.EirpPredictedDbw
	}
	return 0
}

type GetPersistentStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPersistentStatsRequest) Reset() {
	*x = GetPersistentStatsRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersistentStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersistentStatsRequest) ProtoMessage() {}

func (x *GetPersistentStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersistentStatsRequest.ProtoReflect.Descriptor instead.
func (*GetPersistentStatsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{61}
}

type StartSpeedtestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSpeedtestRequest) Reset() {
	*x = StartSpeedtestRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSpeedtestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSpeedtestRequest) ProtoMessage() {}

func (x *StartSpeedtestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSpeedtestRequest.ProtoReflect.Descriptor instead.
func (*StartSpeedtestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{62}
}

type StartSpeedtestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSpeedtestResponse) Reset() {
	*x = StartSpeedtestResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSpeedtestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSpeedtestResponse) ProtoMessage() {}

func (x *StartSpeedtestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSpeedtestResponse.ProtoReflect.Descriptor instead.
func (*StartSpeedtestResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{63}
}

type SpeedtestStatus struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Running       bool                       `protobuf:"varint,1,opt,name=running,proto3" json:"running,omitempty"`
	Id            uint32                     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Up            *SpeedtestStatus_Direction `protobuf:"bytes,1000,opt,name=up,proto3" json:"up,omitempty"`
	Down          *SpeedtestStatus_Direction `protobuf:"bytes,1001,opt,name=down,proto3" json:"down,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeedtestStatus) Reset() {
	*x = SpeedtestStatus{}
	mi := &file_spacex_api_device_device_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeedtestStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeedtestStatus) ProtoMessage() {}

func (x *SpeedtestStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeedtestStatus.ProtoReflect.Descriptor instead.
func (*SpeedtestStatus) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{64}
}

func (x *SpeedtestStatus) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *SpeedtestStatus) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpeedtestStatus) GetUp() *SpeedtestStatus_Direction {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *SpeedtestStatus) GetDown() *SpeedtestStatus_Direction {
	if x != nil {
		return x.Down
	}
	return nil
}

type GetSpeedtestStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpeedtestStatusRequest) Reset() {
	*x = GetSpeedtestStatusRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpeedtestStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpeedtestStatusRequest) ProtoMessage() {}

func (x *GetSpeedtestStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpeedtestStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSpeedtestStatusRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{65}
}

type GetSpeedtestStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *SpeedtestStatus       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpeedtestStatusResponse) Reset() {
	*x = GetSpeedtestStatusResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpeedtestStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpeedtestStatusResponse) ProtoMessage() {}

func (x *GetSpeedtestStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpeedtestStatusResponse.ProtoReflect.Descriptor instead.
func (*GetSpeedtestStatusResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{66}
}

func (x *GetSpeedtestStatusResponse) GetStatus() *SpeedtestStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReportClientSpeedtestRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientSpeedtest *SpeedTestStats        `protobuf:"bytes,2,opt,name=client_speedtest,json=clientSpeedtest,proto3" json:"client_speedtest,omitempty"`
	WifiSpeedtest   *SpeedTestStats        `protobuf:"bytes,5,opt,name=wifi_speedtest,json=wifiSpeedtest,proto3" json:"wifi_speedtest,omitempty"`
	ClientRssi      float32                `protobuf:"fixed32,3,opt,name=client_rssi,json=clientRssi,proto3" json:"client_rssi,omitempty"`
	ClientPlatform  *ClientPlatform        `protobuf:"bytes,4,opt,name=client_platform,json=clientPlatform,proto3" json:"client_platform,omitempty"`
	AppVersion      string                 `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	AppBuild        uint32                 `protobuf:"varint,7,opt,name=app_build,json=appBuild,proto3" json:"app_build,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReportClientSpeedtestRequest) Reset() {
	*x = ReportClientSpeedtestRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportClientSpeedtestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportClientSpeedtestRequest) ProtoMessage() {}

func (x *ReportClientSpeedtestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportClientSpeedtestRequest.ProtoReflect.Descriptor instead.
func (*ReportClientSpeedtestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{67}
}

func (x *ReportClientSpeedtestRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReportClientSpeedtestRequest) GetClientSpeedtest() *SpeedTestStats {
	if x != nil {
		return x.ClientSpeedtest
	}
	return nil
}

func (x *ReportClientSpeedtestRequest) GetWifiSpeedtest() *SpeedTestStats {
	if x != nil {
		return x.WifiSpeedtest
	}
	return nil
}

func (x *ReportClientSpeedtestRequest) GetClientRssi() float32 {
	if x != nil {
		return x.ClientRssi
	}
	return 0
}

func (x *ReportClientSpeedtestRequest) GetClientPlatform() *ClientPlatform {
	if x != nil {
		return x.ClientPlatform
	}
	return nil
}

func (x *ReportClientSpeedtestRequest) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ReportClientSpeedtestRequest) GetAppBuild() uint32 {
	if x != nil {
		return x.AppBuild
	}
	return 0
}

type ReportClientSpeedtestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportClientSpeedtestResponse) Reset() {
	*x = ReportClientSpeedtestResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportClientSpeedtestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportClientSpeedtestResponse) ProtoMessage() {}

func (x *ReportClientSpeedtestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportClientSpeedtestResponse.ProtoReflect.Descriptor instead.
func (*ReportClientSpeedtestResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{68}
}

type SetPerVehicleConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPerVehicleConfigResponse) Reset() {
	*x = SetPerVehicleConfigResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPerVehicleConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPerVehicleConfigResponse) ProtoMessage() {}

func (x *SetPerVehicleConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPerVehicleConfigResponse.ProtoReflect.Descriptor instead.
func (*SetPerVehicleConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{69}
}

type DishPowerSaveRequest struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	PowerSaveStartMinutes    uint32                 `protobuf:"varint,1,opt,name=power_save_start_minutes,json=powerSaveStartMinutes,proto3" json:"power_save_start_minutes,omitempty"`
	PowerSaveDurationMinutes uint32                 `protobuf:"varint,2,opt,name=power_save_duration_minutes,json=powerSaveDurationMinutes,proto3" json:"power_save_duration_minutes,omitempty"`
	EnablePowerSave          bool                   `protobuf:"varint,3,opt,name=enable_power_save,json=enablePowerSave,proto3" json:"enable_power_save,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DishPowerSaveRequest) Reset() {
	*x = DishPowerSaveRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishPowerSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishPowerSaveRequest) ProtoMessage() {}

func (x *DishPowerSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishPowerSaveRequest.ProtoReflect.Descriptor instead.
func (*DishPowerSaveRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{70}
}

func (x *DishPowerSaveRequest) GetPowerSaveStartMinutes() uint32 {
	if x != nil {
		return x.PowerSaveStartMinutes
	}
	return 0
}

func (x *DishPowerSaveRequest) GetPowerSaveDurationMinutes() uint32 {
	if x != nil {
		return x.PowerSaveDurationMinutes
	}
	return 0
}

func (x *DishPowerSaveRequest) GetEnablePowerSave() bool {
	if x != nil {
		return x.EnablePowerSave
	}
	return false
}

type IQCaptureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IQCaptureRequest) Reset() {
	*x = IQCaptureRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IQCaptureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IQCaptureRequest) ProtoMessage() {}

func (x *IQCaptureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IQCaptureRequest.ProtoReflect.Descriptor instead.
func (*IQCaptureRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{71}
}

type GetDiagnosticsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiagnosticsRequest) Reset() {
	*x = GetDiagnosticsRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiagnosticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiagnosticsRequest) ProtoMessage() {}

func (x *GetDiagnosticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiagnosticsRequest.ProtoReflect.Descriptor instead.
func (*GetDiagnosticsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{72}
}

type WifiGetDiagnosticsResponse struct {
	state           protoimpl.MessageState                `protogen:"open.v1"`
	Id              string                                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HardwareVersion string                                `protobuf:"bytes,2,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	SoftwareVersion string                                `protobuf:"bytes,3,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	Networks        []*WifiGetDiagnosticsResponse_Network `protobuf:"bytes,4,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WifiGetDiagnosticsResponse) Reset() {
	*x = WifiGetDiagnosticsResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetDiagnosticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetDiagnosticsResponse) ProtoMessage() {}

func (x *WifiGetDiagnosticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetDiagnosticsResponse.ProtoReflect.Descriptor instead.
func (*WifiGetDiagnosticsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{73}
}

func (x *WifiGetDiagnosticsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WifiGetDiagnosticsResponse) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

func (x *WifiGetDiagnosticsResponse) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *WifiGetDiagnosticsResponse) GetNetworks() []*WifiGetDiagnosticsResponse_Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type DishGetDiagnosticsResponse struct {
	state                       protoimpl.MessageState                      `protogen:"open.v1"`
	Id                          string                                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HardwareVersion             string                                      `protobuf:"bytes,2,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	SoftwareVersion             string                                      `protobuf:"bytes,3,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	UtcOffsetS                  int32                                       `protobuf:"varint,4,opt,name=utc_offset_s,json=utcOffsetS,proto3" json:"utc_offset_s,omitempty"`
	HardwareSelfTest            DishGetDiagnosticsResponse_TestResult       `protobuf:"varint,7,opt,name=hardware_self_test,json=hardwareSelfTest,proto3,enum=SpaceX.API.Device.DishGetDiagnosticsResponse_TestResult" json:"hardware_self_test,omitempty"`
	HardwareSelfTestCodes       []DishGetDiagnosticsResponse_TestResultCode `protobuf:"varint,11,rep,packed,name=hardware_self_test_codes,json=hardwareSelfTestCodes,proto3,enum=SpaceX.API.Device.DishGetDiagnosticsResponse_TestResultCode" json:"hardware_self_test_codes,omitempty"`
	Alerts                      *DishGetDiagnosticsResponse_Alerts          `protobuf:"bytes,5,opt,name=alerts,proto3" json:"alerts,omitempty"`
	DisablementCode             DishGetDiagnosticsResponse_DisablementCode  `protobuf:"varint,6,opt,name=disablement_code,json=disablementCode,proto3,enum=SpaceX.API.Device.DishGetDiagnosticsResponse_DisablementCode" json:"disablement_code,omitempty"`
	Location                    *DishGetDiagnosticsResponse_Location        `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
	AlignmentStats              *DishGetDiagnosticsResponse_AlignmentStats  `protobuf:"bytes,9,opt,name=alignment_stats,json=alignmentStats,proto3" json:"alignment_stats,omitempty"`
	Stowed                      bool                                        `protobuf:"varint,10,opt,name=stowed,proto3" json:"stowed,omitempty"`
	DlBandwidthRestrictedReason integrations.RateLimitReason                `protobuf:"varint,12,opt,name=dl_bandwidth_restricted_reason,json=dlBandwidthRestrictedReason,proto3,enum=SpaceX.API.Telemetron.Public.Integrations.RateLimitReason" json:"dl_bandwidth_restricted_reason,omitempty"`
	UlBandwidthRestrictedReason integrations.RateLimitReason                `protobuf:"varint,13,opt,name=ul_bandwidth_restricted_reason,json=ulBandwidthRestrictedReason,proto3,enum=SpaceX.API.Telemetron.Public.Integrations.RateLimitReason" json:"ul_bandwidth_restricted_reason,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *DishGetDiagnosticsResponse) Reset() {
	*x = DishGetDiagnosticsResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishGetDiagnosticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetDiagnosticsResponse) ProtoMessage() {}

func (x *DishGetDiagnosticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetDiagnosticsResponse.ProtoReflect.Descriptor instead.
func (*DishGetDiagnosticsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{74}
}

func (x *DishGetDiagnosticsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DishGetDiagnosticsResponse) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

func (x *DishGetDiagnosticsResponse) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *DishGetDiagnosticsResponse) GetUtcOffsetS() int32 {
	if x != nil {
		return x.UtcOffsetS
	}
	return 0
}

func (x *DishGetDiagnosticsResponse) GetHardwareSelfTest() DishGetDiagnosticsResponse_TestResult {
	if x != nil {
		return x.HardwareSelfTest
	}
	return DishGetDiagnosticsResponse_NO_RESULT
}

func (x *DishGetDiagnosticsResponse) GetHardwareSelfTestCodes() []DishGetDiagnosticsResponse_TestResultCode {
	if x != nil {
		return x.HardwareSelfTestCodes
	}
	return nil
}

func (x *DishGetDiagnosticsResponse) GetAlerts() *DishGetDiagnosticsResponse_Alerts {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *DishGetDiagnosticsResponse) GetDisablementCode() DishGetDiagnosticsResponse_DisablementCode {
	if x != nil {
		return x.DisablementCode
	}
	return DishGetDiagnosticsResponse_UNKNOWN
}

func (x *DishGetDiagnosticsResponse) GetLocation() *DishGetDiagnosticsResponse_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DishGetDiagnosticsResponse) GetAlignmentStats() *DishGetDiagnosticsResponse_AlignmentStats {
	if x != nil {
		return x.AlignmentStats
	}
	return nil
}

func (x *DishGetDiagnosticsResponse) GetStowed() bool {
	if x != nil {
		return x.Stowed
	}
	return false
}

func (x *DishGetDiagnosticsResponse) GetDlBandwidthRestrictedReason() integrations.RateLimitReason {
	if x != nil {
		return x.DlBandwidthRestrictedReason
	}
	return integrations.RateLimitReason(0)
}

func (x *DishGetDiagnosticsResponse) GetUlBandwidthRestrictedReason() integrations.RateLimitReason {
	if x != nil {
		return x.UlBandwidthRestrictedReason
	}
	return integrations.RateLimitReason(0)
}

type TcpConnectivityTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TcpConnectivityTestRequest) Reset() {
	*x = TcpConnectivityTestRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TcpConnectivityTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpConnectivityTestRequest) ProtoMessage() {}

func (x *TcpConnectivityTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpConnectivityTestRequest.ProtoReflect.Descriptor instead.
func (*TcpConnectivityTestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{75}
}

func (x *TcpConnectivityTestRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *TcpConnectivityTestRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type UdpConnectivityTestRequest struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Target        string                                      `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Port          uint32                                      `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	ProbeData     UdpConnectivityTestRequest_UDPProbeDataType `protobuf:"varint,3,opt,name=probe_data,json=probeData,proto3,enum=SpaceX.API.Device.UdpConnectivityTestRequest_UDPProbeDataType" json:"probe_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UdpConnectivityTestRequest) Reset() {
	*x = UdpConnectivityTestRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UdpConnectivityTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UdpConnectivityTestRequest) ProtoMessage() {}

func (x *UdpConnectivityTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UdpConnectivityTestRequest.ProtoReflect.Descriptor instead.
func (*UdpConnectivityTestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{76}
}

func (x *UdpConnectivityTestRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *UdpConnectivityTestRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UdpConnectivityTestRequest) GetProbeData() UdpConnectivityTestRequest_UDPProbeDataType {
	if x != nil {
		return x.ProbeData
	}
	return UdpConnectivityTestRequest_EMPTY
}

type GetGoroutineStackTracesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGoroutineStackTracesRequest) Reset() {
	*x = GetGoroutineStackTracesRequest{}
	mi := &file_spacex_api_device_device_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGoroutineStackTracesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoroutineStackTracesRequest) ProtoMessage() {}

func (x *GetGoroutineStackTracesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoroutineStackTracesRequest.ProtoReflect.Descriptor instead.
func (*GetGoroutineStackTracesRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{77}
}

type GetGoroutineStackTracesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StackTraces   string                 `protobuf:"bytes,1,opt,name=stack_traces,json=stackTraces,proto3" json:"stack_traces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGoroutineStackTracesResponse) Reset() {
	*x = GetGoroutineStackTracesResponse{}
	mi := &file_spacex_api_device_device_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGoroutineStackTracesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoroutineStackTracesResponse) ProtoMessage() {}

func (x *GetGoroutineStackTracesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoroutineStackTracesResponse.ProtoReflect.Descriptor instead.
func (*GetGoroutineStackTracesResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{78}
}

func (x *GetGoroutineStackTracesResponse) GetStackTraces() string {
	if x != nil {
		return x.StackTraces
	}
	return ""
}

type GetLogResponse_Logs struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Syslog      string                 `protobuf:"bytes,1,opt,name=syslog,proto3" json:"syslog,omitempty"`
	Dmesg       string                 `protobuf:"bytes,2,opt,name=dmesg,proto3" json:"dmesg,omitempty"`
	KernelPanic string                 `protobuf:"bytes,3,opt,name=kernel_panic,json=kernelPanic,proto3" json:"kernel_panic,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	MtkEthProcs      string `protobuf:"bytes,4,opt,name=mtk_eth_procs,json=mtkEthProcs,proto3" json:"mtk_eth_procs,omitempty"`
	DebugNetsys_0Sec string `protobuf:"bytes,5,opt,name=debug_netsys_0sec,json=debugNetsys0sec,proto3" json:"debug_netsys_0sec,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
	DebugNetsys_2Sec string `protobuf:"bytes,6,opt,name=debug_netsys_2sec,json=debugNetsys2sec,proto3" json:"debug_netsys_2sec,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetLogResponse_Logs) Reset() {
	*x = GetLogResponse_Logs{}
	mi := &file_spacex_api_device_device_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogResponse_Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogResponse_Logs) ProtoMessage() {}

func (x *GetLogResponse_Logs) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogResponse_Logs.ProtoReflect.Descriptor instead.
func (*GetLogResponse_Logs) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{21, 0}
}

func (x *GetLogResponse_Logs) GetSyslog() string {
	if x != nil {
		return x.Syslog
	}
	return ""
}

func (x *GetLogResponse_Logs) GetDmesg() string {
	if x != nil {
		return x.Dmesg
	}
	return ""
}

func (x *GetLogResponse_Logs) GetKernelPanic() string {
	if x != nil {
		return x.KernelPanic
	}
	return ""
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *GetLogResponse_Logs) GetMtkEthProcs() string {
	if x != nil {
		return x.MtkEthProcs
	}
	return ""
}

func (x *GetLogResponse_Logs) GetDebugNetsys_0Sec() string {
	if x != nil {
		return x.DebugNetsys_0Sec
	}
	return ""
}

// Deprecated: Marked as deprecated in spacex_api/device/device.proto.
func (x *GetLogResponse_Logs) GetDebugNetsys_2Sec() string {
	if x != nil {
		return x.DebugNetsys_2Sec
	}
	return ""
}

type GetConnectionsResponse_ServiceConnection struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Address             string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	SecondsSinceSuccess int32                  `protobuf:"varint,2,opt,name=seconds_since_success,json=secondsSinceSuccess,proto3" json:"seconds_since_success,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetConnectionsResponse_ServiceConnection) Reset() {
	*x = GetConnectionsResponse_ServiceConnection{}
	mi := &file_spacex_api_device_device_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectionsResponse_ServiceConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionsResponse_ServiceConnection) ProtoMessage() {}

func (x *GetConnectionsResponse_ServiceConnection) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionsResponse_ServiceConnection.ProtoReflect.Descriptor instead.
func (*GetConnectionsResponse_ServiceConnection) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{36, 1}
}

func (x *GetConnectionsResponse_ServiceConnection) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetConnectionsResponse_ServiceConnection) GetSecondsSinceSuccess() int32 {
	if x != nil {
		return x.SecondsSinceSuccess
	}
	return 0
}

type SpeedtestStatus_Direction struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ThroughputsMbps []float32              `protobuf:"fixed32,1,rep,packed,name=throughputs_mbps,json=throughputsMbps,proto3" json:"throughputs_mbps,omitempty"`
	Err             SpeedtestError         `protobuf:"varint,2,opt,name=err,proto3,enum=SpaceX.API.Device.SpeedtestError" json:"err,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SpeedtestStatus_Direction) Reset() {
	*x = SpeedtestStatus_Direction{}
	mi := &file_spacex_api_device_device_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeedtestStatus_Direction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeedtestStatus_Direction) ProtoMessage() {}

func (x *SpeedtestStatus_Direction) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeedtestStatus_Direction.ProtoReflect.Descriptor instead.
func (*SpeedtestStatus_Direction) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{64, 0}
}

func (x *SpeedtestStatus_Direction) GetThroughputsMbps() []float32 {
	if x != nil {
		return x.ThroughputsMbps
	}
	return nil
}

func (x *SpeedtestStatus_Direction) GetErr() SpeedtestError {
	if x != nil {
		return x.Err
	}
	return SpeedtestError_SPEEDTEST_ERROR_NONE
}

type WifiGetDiagnosticsResponse_Network struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Domain          string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Ipv4            string                 `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6            []string               `protobuf:"bytes,3,rep,name=ipv6,proto3" json:"ipv6,omitempty"`
	ClientsEthernet uint32                 `protobuf:"varint,10,opt,name=clients_ethernet,json=clientsEthernet,proto3" json:"clients_ethernet,omitempty"`
	Clients_2Ghz    uint32                 `protobuf:"varint,11,opt,name=clients_2ghz,json=clients2ghz,proto3" json:"clients_2ghz,omitempty"`
	Clients_5Ghz    uint32                 `protobuf:"varint,12,opt,name=clients_5ghz,json=clients5ghz,proto3" json:"clients_5ghz,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WifiGetDiagnosticsResponse_Network) Reset() {
	*x = WifiGetDiagnosticsResponse_Network{}
	mi := &file_spacex_api_device_device_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGetDiagnosticsResponse_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetDiagnosticsResponse_Network) ProtoMessage() {}

func (x *WifiGetDiagnosticsResponse_Network) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetDiagnosticsResponse_Network.ProtoReflect.Descriptor instead.
func (*WifiGetDiagnosticsResponse_Network) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{73, 0}
}

func (x *WifiGetDiagnosticsResponse_Network) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WifiGetDiagnosticsResponse_Network) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *WifiGetDiagnosticsResponse_Network) GetIpv6() []string {
	if x != nil {
		return x.Ipv6
	}
	return nil
}

func (x *WifiGetDiagnosticsResponse_Network) GetClientsEthernet() uint32 {
	if x != nil {
		return x.ClientsEthernet
	}
	return 0
}

func (x *WifiGetDiagnosticsResponse_Network) GetClients_2Ghz() uint32 {
	if x != nil {
		return x.Clients_2Ghz
	}
	return 0
}

func (x *WifiGetDiagnosticsResponse_Network) GetClients_5Ghz() uint32 {
	if x != nil {
		return x.Clients_5Ghz
	}
	return 0
}

type DishGetDiagnosticsResponse_Alerts struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	DishIsHeating              bool                   `protobuf:"varint,1,opt,name=dish_is_heating,json=dishIsHeating,proto3" json:"dish_is_heating,omitempty"`
	DishThermalThrottle        bool                   `protobuf:"varint,2,opt,name=dish_thermal_throttle,json=dishThermalThrottle,proto3" json:"dish_thermal_throttle,omitempty"`
	DishThermalShutdown        bool                   `protobuf:"varint,3,opt,name=dish_thermal_shutdown,json=dishThermalShutdown,proto3" json:"dish_thermal_shutdown,omitempty"`
	PowerSupplyThermalThrottle bool                   `protobuf:"varint,4,opt,name=power_supply_thermal_throttle,json=powerSupplyThermalThrottle,proto3" json:"power_supply_thermal_throttle,omitempty"`
	MotorsStuck                bool                   `protobuf:"varint,5,opt,name=motors_stuck,json=motorsStuck,proto3" json:"motors_stuck,omitempty"`
	MastNotNearVertical        bool                   `protobuf:"varint,6,opt,name=mast_not_near_vertical,json=mastNotNearVertical,proto3" json:"mast_not_near_vertical,omitempty"`
	SlowEthernetSpeeds         bool                   `protobuf:"varint,7,opt,name=slow_ethernet_speeds,json=slowEthernetSpeeds,proto3" json:"slow_ethernet_speeds,omitempty"`
	SoftwareInstallPending     bool                   `protobuf:"varint,8,opt,name=software_install_pending,json=softwareInstallPending,proto3" json:"software_install_pending,omitempty"`
	Obstructed                 bool                   `protobuf:"varint,10,opt,name=obstructed,proto3" json:"obstructed,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DishGetDiagnosticsResponse_Alerts) Reset() {
	*x = DishGetDiagnosticsResponse_Alerts{}
	mi := &file_spacex_api_device_device_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishGetDiagnosticsResponse_Alerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetDiagnosticsResponse_Alerts) ProtoMessage() {}

func (x *DishGetDiagnosticsResponse_Alerts) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetDiagnosticsResponse_Alerts.ProtoReflect.Descriptor instead.
func (*DishGetDiagnosticsResponse_Alerts) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{74, 0}
}

func (x *DishGetDiagnosticsResponse_Alerts) GetDishIsHeating() bool {
	if x != nil {
		return x.DishIsHeating
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Alerts) GetDishThermalThrottle() bool {
	if x != nil {
		return x.DishThermalThrottle
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Alerts) GetDishThermalShutdown() bool {
	if x != nil {
		return x.DishThermalShutdown
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Alerts) GetPowerSupplyThermalThrottle() bool {
	if x != nil {
		return x.PowerSupplyThermalThrottle
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Alerts) GetMotorsStuck() bool {
	if x != nil {
		return x.MotorsStuck
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Alerts) GetMastNotNearVertical() bool {
	if x != nil {
		return x.MastNotNearVertical
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Alerts) GetSlowEthernetSpeeds() bool {
	if x != nil {
		return x.SlowEthernetSpeeds
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Alerts) GetSoftwareInstallPending() bool {
	if x != nil {
		return x.SoftwareInstallPending
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Alerts) GetObstructed() bool {
	if x != nil {
		return x.Obstructed
	}
	return false
}

type DishGetDiagnosticsResponse_Location struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Enabled                bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Latitude               float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude              float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	AltitudeMeters         float64                `protobuf:"fixed64,4,opt,name=altitude_meters,json=altitudeMeters,proto3" json:"altitude_meters,omitempty"`
	UncertaintyMetersValid bool                   `protobuf:"varint,5,opt,name=uncertainty_meters_valid,json=uncertaintyMetersValid,proto3" json:"uncertainty_meters_valid,omitempty"`
	UncertaintyMeters      float64                `protobuf:"fixed64,6,opt,name=uncertainty_meters,json=uncertaintyMeters,proto3" json:"uncertainty_meters,omitempty"`
	GpsTimeS               float64                `protobuf:"fixed64,7,opt,name=gps_time_s,json=gpsTimeS,proto3" json:"gps_time_s,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DishGetDiagnosticsResponse_Location) Reset() {
	*x = DishGetDiagnosticsResponse_Location{}
	mi := &file_spacex_api_device_device_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishGetDiagnosticsResponse_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetDiagnosticsResponse_Location) ProtoMessage() {}

func (x *DishGetDiagnosticsResponse_Location) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetDiagnosticsResponse_Location.ProtoReflect.Descriptor instead.
func (*DishGetDiagnosticsResponse_Location) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{74, 1}
}

func (x *DishGetDiagnosticsResponse_Location) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *DishGetDiagnosticsResponse_Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *DishGetDiagnosticsResponse_Location) GetAltitudeMeters() float64 {
	if x != nil {
		return x.AltitudeMeters
	}
	return 0
}

func (x *DishGetDiagnosticsResponse_Location) GetUncertaintyMetersValid() bool {
	if x != nil {
		return x.UncertaintyMetersValid
	}
	return false
}

func (x *DishGetDiagnosticsResponse_Location) GetUncertaintyMeters() float64 {
	if x != nil {
		return x.UncertaintyMeters
	}
	return 0
}

func (x *DishGetDiagnosticsResponse_Location) GetGpsTimeS() float64 {
	if x != nil {
		return x.GpsTimeS
	}
	return 0
}

type DishGetDiagnosticsResponse_AlignmentStats struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	BoresightAzimuthDeg          float32                `protobuf:"fixed32,1,opt,name=boresight_azimuth_deg,json=boresightAzimuthDeg,proto3" json:"boresight_azimuth_deg,omitempty"`
	BoresightElevationDeg        float32                `protobuf:"fixed32,2,opt,name=boresight_elevation_deg,json=boresightElevationDeg,proto3" json:"boresight_elevation_deg,omitempty"`
	DesiredBoresightAzimuthDeg   float32                `protobuf:"fixed32,3,opt,name=desired_boresight_azimuth_deg,json=desiredBoresightAzimuthDeg,proto3" json:"desired_boresight_azimuth_deg,omitempty"`
	DesiredBoresightElevationDeg float32                `protobuf:"fixed32,4,opt,name=desired_boresight_elevation_deg,json=desiredBoresightElevationDeg,proto3" json:"desired_boresight_elevation_deg,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *DishGetDiagnosticsResponse_AlignmentStats) Reset() {
	*x = DishGetDiagnosticsResponse_AlignmentStats{}
	mi := &file_spacex_api_device_device_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DishGetDiagnosticsResponse_AlignmentStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetDiagnosticsResponse_AlignmentStats) ProtoMessage() {}

func (x *DishGetDiagnosticsResponse_AlignmentStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_device_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetDiagnosticsResponse_AlignmentStats.ProtoReflect.Descriptor instead.
func (*DishGetDiagnosticsResponse_AlignmentStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_device_proto_rawDescGZIP(), []int{74, 2}
}

func (x *DishGetDiagnosticsResponse_AlignmentStats) GetBoresightAzimuthDeg() float32 {
	if x != nil {
		return x.BoresightAzimuthDeg
	}
	return 0
}

func (x *DishGetDiagnosticsResponse_AlignmentStats) GetBoresightElevationDeg() float32 {
	if x != nil {
		return x.BoresightElevationDeg
	}
	return 0
}

func (x *DishGetDiagnosticsResponse_AlignmentStats) GetDesiredBoresightAzimuthDeg() float32 {
	if x != nil {
		return x.DesiredBoresightAzimuthDeg
	}
	return 0
}

func (x *DishGetDiagnosticsResponse_AlignmentStats) GetDesiredBoresightElevationDeg() float32 {
	if x != nil {
		return x.DesiredBoresightElevationDeg
	}
	return 0
}

var File_spacex_api_device_device_proto protoreflect.FileDescriptor

const file_spacex_api_device_device_proto_rawDesc = "" +
	"\n" +
	"\x1espacex_api/device/device.proto\x12\x11SpaceX.API.Device\x1a%spacex_api/common/status/status.proto\x1a\x1fspacex_api/device/command.proto\x1a\x1espacex_api/device/common.proto\x1a\x1cspacex_api/device/dish.proto\x1a#spacex_api/device/transceiver.proto\x1a\x1cspacex_api/device/wifi.proto\x1a/spacex_api/device/services/unlock/service.proto\x1aBspacex_api/telemetron/public/integrations/ut_pop_link_report.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x92\x01\n" +
	"\bToDevice\x126\n" +
	"\arequest\x18\x01 \x01(\v2\x1a.SpaceX.API.Device.RequestH\x00R\arequest\x12C\n" +
	"\fhealth_check\x18\x02 \x01(\v2\x1e.SpaceX.API.Device.HealthCheckH\x00R\vhealthCheckB\t\n" +
	"\amessage\"\xc9\x01\n" +
	"\n" +
	"FromDevice\x129\n" +
	"\bresponse\x18\x01 \x01(\v2\x1b.SpaceX.API.Device.ResponseH\x00R\bresponse\x120\n" +
	"\x05event\x18\x02 \x01(\v2\x18.SpaceX.API.Device.EventH\x00R\x05event\x12C\n" +
	"\fhealth_check\x18\x03 \x01(\v2\x1e.SpaceX.API.Device.HealthCheckH\x00R\vhealthCheckB\t\n" +
	"\amessage\"\xc0\x01\n" +
	"\x10SensitiveCommand\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12J\n" +
	"\fget_location\x18\x03 \x01(\v2%.SpaceX.API.Device.GetLocationRequestH\x00R\vgetLocationB\t\n" +
	"\arequest\"\r\n" +
	"\vHealthCheck\"\xec;\n" +
	"\aRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x19\n" +
	"\bepoch_id\x18\x0e \x01(\x04R\aepochId\x12\x1b\n" +
	"\ttarget_id\x18\r \x01(\tR\btargetId\x12F\n" +
	"\x0esigned_request\x18\x0f \x01(\v2\x1d.SpaceX.API.Device.SignedDataH\x00R\rsignedRequest\x12F\n" +
	"\vget_next_id\x18\xee\a \x01(\v2#.SpaceX.API.Device.GetNextIdRequestH\x00R\tgetNextId\x12M\n" +
	"\x11sensitive_request\x18\xb6\b \x01(\v2\x1d.SpaceX.API.Device.SignedDataH\x00R\x10sensitiveRequest\x12M\n" +
	"\fauthenticate\x18\xed\a \x01(\v2&.SpaceX.API.Device.AuthenticateRequestH\x00R\fauthenticate\x12[\n" +
	"\x12enable_debug_telem\x18\x8a\b \x01(\v2*.SpaceX.API.Device.EnableDebugTelemRequestH\x00R\x10enableDebugTelem\x12N\n" +
	"\rfactory_reset\x18\xf3\a \x01(\v2&.SpaceX.API.Device.FactoryResetRequestH\x00R\ffactoryReset\x12R\n" +
	"\x0fget_device_info\x18\xf0\a \x01(\v2'.SpaceX.API.Device.GetDeviceInfoRequestH\x00R\rgetDeviceInfo\x12H\n" +
	"\vget_history\x18\xef\a \x01(\v2$.SpaceX.API.Device.GetHistoryRequestH\x00R\n" +
	"getHistory\x12<\n" +
	"\aget_log\x18\xf4\a \x01(\v2 .SpaceX.API.Device.GetLogRequestH\x00R\x06getLog\x12g\n" +
	"\x16get_network_interfaces\x18\xf7\a \x01(\v2..SpaceX.API.Device.GetNetworkInterfacesRequestH\x00R\x14getNetworkInterfaces\x12?\n" +
	"\bget_ping\x18\xf1\a \x01(\v2!.SpaceX.API.Device.GetPingRequestH\x00R\agetPing\x12B\n" +
	"\tping_host\x18\xf8\a \x01(\v2\".SpaceX.API.Device.PingHostRequestH\x00R\bpingHost\x12E\n" +
	"\n" +
	"get_status\x18\xec\a \x01(\v2#.SpaceX.API.Device.GetStatusRequestH\x00R\tgetStatus\x12;\n" +
	"\x06reboot\x18\xe9\a \x01(\v2 .SpaceX.API.Device.RebootRequestH\x00R\x06reboot\x12<\n" +
	"\aset_sku\x18\xf5\a \x01(\v2 .SpaceX.API.Device.SetSkuRequestH\x00R\x06setSku\x12U\n" +
	"\x10set_trusted_keys\x18\xf2\a \x01(\v2(.SpaceX.API.Device.SetTrustedKeysRequestH\x00R\x0esetTrustedKeys\x12E\n" +
	"\n" +
	"speed_test\x18\xeb\a \x01(\v2#.SpaceX.API.Device.SpeedTestRequestH\x00R\tspeedTest\x12;\n" +
	"\x06update\x18\xf6\a \x01(\v2 .SpaceX.API.Device.UpdateRequestH\x00R\x06update\x12K\n" +
	"\fget_location\x18\xf9\a \x01(\v2%.SpaceX.API.Device.GetLocationRequestH\x00R\vgetLocation\x12L\n" +
	"\rget_heap_dump\x18\xfb\a \x01(\v2%.SpaceX.API.Device.GetHeapDumpRequestH\x00R\vgetHeapDump\x12T\n" +
	"\x0frestart_control\x18\xfc\a \x01(\v2(.SpaceX.API.Device.RestartControlRequestH\x00R\x0erestartControl\x125\n" +
	"\x04fuse\x18\xfd\a \x01(\v2\x1e.SpaceX.API.Device.FuseRequestH\x00R\x04fuse\x12a\n" +
	"\x14get_persistent_stats\x18\xfe\a \x01(\v2,.SpaceX.API.Device.GetPersistentStatsRequestH\x00R\x12getPersistentStats\x12T\n" +
	"\x0fget_connections\x18\xff\a \x01(\v2(.SpaceX.API.Device.GetConnectionsRequestH\x00R\x0egetConnections\x12T\n" +
	"\x0fstart_speedtest\x18\x83\b \x01(\v2(.SpaceX.API.Device.StartSpeedtestRequestH\x00R\x0estartSpeedtest\x12a\n" +
	"\x14get_speedtest_status\x18\x84\b \x01(\v2,.SpaceX.API.Device.GetSpeedtestStatusRequestH\x00R\x12getSpeedtestStatus\x12j\n" +
	"\x17report_client_speedtest\x18\x85\b \x01(\v2/.SpaceX.API.Device.ReportClientSpeedtestRequestH\x00R\x15reportClientSpeedtest\x12b\n" +
	"\x13initiate_remote_ssh\x18\x86\b \x01(\v2+.SpaceX.API.Device.InitiateRemoteSshRequestB\x02\x18\x01H\x00R\x11initiateRemoteSsh\x12B\n" +
	"\tself_test\x18\x87\b \x01(\v2\".SpaceX.API.Device.SelfTestRequestH\x00R\bselfTest\x12L\n" +
	"\rset_test_mode\x18\x88\b \x01(\v2%.SpaceX.API.Device.SetTestModeRequestH\x00R\vsetTestMode\x12T\n" +
	"\x0fsoftware_update\x18\x89\b \x01(\v2(.SpaceX.API.Device.SoftwareUpdateRequestH\x00R\x0esoftwareUpdate\x12E\n" +
	"\n" +
	"iq_capture\x18\x8b\b \x01(\v2#.SpaceX.API.Device.IQCaptureRequestH\x00R\tiqCapture\x12R\n" +
	"\x0fget_radio_stats\x18\x8c\b \x01(\v2'.SpaceX.API.Device.GetRadioStatsRequestH\x00R\rgetRadioStats\x128\n" +
	"\x04time\x18\x8d\b \x01(\v2!.SpaceX.API.Device.GetTimeRequestH\x00R\x04time\x12U\n" +
	"\x10run_iperf_server\x18\x8e\b \x01(\v2(.SpaceX.API.Device.RunIperfServerRequestH\x00R\x0erunIperfServer\x12d\n" +
	"\x15tcp_connectivity_test\x18\x8f\b \x01(\v2-.SpaceX.API.Device.TcpConnectivityTestRequestH\x00R\x13tcpConnectivityTest\x12d\n" +
	"\x15udp_connectivity_test\x18\x90\b \x01(\v2-.SpaceX.API.Device.UdpConnectivityTestRequestH\x00R\x13udpConnectivityTest\x12q\n" +
	"\x1aget_goroutine_stack_traces\x18\x91\b \x01(\v21.SpaceX.API.Device.GetGoroutineStackTracesRequestH\x00R\x17getGoroutineStackTraces\x12B\n" +
	"\tdish_stow\x18\xd2\x0f \x01(\v2\".SpaceX.API.Device.DishStowRequestH\x00R\bdishStow\x12U\n" +
	"\x10dish_get_context\x18\xd3\x0f \x01(\v2(.SpaceX.API.Device.DishGetContextRequestH\x00R\x0edishGetContext\x12k\n" +
	"\x18dish_get_obstruction_map\x18\xd8\x0f \x01(\v2/.SpaceX.API.Device.DishGetObstructionMapRequestH\x00R\x15dishGetObstructionMap\x12I\n" +
	"\fdish_set_emc\x18\xd7\x0f \x01(\v2$.SpaceX.API.Device.DishSetEmcRequestH\x00R\n" +
	"dishSetEmc\x12I\n" +
	"\fdish_get_emc\x18\xd9\x0f \x01(\v2$.SpaceX.API.Device.DishGetEmcRequestH\x00R\n" +
	"dishGetEmc\x12R\n" +
	"\x0fdish_set_config\x18\xda\x0f \x01(\v2'.SpaceX.API.Device.DishSetConfigRequestH\x00R\rdishSetConfig\x12R\n" +
	"\x0fdish_get_config\x18\xdb\x0f \x01(\v2'.SpaceX.API.Device.DishGetConfigRequestH\x00R\rdishGetConfig\x12R\n" +
	"\x0fdish_power_save\x18\xdd\x0f \x01(\v2'.SpaceX.API.Device.DishPowerSaveRequestH\x00R\rdishPowerSave\x12U\n" +
	"\x10dish_inhibit_gps\x18\xde\x0f \x01(\v2(.SpaceX.API.Device.DishInhibitGpsRequestH\x00R\x0edishInhibitGps\x12L\n" +
	"\rdish_get_data\x18\xdf\x0f \x01(\v2%.SpaceX.API.Device.DishGetDataRequestH\x00R\vdishGetData\x12q\n" +
	"\x1adish_clear_obstruction_map\x18\xe1\x0f \x01(\v21.SpaceX.API.Device.DishClearObstructionMapRequestH\x00R\x17dishClearObstructionMap\x12s\n" +
	"\x1cdish_set_max_power_test_mode\x18\xe2\x0f \x01(\v21.SpaceX.API.Device.DishSetMaxPowerTestModeRequestH\x00R\x17dishSetMaxPowerTestMode\x12h\n" +
	"\x17dish_activate_rssi_scan\x18\xe3\x0f \x01(\v2..SpaceX.API.Device.DishActivateRssiScanRequestH\x00R\x14dishActivateRssiScan\x12l\n" +
	"\x19dish_get_rssi_scan_result\x18\xe4\x0f \x01(\v2/.SpaceX.API.Device.DishGetRssiScanResultRequestH\x00R\x15dishGetRssiScanResult\x12[\n" +
	"\x12dish_factory_reset\x18\xe5\x0f \x01(\v2*.SpaceX.API.Device.DishFactoryResetRequestH\x00R\x10dishFactoryReset\x12K\n" +
	"\freset_button\x18\xe6\x0f \x01(\v2%.SpaceX.API.Device.ResetButtonRequestH\x00R\vresetButton\x12`\n" +
	"\x16set_per_vehicle_config\x18\xe7\x0f \x01(\v2(.SpaceX.API.Device.SoftwareUpdateRequestH\x00R\x13setPerVehicleConfig\x12[\n" +
	"\x12dish_aviation_test\x18\xe8\x0f \x01(\v2*.SpaceX.API.Device.DishAviationTestRequestH\x00R\x10dishAviationTest\x12U\n" +
	"\x10wifi_get_clients\x18\xba\x17 \x01(\v2(.SpaceX.API.Device.WifiGetClientsRequestH\x00R\x0ewifiGetClients\x12b\n" +
	"\x15wifi_get_ping_metrics\x18\xbf\x17 \x01(\v2,.SpaceX.API.Device.WifiGetPingMetricsRequestH\x00R\x12wifiGetPingMetrics\x12R\n" +
	"\x0fwifi_set_config\x18\xb9\x17 \x01(\v2'.SpaceX.API.Device.WifiSetConfigRequestH\x00R\rwifiSetConfig\x12R\n" +
	"\x0fwifi_get_config\x18\xc1\x17 \x01(\v2'.SpaceX.API.Device.WifiGetConfigRequestH\x00R\rwifiGetConfig\x12E\n" +
	"\n" +
	"wifi_setup\x18\xbb\x17 \x01(\v2#.SpaceX.API.Device.WifiSetupRequestH\x00R\twifiSetup\x12o\n" +
	"\x1awifi_set_mesh_device_trust\x18\xc4\x17 \x01(\v20.SpaceX.API.Device.WifiSetMeshDeviceTrustRequestH\x00R\x16wifiSetMeshDeviceTrust\x12c\n" +
	"\x14wifi_set_mesh_config\x18\xc5\x17 \x01(\v2+.SpaceX.API.Device.WifiSetMeshConfigRequestB\x02\x18\x01H\x00R\x11wifiSetMeshConfig\x12h\n" +
	"\x17wifi_get_client_history\x18\xc7\x17 \x01(\v2..SpaceX.API.Device.WifiGetClientHistoryRequestH\x00R\x14wifiGetClientHistory\x12o\n" +
	"\x1awifi_set_client_given_name\x18\xc9\x17 \x01(\v20.SpaceX.API.Device.WifiSetClientGivenNameRequestH\x00R\x16wifiSetClientGivenName\x12t\n" +
	"\x1bwifi_set_aviation_conformed\x18\xc8\x17 \x01(\v22.SpaceX.API.Device.WifiSetAviationConformedRequestH\x00R\x18wifiSetAviationConformed\x12O\n" +
	"\x0ewifi_self_test\x18\xca\x17 \x01(\v2&.SpaceX.API.Device.WifiSelfTestRequestH\x00R\fwifiSelfTest\x12Y\n" +
	"\x12wifi_run_self_test\x18\xd4\x17 \x01(\v2).SpaceX.API.Device.WifiRunSelfTestRequestH\x00R\x0fwifiRunSelfTest\x12d\n" +
	"\x15wifi_calibration_mode\x18\xcb\x17 \x01(\v2-.SpaceX.API.Device.WifiCalibrationModeRequestH\x00R\x13wifiCalibrationMode\x12R\n" +
	"\x0fwifi_guest_info\x18\xcc\x17 \x01(\v2'.SpaceX.API.Device.WifiGuestInfoRequestH\x00R\rwifiGuestInfo\x12I\n" +
	"\fwifi_rf_test\x18\xcd\x17 \x01(\v2$.SpaceX.API.Device.WifiRfTestRequestH\x00R\n" +
	"wifiRfTest\x12X\n" +
	"\x11wifi_get_firewall\x18\xd0\x17 \x01(\v2).SpaceX.API.Device.WifiGetFirewallRequestH\x00R\x0fwifiGetFirewall\x12t\n" +
	"\x1bwifi_toggle_poe_negotiation\x18\xd1\x17 \x01(\v22.SpaceX.API.Device.WifiTogglePoeNegotiationRequestH\x00R\x18wifiTogglePoeNegotiation\x12n\n" +
	"\x19wifi_factory_test_command\x18\xd2\x17 \x01(\v20.SpaceX.API.Device.WifiFactoryTestCommandRequestH\x00R\x16wifiFactoryTestCommand\x12u\n" +
	"\x1cwifi_start_local_telem_proxy\x18\xd3\x17 \x01(\v22.SpaceX.API.Device.WifiStartLocalTelemProxyRequestH\x00R\x18wifiStartLocalTelemProxy\x12^\n" +
	"\x13wifi_backhaul_stats\x18\xd5\x17 \x01(\v2+.SpaceX.API.Device.WifiBackhaulStatsRequestH\x00R\x11wifiBackhaulStats\x12q\n" +
	"\x1awifi_toggle_umbilical_mode\x18\xd6\x17 \x01(\v21.SpaceX.API.Device.WifiToggleUmbilicalModeRequestH\x00R\x17wifiToggleUmbilicalMode\x12^\n" +
	"\x13wifi_client_sandbox\x18\xd7\x17 \x01(\v2+.SpaceX.API.Device.WifiClientSandboxRequestH\x00R\x11wifiClientSandbox\x12w\n" +
	"\x1ctransceiver_if_loopback_test\x18\xa1\x1f \x01(\v23.SpaceX.API.Device.TransceiverIFLoopbackTestRequestH\x00R\x19transceiverIfLoopbackTest\x12g\n" +
	"\x16transceiver_get_status\x18\xa3\x1f \x01(\v2..SpaceX.API.Device.TransceiverGetStatusRequestH\x00R\x14transceiverGetStatus\x12p\n" +
	"\x19transceiver_get_telemetry\x18\xa4\x1f \x01(\v21.SpaceX.API.Device.TransceiverGetTelemetryRequestH\x00R\x17transceiverGetTelemetry\x12[\n" +
	"\fstart_unlock\x18\x88' \x01(\v25.SpaceX.API.Device.Services.Unlock.StartUnlockRequestH\x00R\vstartUnlock\x12^\n" +
	"\rfinish_unlock\x18\x89' \x01(\v26.SpaceX.API.Device.Services.Unlock.FinishUnlockRequestH\x00R\ffinishUnlock\x12T\n" +
	"\x0fget_diagnostics\x18\xf0. \x01(\v2(.SpaceX.API.Device.GetDiagnosticsRequestH\x00R\x0egetDiagnosticsB\t\n" +
	"\arequestJ\x06\b\xfa\a\x10\xfb\aJ\x06\b\x81\b\x10\x82\bJ\x06\b\x82\b\x10\x83\bJ\x06\b\xdc\x0f\x10\xdd\x0fJ\x06\b\xe0\x0f\x10\xe1\x0fJ\x06\b\xc3\x17\x10\xc4\x17J\x06\b\xc6\x17\x10\xc7\x17J\x06\b\x82\x19\x10\x83\x19R\x14start_dish_self_test\"\x836\n" +
	"\bResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x121\n" +
	"\x06status\x18\x02 \x01(\v2\x19.SpaceX.API.Status.StatusR\x06status\x12\x1f\n" +
	"\vapi_version\x18\x03 \x01(\x04R\n" +
	"apiVersion\x12G\n" +
	"\vget_next_id\x18\xee\a \x01(\v2$.SpaceX.API.Device.GetNextIdResponseH\x00R\tgetNextId\x12\\\n" +
	"\x12enable_debug_telem\x18\x8a\b \x01(\v2+.SpaceX.API.Device.EnableDebugTelemResponseH\x00R\x10enableDebugTelem\x12O\n" +
	"\rfactory_reset\x18\xf3\a \x01(\v2'.SpaceX.API.Device.FactoryResetResponseH\x00R\ffactoryReset\x12S\n" +
	"\x0fget_device_info\x18\xec\a \x01(\v2(.SpaceX.API.Device.GetDeviceInfoResponseH\x00R\rgetDeviceInfo\x12=\n" +
	"\aget_log\x18\xf4\a \x01(\v2!.SpaceX.API.Device.GetLogResponseH\x00R\x06getLog\x12h\n" +
	"\x16get_network_interfaces\x18\xf7\a \x01(\v2/.SpaceX.API.Device.GetNetworkInterfacesResponseH\x00R\x14getNetworkInterfaces\x12@\n" +
	"\bget_ping\x18\xf1\a \x01(\v2\".SpaceX.API.Device.GetPingResponseH\x00R\agetPing\x12C\n" +
	"\tping_host\x18\xf8\a \x01(\v2#.SpaceX.API.Device.PingHostResponseH\x00R\bpingHost\x12<\n" +
	"\x06reboot\x18\xe9\a \x01(\v2!.SpaceX.API.Device.RebootResponseH\x00R\x06reboot\x12F\n" +
	"\n" +
	"speed_test\x18\xeb\a \x01(\v2$.SpaceX.API.Device.SpeedTestResponseH\x00R\tspeedTest\x12=\n" +
	"\aset_sku\x18\xf5\a \x01(\v2!.SpaceX.API.Device.SetSkuResponseH\x00R\x06setSku\x12V\n" +
	"\x10set_trusted_keys\x18\xf2\a \x01(\v2).SpaceX.API.Device.SetTrustedKeysResponseH\x00R\x0esetTrustedKeys\x12<\n" +
	"\x06update\x18\xf6\a \x01(\v2!.SpaceX.API.Device.UpdateResponseH\x00R\x06update\x12L\n" +
	"\fget_location\x18\xf9\a \x01(\v2&.SpaceX.API.Device.GetLocationResponseH\x00R\vgetLocation\x12M\n" +
	"\rget_heap_dump\x18\xfb\a \x01(\v2&.SpaceX.API.Device.GetHeapDumpResponseH\x00R\vgetHeapDump\x12U\n" +
	"\x0frestart_control\x18\xfc\a \x01(\v2).SpaceX.API.Device.RestartControlResponseH\x00R\x0erestartControl\x126\n" +
	"\x04fuse\x18\xfd\a \x01(\v2\x1f.SpaceX.API.Device.FuseResponseH\x00R\x04fuse\x12U\n" +
	"\x0fget_connections\x18\xff\a \x01(\v2).SpaceX.API.Device.GetConnectionsResponseH\x00R\x0egetConnections\x12U\n" +
	"\x0fstart_speedtest\x18\x83\b \x01(\v2).SpaceX.API.Device.StartSpeedtestResponseH\x00R\x0estartSpeedtest\x12b\n" +
	"\x14get_speedtest_status\x18\x84\b \x01(\v2-.SpaceX.API.Device.GetSpeedtestStatusResponseH\x00R\x12getSpeedtestStatus\x12k\n" +
	"\x17report_client_speedtest\x18\x85\b \x01(\v20.SpaceX.API.Device.ReportClientSpeedtestResponseH\x00R\x15reportClientSpeedtest\x12c\n" +
	"\x13initiate_remote_ssh\x18\x86\b \x01(\v2,.SpaceX.API.Device.InitiateRemoteSshResponseB\x02\x18\x01H\x00R\x11initiateRemoteSsh\x12C\n" +
	"\tself_test\x18\x87\b \x01(\v2#.SpaceX.API.Device.SelfTestResponseH\x00R\bselfTest\x12M\n" +
	"\rset_test_mode\x18\x88\b \x01(\v2&.SpaceX.API.Device.SetTestModeResponseH\x00R\vsetTestMode\x12U\n" +
	"\x0fsoftware_update\x18\x89\b \x01(\v2).SpaceX.API.Device.SoftwareUpdateResponseH\x00R\x0esoftwareUpdate\x12S\n" +
	"\x0fget_radio_stats\x18\x8b\b \x01(\v2(.SpaceX.API.Device.GetRadioStatsResponseH\x00R\rgetRadioStats\x129\n" +
	"\x04time\x18\x8d\b \x01(\v2\".SpaceX.API.Device.GetTimeResponseH\x00R\x04time\x12V\n" +
	"\x10run_iperf_server\x18\x8e\b \x01(\v2).SpaceX.API.Device.RunIperfServerResponseH\x00R\x0erunIperfServer\x12r\n" +
	"\x1aget_goroutine_stack_traces\x18\x91\b \x01(\v22.SpaceX.API.Device.GetGoroutineStackTracesResponseH\x00R\x17getGoroutineStackTraces\x12[\n" +
	"\x11dish_authenticate\x18\xd5\x0f \x01(\v2+.SpaceX.API.Device.DishAuthenticateResponseH\x00R\x10dishAuthenticate\x12V\n" +
	"\x10dish_get_context\x18\xd3\x0f \x01(\v2).SpaceX.API.Device.DishGetContextResponseH\x00R\x0edishGetContext\x12V\n" +
	"\x10dish_get_history\x18\xd6\x0f \x01(\v2).SpaceX.API.Device.DishGetHistoryResponseH\x00R\x0edishGetHistory\x12S\n" +
	"\x0fdish_get_status\x18\xd4\x0f \x01(\v2(.SpaceX.API.Device.DishGetStatusResponseH\x00R\rdishGetStatus\x12l\n" +
	"\x18dish_get_obstruction_map\x18\xd8\x0f \x01(\v20.SpaceX.API.Device.DishGetObstructionMapResponseH\x00R\x15dishGetObstructionMap\x12C\n" +
	"\tdish_stow\x18\xd2\x0f \x01(\v2#.SpaceX.API.Device.DishStowResponseH\x00R\bdishStow\x12J\n" +
	"\fdish_set_emc\x18\xd7\x0f \x01(\v2%.SpaceX.API.Device.DishSetEmcResponseH\x00R\n" +
	"dishSetEmc\x12J\n" +
	"\fdish_get_emc\x18\xd9\x0f \x01(\v2%.SpaceX.API.Device.DishGetEmcResponseH\x00R\n" +
	"dishGetEmc\x12S\n" +
	"\x0fdish_set_config\x18\xda\x0f \x01(\v2(.SpaceX.API.Device.DishSetConfigResponseH\x00R\rdishSetConfig\x12S\n" +
	"\x0fdish_get_config\x18\xdb\x0f \x01(\v2(.SpaceX.API.Device.DishGetConfigResponseH\x00R\rdishGetConfig\x12V\n" +
	"\x10dish_inhibit_gps\x18\xdd\x0f \x01(\v2).SpaceX.API.Device.DishInhibitGpsResponseH\x00R\x0edishInhibitGps\x12r\n" +
	"\x1adish_clear_obstruction_map\x18\xdf\x0f \x01(\v22.SpaceX.API.Device.DishClearObstructionMapResponseH\x00R\x17dishClearObstructionMap\x12t\n" +
	"\x1cdish_set_max_power_test_mode\x18\xe2\x0f \x01(\v22.SpaceX.API.Device.DishSetMaxPowerTestModeResponseH\x00R\x17dishSetMaxPowerTestMode\x12i\n" +
	"\x17dish_activate_rssi_scan\x18\xe3\x0f \x01(\v2/.SpaceX.API.Device.DishActivateRssiScanResponseH\x00R\x14dishActivateRssiScan\x12m\n" +
	"\x19dish_get_rssi_scan_result\x18\xe4\x0f \x01(\v20.SpaceX.API.Device.DishGetRssiScanResultResponseH\x00R\x15dishGetRssiScanResult\x12\\\n" +
	"\x12dish_factory_reset\x18\xe5\x0f \x01(\v2+.SpaceX.API.Device.DishFactoryResetResponseH\x00R\x10dishFactoryReset\x12L\n" +
	"\freset_button\x18\xe6\x0f \x01(\v2&.SpaceX.API.Device.ResetButtonResponseH\x00R\vresetButton\x12f\n" +
	"\x16set_per_vehicle_config\x18\xe7\x0f \x01(\v2..SpaceX.API.Device.SetPerVehicleConfigResponseH\x00R\x13setPerVehicleConfig\x12\\\n" +
	"\x12dish_aviation_test\x18\xe8\x0f \x01(\v2+.SpaceX.API.Device.DishAviationTestResponseH\x00R\x10dishAviationTest\x12[\n" +
	"\x11wifi_authenticate\x18\xbd\x17 \x01(\v2+.SpaceX.API.Device.WifiAuthenticateResponseH\x00R\x10wifiAuthenticate\x12V\n" +
	"\x10wifi_get_clients\x18\xba\x17 \x01(\v2).SpaceX.API.Device.WifiGetClientsResponseH\x00R\x0ewifiGetClients\x12V\n" +
	"\x10wifi_get_history\x18\xbe\x17 \x01(\v2).SpaceX.API.Device.WifiGetHistoryResponseH\x00R\x0ewifiGetHistory\x12c\n" +
	"\x15wifi_get_ping_metrics\x18\xbf\x17 \x01(\v2-.SpaceX.API.Device.WifiGetPingMetricsResponseH\x00R\x12wifiGetPingMetrics\x12S\n" +
	"\x0fwifi_get_status\x18\xbc\x17 \x01(\v2(.SpaceX.API.Device.WifiGetStatusResponseH\x00R\rwifiGetStatus\x12S\n" +
	"\x0fwifi_set_config\x18\xb9\x17 \x01(\v2(.SpaceX.API.Device.WifiSetConfigResponseH\x00R\rwifiSetConfig\x12S\n" +
	"\x0fwifi_get_config\x18\xc1\x17 \x01(\v2(.SpaceX.API.Device.WifiGetConfigResponseH\x00R\rwifiGetConfig\x12F\n" +
	"\n" +
	"wifi_setup\x18\xbb\x17 \x01(\v2$.SpaceX.API.Device.WifiSetupResponseH\x00R\twifiSetup\x12o\n" +
	"\x19wifi_get_persistent_stats\x18\xce\x17 \x01(\v21.SpaceX.API.Device.WifiGetPersistentStatsResponseH\x00R\x16wifiGetPersistentStats\x12p\n" +
	"\x1awifi_set_mesh_device_trust\x18\xc4\x17 \x01(\v21.SpaceX.API.Device.WifiSetMeshDeviceTrustResponseH\x00R\x16wifiSetMeshDeviceTrust\x12d\n" +
	"\x14wifi_set_mesh_config\x18\xc5\x17 \x01(\v2,.SpaceX.API.Device.WifiSetMeshConfigResponseB\x02\x18\x01H\x00R\x11wifiSetMeshConfig\x12i\n" +
	"\x17wifi_get_client_history\x18\xc7\x17 \x01(\v2/.SpaceX.API.Device.WifiGetClientHistoryResponseH\x00R\x14wifiGetClientHistory\x12P\n" +
	"\x0ewifi_self_test\x18\xc8\x17 \x01(\v2'.SpaceX.API.Device.WifiSelfTestResponseH\x00R\fwifiSelfTest\x12S\n" +
	"\x0fwifi_guest_info\x18\xcc\x17 \x01(\v2(.SpaceX.API.Device.WifiGuestInfoResponseH\x00R\rwifiGuestInfo\x12J\n" +
	"\fwifi_rf_test\x18\xcd\x17 \x01(\v2%.SpaceX.API.Device.WifiRfTestResponseH\x00R\n" +
	"wifiRfTest\x12Y\n" +
	"\x11wifi_get_firewall\x18\xd0\x17 \x01(\v2*.SpaceX.API.Device.WifiGetFirewallResponseH\x00R\x0fwifiGetFirewall\x12o\n" +
	"\x19wifi_factory_test_command\x18\xd1\x17 \x01(\v21.SpaceX.API.Device.WifiFactoryTestCommandResponseH\x00R\x16wifiFactoryTestCommand\x12_\n" +
	"\x13wifi_backhaul_stats\x18\xd2\x17 \x01(\v2,.SpaceX.API.Device.WifiBackhaulStatsResponseH\x00R\x11wifiBackhaulStats\x12_\n" +
	"\x13wifi_client_sandbox\x18\xd3\x17 \x01(\v2,.SpaceX.API.Device.WifiClientSandboxResponseH\x00R\x11wifiClientSandbox\x12I\n" +
	"\vwifi_update\x18\xd4\x17 \x01(\v2%.SpaceX.API.Device.WifiUpdateResponseH\x00R\n" +
	"wifiUpdate\x12x\n" +
	"\x1ctransceiver_if_loopback_test\x18\xa1\x1f \x01(\v24.SpaceX.API.Device.TransceiverIFLoopbackTestResponseH\x00R\x19transceiverIfLoopbackTest\x12h\n" +
	"\x16transceiver_get_status\x18\xa3\x1f \x01(\v2/.SpaceX.API.Device.TransceiverGetStatusResponseH\x00R\x14transceiverGetStatus\x12q\n" +
	"\x19transceiver_get_telemetry\x18\xa4\x1f \x01(\v22.SpaceX.API.Device.TransceiverGetTelemetryResponseH\x00R\x17transceiverGetTelemetry\x12\\\n" +
	"\fstart_unlock\x18\x88' \x01(\v26.SpaceX.API.Device.Services.Unlock.StartUnlockResponseH\x00R\vstartUnlock\x12_\n" +
	"\rfinish_unlock\x18\x89' \x01(\v27.SpaceX.API.Device.Services.Unlock.FinishUnlockResponseH\x00R\ffinishUnlock\x12b\n" +
	"\x14wifi_get_diagnostics\x18\xf0. \x01(\v2-.SpaceX.API.Device.WifiGetDiagnosticsResponseH\x00R\x12wifiGetDiagnostics\x12b\n" +
	"\x14dish_get_diagnostics\x18\xf1. \x01(\v2-.SpaceX.API.Device.DishGetDiagnosticsResponseH\x00R\x12dishGetDiagnosticsB\n" +
	"\n" +
	"\bresponseJ\x06\b\xfa\a\x10\xfb\aJ\x06\b\x82\b\x10\x83\bJ\x06\b\xde\x0f\x10\xdf\x0fJ\x06\b\xdc\x0f\x10\xdd\x0fJ\x06\b\xe9\x0f\x10\xea\x0fJ\x06\b\xc0\x17\x10\xc1\x17J\x06\b\xc3\x17\x10\xc4\x17J\x06\b\xc6\x17\x10\xc7\x17J\x06\b\x83\x19\x10\x84\x19R\x14start_dish_self_test\"\xe3\x03\n" +
	"\x05Event\x12l\n" +
	"\x19wifi_new_client_connected\x18\xb9\x17 \x01(\v2..SpaceX.API.Device.WifiNewClientConnectedEventH\x00R\x16wifiNewClientConnected\x12_\n" +
	"\x14wifi_account_bonding\x18\xba\x17 \x01(\v2*.SpaceX.API.Device.WifiAccountBondingEventH\x00R\x12wifiAccountBonding\x12J\n" +
	"\rwifi_new_peer\x18\xbb\x17 \x01(\v2#.SpaceX.API.Device.WifiNewPeerEventH\x00R\vwifiNewPeer\x12V\n" +
	"\x11wifi_cloud_status\x18\xbc\x17 \x01(\v2'.SpaceX.API.Device.WifiCloudStatusEventH\x00R\x0fwifiCloudStatus\x12^\n" +
	"\x13wifi_client_sandbox\x18\xbd\x17 \x01(\v2+.SpaceX.API.Device.WifiClientSandboxRequestH\x00R\x11wifiClientSandboxB\a\n" +
	"\x05event\"\xb2\x01\n" +
	"\x14WifiCloudStatusEvent\x12\x1f\n" +
	"\vapi_version\x18\x04 \x01(\rR\n" +
	"apiVersion\x12-\n" +
	"\x13direct_link_to_dish\x18\x01 \x01(\bR\x10directLinkToDish\x12)\n" +
	"\x10hardware_version\x18\x02 \x01(\tR\x0fhardwareVersion\x12\x1f\n" +
	"\vis_bypassed\x18\x03 \x01(\bR\n" +
	"isBypassed\"\xe9\x01\n" +
	"\x18WifiClientSandboxRequest\x12^\n" +
	"\x15client_sandbox_status\x18\x01 \x03(\v2*.SpaceX.API.Device.WifiClientSandboxStatusR\x13clientSandboxStatus\x12A\n" +
	"\x06alerts\x18\x02 \x03(\x0e2).SpaceX.API.Device.WifiClientSandboxAlertR\x06alerts\x12*\n" +
	"\x11unix_timestamp_ns\x18\x03 \x01(\x04R\x0funixTimestampNs\"\x1b\n" +
	"\x19WifiClientSandboxResponse\"i\n" +
	"\x17WifiClientSandboxStatus\x12\x16\n" +
	"\x06client\x18\x01 \x01(\tR\x06client\x12\x18\n" +
	"\asandbox\x18\x02 \x01(\rR\asandbox\x12\x1c\n" +
	"\tsandboxed\x18\x03 \x01(\bR\tsandboxed\"8\n" +
	"\x17EnableDebugTelemRequest\x12\x1d\n" +
	"\n" +
	"duration_m\x18\x01 \x01(\rR\tdurationM\"\x1a\n" +
	"\x18EnableDebugTelemResponse\"\x15\n" +
	"\x13FactoryResetRequest\"\x16\n" +
	"\x14FactoryResetResponse\"\x10\n" +
	"\x0eGetTimeRequest\".\n" +
	"\x0fGetTimeResponse\x12\x1b\n" +
	"\tunix_nano\x18\x01 \x01(\x03R\bunixNano\"4\n" +
	"\vFuseRequest\x12%\n" +
	"\x0eprevent_reboot\x18\x01 \x01(\bR\rpreventReboot\"\x0e\n" +
	"\fFuseResponse\"\x13\n" +
	"\x11GetHistoryRequest\"\x0f\n" +
	"\rGetLogRequest\"\xda\x03\n" +
	"\x0eGetLogResponse\x12@\n" +
	"\acurrent\x18\x04 \x01(\v2&.SpaceX.API.Device.GetLogResponse.LogsR\acurrent\x12<\n" +
	"\x05saved\x18\x05 \x01(\v2&.SpaceX.API.Device.GetLogResponse.LogsR\x05saved\x12\x1a\n" +
	"\x06syslog\x18\x01 \x01(\tB\x02\x18\x01R\x06syslog\x12#\n" +
	"\voffline_log\x18\x02 \x01(\tB\x02\x18\x01R\n" +
	"offlineLog\x12)\n" +
	"\x0epersistent_log\x18\x03 \x01(\tB\x02\x18\x01R\rpersistentLog\x1a\xdb\x01\n" +
	"\x04Logs\x12\x16\n" +
	"\x06syslog\x18\x01 \x01(\tR\x06syslog\x12\x14\n" +
	"\x05dmesg\x18\x02 \x01(\tR\x05dmesg\x12!\n" +
	"\fkernel_panic\x18\x03 \x01(\tR\vkernelPanic\x12&\n" +
	"\rmtk_eth_procs\x18\x04 \x01(\tB\x02\x18\x01R\vmtkEthProcs\x12*\n" +
	"\x11debug_netsys_0sec\x18\x05 \x01(\tR\x0fdebugNetsys0sec\x12.\n" +
	"\x11debug_netsys_2sec\x18\x06 \x01(\tB\x02\x18\x01R\x0fdebugNetsys2sec\"\x10\n" +
	"\x0eGetPingRequest\"\xb7\x01\n" +
	"\x0fGetPingResponse\x12I\n" +
	"\aresults\x18\x01 \x03(\v2/.SpaceX.API.Device.GetPingResponse.ResultsEntryR\aresults\x1aY\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.SpaceX.API.Device.PingResultR\x05value:\x028\x01\"?\n" +
	"\x0fPingHostRequest\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x12\n" +
	"\x04size\x18\x04 \x01(\rR\x04size\"I\n" +
	"\x10PingHostResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.PingResultR\x06result\"R\n" +
	"\x10GetStatusRequest\x12>\n" +
	"\vrouter_role\x18\x01 \x01(\x0e2\x1d.SpaceX.API.Device.RouterRoleR\n" +
	"routerRole\"\x0f\n" +
	"\rRebootRequest\"\x10\n" +
	"\x0eRebootResponse\"\x8f\x03\n" +
	"\x0eSpeedTestStats\x12!\n" +
	"\n" +
	"latency_ms\x18\x03 \x01(\x02B\x02\x18\x01R\tlatencyMs\x12!\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x04B\x02\x18\x01R\tstartTime\x12*\n" +
	"\x11upload_start_time\x18\x05 \x01(\x03R\x0fuploadStartTime\x12.\n" +
	"\x13download_start_time\x18\x06 \x01(\x03R\x11downloadStartTime\x12\x1f\n" +
	"\vupload_mbps\x18\x01 \x01(\x02R\n" +
	"uploadMbps\x12#\n" +
	"\rdownload_mbps\x18\x02 \x01(\x02R\fdownloadMbps\x12@\n" +
	"\x06target\x18\a \x01(\x0e2(.SpaceX.API.Device.SpeedTestStats.TargetR\x06target\x12\x1f\n" +
	"\vtcp_streams\x18\b \x01(\rR\n" +
	"tcpStreams\"2\n" +
	"\x06Target\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aFASTCOM\x10\x01\x12\x0e\n" +
	"\n" +
	"CLOUDFLARE\x10\x02\"\xda\x01\n" +
	"\x0eClientPlatform\x12F\n" +
	"\bplatform\x18\x01 \x01(\x0e2*.SpaceX.API.Device.ClientPlatform.PlatformR\bplatform\x12#\n" +
	"\rmajor_version\x18\x02 \x01(\x02R\fmajorVersion\x12#\n" +
	"\rminor_version\x18\x03 \x01(\x02R\fminorVersion\"6\n" +
	"\bPlatform\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\a\n" +
	"\x03IOS\x10\x01\x12\v\n" +
	"\aANDROID\x10\x02\x12\a\n" +
	"\x03WEB\x10\x03\"\xdd\x01\n" +
	"\x10SpeedTestRequest\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\rR\x02id\x12L\n" +
	"\x10client_speedtest\x18\x01 \x01(\v2!.SpaceX.API.Device.SpeedTestStatsR\x0fclientSpeedtest\x12\x1f\n" +
	"\vclient_rssi\x18\x02 \x01(\x02R\n" +
	"clientRssi\x12J\n" +
	"\x0fclient_platform\x18\x03 \x01(\v2!.SpaceX.API.Device.ClientPlatformR\x0eclientPlatform\"\xf5\x05\n" +
	"\x11SpeedTestResponse\x12%\n" +
	"\fdownload_bps\x18\x01 \x01(\x02B\x02\x18\x01R\vdownloadBps\x12!\n" +
	"\n" +
	"upload_bps\x18\x02 \x01(\x02B\x02\x18\x01R\tuploadBps\x12\x1f\n" +
	"\tlatency_s\x18\x03 \x01(\x02B\x02\x18\x01R\blatencyS\x12'\n" +
	"\rdownload_mbps\x18\x04 \x01(\x02B\x02\x18\x01R\fdownloadMbps\x12#\n" +
	"\vupload_mbps\x18\x05 \x01(\x02B\x02\x18\x01R\n" +
	"uploadMbps\x12!\n" +
	"\n" +
	"latency_ms\x18\x06 \x01(\x02B\x02\x18\x01R\tlatencyMs\x12L\n" +
	"\x10router_speedtest\x18\x0f \x01(\v2!.SpaceX.API.Device.SpeedTestStatsR\x0frouterSpeedtest\x126\n" +
	"\x18download_mbps_1_tcp_conn\x18\a \x01(\x02R\x14downloadMbps1TcpConn\x122\n" +
	"\x16upload_mbps_1_tcp_conn\x18\b \x01(\x02R\x12uploadMbps1TcpConn\x126\n" +
	"\x18download_mbps_4_tcp_conn\x18\t \x01(\x02R\x14downloadMbps4TcpConn\x122\n" +
	"\x16upload_mbps_4_tcp_conn\x18\n" +
	" \x01(\x02R\x12uploadMbps4TcpConn\x128\n" +
	"\x19download_mbps_16_tcp_conn\x18\v \x01(\x02R\x15downloadMbps16TcpConn\x124\n" +
	"\x17upload_mbps_16_tcp_conn\x18\f \x01(\x02R\x13uploadMbps16TcpConn\x128\n" +
	"\x19download_mbps_64_tcp_conn\x18\r \x01(\x02R\x15downloadMbps64TcpConn\x124\n" +
	"\x17upload_mbps_64_tcp_conn\x18\x0e \x01(\x02R\x13uploadMbps64TcpConn\"6\n" +
	"\x15RunIperfServerRequest\x12\x1d\n" +
	"\n" +
	"duration_s\x18\x01 \x01(\rR\tdurationS\",\n" +
	"\x16RunIperfServerResponse\x12\x12\n" +
	"\x04port\x18\x01 \x01(\rR\x04port\"\x17\n" +
	"\x15GetConnectionsRequest\"\xca\x02\n" +
	"\x16GetConnectionsResponse\x12S\n" +
	"\bservices\x18\x01 \x03(\v27.SpaceX.API.Device.GetConnectionsResponse.ServicesEntryR\bservices\x1ax\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12Q\n" +
	"\x05value\x18\x02 \x01(\v2;.SpaceX.API.Device.GetConnectionsResponse.ServiceConnectionR\x05value:\x028\x01\x1aa\n" +
	"\x11ServiceConnection\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x122\n" +
	"\x15seconds_since_success\x18\x02 \x01(\x05R\x13secondsSinceSuccess\"\x16\n" +
	"\x14GetDeviceInfoRequest\"W\n" +
	"\x15GetDeviceInfoResponse\x12>\n" +
	"\vdevice_info\x18\x01 \x01(\v2\x1d.SpaceX.API.Device.DeviceInfoR\n" +
	"deviceInfo\"I\n" +
	"\x15SetTrustedKeysRequest\x120\n" +
	"\x04keys\x18\x01 \x03(\v2\x1c.SpaceX.API.Device.PublicKeyR\x04keys\"\x18\n" +
	"\x16SetTrustedKeysResponse\"\xca\x01\n" +
	"\rSetSkuRequest\x12\x10\n" +
	"\x03sku\x18\x01 \x01(\tR\x03sku\x12!\n" +
	"\fcountry_code\x18\x02 \x01(\tR\vcountryCode\x12,\n" +
	"\x12apply_country_code\x18\x04 \x01(\bR\x10applyCountryCode\x12(\n" +
	"\x10pin_country_code\x18\x05 \x01(\bR\x0epinCountryCode\x12,\n" +
	"\x12custom_power_table\x18\x06 \x01(\bR\x10customPowerTable\"\x10\n" +
	"\x0eSetSkuResponse\"Q\n" +
	"\rUpdateRequest\x12,\n" +
	"\x0fschedule_reboot\x18\x01 \x01(\bH\x00R\x0escheduleReboot\x88\x01\x01B\x12\n" +
	"\x10_schedule_reboot\"\x10\n" +
	"\x0eUpdateResponse\"\x17\n" +
	"\x15RestartControlRequest\"\x18\n" +
	"\x16RestartControlResponse\"\x1d\n" +
	"\x1bGetNetworkInterfacesRequest\"s\n" +
	"\x1cGetNetworkInterfacesResponse\x12S\n" +
	"\x12network_interfaces\x18\xee\a \x03(\v2#.SpaceX.API.Device.NetworkInterfaceR\x11networkInterfaces\"\x16\n" +
	"\x14GetRadioStatsRequest\"W\n" +
	"\x15GetRadioStatsResponse\x12>\n" +
	"\vradio_stats\x18\x01 \x03(\v2\x1d.SpaceX.API.Device.RadioStatsR\n" +
	"radioStats\"\x14\n" +
	"\x12GetHeapDumpRequest\"2\n" +
	"\x13GetHeapDumpResponse\x12\x1b\n" +
	"\theap_dump\x18\x01 \x01(\tR\bheapDump\"O\n" +
	"\x12GetLocationRequest\x129\n" +
	"\x06source\x18\x01 \x01(\x0e2!.SpaceX.API.Device.PositionSourceR\x06source\"\xa7\x01\n" +
	"\x13GetLocationResponse\x120\n" +
	"\x03lla\x18\x01 \x01(\v2\x1e.SpaceX.API.Device.LLAPositionR\x03lla\x12\x17\n" +
	"\asigma_m\x18\x04 \x01(\x01R\x06sigmaM\x129\n" +
	"\x06source\x18\x03 \x01(\x0e2!.SpaceX.API.Device.PositionSourceR\x06sourceJ\x04\b\x02\x10\x03R\x04ecef\"\x8b\b\n" +
	"\x11DishSetEmcRequest\x12\x14\n" +
	"\x05theta\x18\x01 \x01(\x01R\x05theta\x12\x10\n" +
	"\x03phi\x18\x02 \x01(\x01R\x03phi\x12\x17\n" +
	"\arx_chan\x18\x03 \x01(\rR\x06rxChan\x12\x17\n" +
	"\atx_chan\x18\x04 \x01(\rR\x06txChan\x12\x1e\n" +
	"\n" +
	"modulation\x18\x05 \x01(\rR\n" +
	"modulation\x12,\n" +
	"\x12desired_tilt_angle\x18\a \x01(\x01R\x10desiredTiltAngle\x12#\n" +
	"\rchan_override\x18\b \x01(\bR\fchanOverride\x12#\n" +
	"\rtheta_enabled\x18\t \x01(\bR\fthetaEnabled\x12\x1f\n" +
	"\vphi_enabled\x18\n" +
	" \x01(\bR\n" +
	"phiEnabled\x12\x12\n" +
	"\x04idle\x18\v \x01(\bR\x04idle\x12%\n" +
	"\x0efast_switching\x18\f \x01(\bR\rfastSwitching\x12\x1d\n" +
	"\n" +
	"sky_search\x18\r \x01(\bR\tskySearch\x12(\n" +
	"\x10force_pll_unlock\x18\x0e \x01(\bR\x0eforcePllUnlock\x12,\n" +
	"\x12force_eirp_failure\x18\x0f \x01(\bR\x10forceEirpFailure\x120\n" +
	"\x14snow_active_override\x18\x10 \x01(\bR\x12snowActiveOverride\x12%\n" +
	"\x0emanual_tilting\x18\x12 \x01(\bR\rmanualTilting\x12$\n" +
	"\x0etilt_to_stowed\x18\x13 \x01(\bR\ftiltToStowed\x12\x16\n" +
	"\x06reboot\x18\x14 \x01(\bR\x06reboot\x122\n" +
	"\x15continuous_motor_test\x18\x15 \x01(\bR\x13continuousMotorTest\x128\n" +
	"\x18distance_override_meters\x18\x16 \x01(\x01R\x16distanceOverrideMeters\x122\n" +
	"\x15country_code_override\x18\x18 \x01(\rR\x13countryCodeOverride\x123\n" +
	"\x16tx_duty_cycle_override\x18\x19 \x01(\x05R\x13txDutyCycleOverride\x123\n" +
	"\x16rx_duty_cycle_override\x18\x1a \x01(\x05R\x13rxDutyCycleOverride\x12@\n" +
	"\x1deirp_legal_limit_dbw_override\x18\x1b \x01(\x01R\x19eirpLegalLimitDbwOverride\x12,\n" +
	"\x12eirp_adjustment_db\x18\x1c \x01(\x01R\x10eirpAdjustmentDbJ\x04\b\x17\x10\x18R\x18amplitude_taper_override\"\x14\n" +
	"\x12DishSetEmcResponse\":\n" +
	"\x1eDishSetMaxPowerTestModeRequest\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\";\n" +
	"\x1fDishSetMaxPowerTestModeResponse\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\"\x13\n" +
	"\x11DishGetEmcRequest\"\xc5\x12\n" +
	"\x12DishGetEmcResponse\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x12%\n" +
	"\x0ecplane_updates\x18\v \x01(\rR\rcplaneUpdates\x12!\n" +
	"\fgps_latitude\x18\x10 \x01(\x01R\vgpsLatitude\x12#\n" +
	"\rgps_longitude\x18\x11 \x01(\x01R\fgpsLongitude\x12\x19\n" +
	"\bgps_pdop\x18\x12 \x01(\x01R\agpsPdop\x12\x17\n" +
	"\arf_mode\x18\x13 \x01(\rR\x06rfMode\x12\x10\n" +
	"\x03phi\x18\x14 \x01(\x01R\x03phi\x12\x14\n" +
	"\x05theta\x18\x15 \x01(\x01R\x05theta\x12\x1d\n" +
	"\n" +
	"rx_channel\x18\x16 \x01(\rR\trxChannel\x12\x1d\n" +
	"\n" +
	"tx_channel\x18\x17 \x01(\rR\ttxChannel\x12\x1a\n" +
	"\tt_dbf_max\x18\x18 \x01(\x02R\atDbfMax\x12\x19\n" +
	"\bt_center\x18\x19 \x01(\x01R\atCenter\x12>\n" +
	"\x1cauto_power_snow_melt_enabled\x18\x1e \x01(\bR\x18autoPowerSnowMeltEnabled\x12\x18\n" +
	"\avoltage\x18  \x01(\x01R\avoltage\x12\"\n" +
	"\rrx_beam_state\x18! \x01(\rR\vrxBeamState\x12\"\n" +
	"\rtx_beam_state\x18\" \x01(\rR\vtxBeamState\x12*\n" +
	"\x11half_duplex_state\x18# \x01(\rR\x0fhalfDuplexState\x12.\n" +
	"\x13manual_tilt_enabled\x18$ \x01(\bR\x11manualTiltEnabled\x12\x1d\n" +
	"\n" +
	"tilt_angle\x18% \x01(\x01R\ttiltAngle\x12/\n" +
	"\x14pll_tx_lock_detected\x18& \x01(\rR\x11pllTxLockDetected\x126\n" +
	"\x17eirp_exceeded_threshold\x18' \x01(\bR\x15eirpExceededThreshold\x122\n" +
	"\x15idle_override_enabled\x18) \x01(\bR\x13idleOverrideEnabled\x124\n" +
	"\x16theta_override_enabled\x18* \x01(\bR\x14thetaOverrideEnabled\x120\n" +
	"\x14theta_override_value\x18+ \x01(\x01R\x12thetaOverrideValue\x120\n" +
	"\x14phi_override_enabled\x18, \x01(\bR\x12phiOverrideEnabled\x12,\n" +
	"\x12phi_override_value\x18- \x01(\x01R\x10phiOverrideValue\x123\n" +
	"\x16rx_chan_override_value\x18. \x01(\rR\x13rxChanOverrideValue\x123\n" +
	"\x16tx_chan_override_value\x18/ \x01(\rR\x13txChanOverrideValue\x12=\n" +
	"\x1bsky_search_override_enabled\x180 \x01(\bR\x18skySearchOverrideEnabled\x124\n" +
	"\x16fast_switching_enabled\x181 \x01(\bR\x14fastSwitchingEnabled\x12:\n" +
	"\x19modulation_override_value\x182 \x01(\rR\x17modulationOverrideValue\x12,\n" +
	"\x12force_eirp_failure\x183 \x01(\bR\x10forceEirpFailure\x12(\n" +
	"\x10force_pll_unlock\x184 \x01(\bR\x0eforcePllUnlock\x12$\n" +
	"\x0eut_ine_success\x185 \x01(\rR\futIneSuccess\x12\x19\n" +
	"\brf_ready\x186 \x01(\bR\arfReady\x12$\n" +
	"\x0etilt_to_stowed\x187 \x01(\bR\ftiltToStowed\x12\x16\n" +
	"\x06reboot\x188 \x01(\bR\x06reboot\x122\n" +
	"\x15continuous_motor_test\x189 \x01(\bR\x13continuousMotorTest\x128\n" +
	"\x18distance_override_meters\x18: \x01(\x01R\x16distanceOverrideMeters\x122\n" +
	"\x15country_code_override\x18> \x01(\rR\x13countryCodeOverride\x122\n" +
	"\x15max_pointing_distance\x18? \x01(\x01R\x13maxPointingDistance\x126\n" +
	"\x17distance_scaling_factor\x18@ \x01(\x01R\x15distanceScalingFactor\x123\n" +
	"\x16tx_duty_cycle_override\x18A \x01(\x05R\x13txDutyCycleOverride\x123\n" +
	"\x16rx_duty_cycle_override\x18B \x01(\x05R\x13rxDutyCycleOverride\x12\x1c\n" +
	"\n" +
	"tx_time_ms\x18C \x01(\x02R\btxTimeMs\x12\x1c\n" +
	"\n" +
	"rx_time_ms\x18D \x01(\x02R\brxTimeMs\x12/\n" +
	"\x14eirp_legal_limit_dbw\x18E \x01(\x01R\x11eirpLegalLimitDbw\x12@\n" +
	"\x1deirp_legal_limit_dbw_override\x18F \x01(\x01R\x19eirpLegalLimitDbwOverride\x12,\n" +
	"\x12eirp_adjustment_db\x18G \x01(\x01R\x10eirpAdjustmentDb\x12,\n" +
	"\x12eirp_predicted_dbw\x18H \x01(\x01R\x10eirpPredictedDbwJ\x04\b\x1a\x10\x1eJ\x04\b(\x10)J\x04\b;\x10<J\x04\b<\x10=J\x04\b=\x10>R\x10baseline_heatingR\x12additional_heatingR\rtotal_heatingR\x14target_total_heatingR\x13eirp_scale_overrideR\x18amplitude_taper_overrideR\x17amplitude_taper_enabledR\x15amplitude_taper_scale\"\x1b\n" +
	"\x19GetPersistentStatsRequest\"\x17\n" +
	"\x15StartSpeedtestRequest\"\x18\n" +
	"\x16StartSpeedtestResponse\"\xaa\x02\n" +
	"\x0fSpeedtestStatus\x12\x18\n" +
	"\arunning\x18\x01 \x01(\bR\arunning\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\rR\x02id\x12=\n" +
	"\x02up\x18\xe8\a \x01(\v2,.SpaceX.API.Device.SpeedtestStatus.DirectionR\x02up\x12A\n" +
	"\x04down\x18\xe9\a \x01(\v2,.SpaceX.API.Device.SpeedtestStatus.DirectionR\x04down\x1ak\n" +
	"\tDirection\x12)\n" +
	"\x10throughputs_mbps\x18\x01 \x03(\x02R\x0fthroughputsMbps\x123\n" +
	"\x03err\x18\x02 \x01(\x0e2!.SpaceX.API.Device.SpeedtestErrorR\x03err\"\x1b\n" +
	"\x19GetSpeedtestStatusRequest\"X\n" +
	"\x1aGetSpeedtestStatusResponse\x12:\n" +
	"\x06status\x18\x01 \x01(\v2\".SpaceX.API.Device.SpeedtestStatusR\x06status\"\xf1\x02\n" +
	"\x1cReportClientSpeedtestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12L\n" +
	"\x10client_speedtest\x18\x02 \x01(\v2!.SpaceX.API.Device.SpeedTestStatsR\x0fclientSpeedtest\x12H\n" +
	"\x0ewifi_speedtest\x18\x05 \x01(\v2!.SpaceX.API.Device.SpeedTestStatsR\rwifiSpeedtest\x12\x1f\n" +
	"\vclient_rssi\x18\x03 \x01(\x02R\n" +
	"clientRssi\x12J\n" +
	"\x0fclient_platform\x18\x04 \x01(\v2!.SpaceX.API.Device.ClientPlatformR\x0eclientPlatform\x12\x1f\n" +
	"\vapp_version\x18\x06 \x01(\tR\n" +
	"appVersion\x12\x1b\n" +
	"\tapp_build\x18\a \x01(\rR\bappBuild\"\x1f\n" +
	"\x1dReportClientSpeedtestResponse\"\x1d\n" +
	"\x1bSetPerVehicleConfigResponse\"\xba\x01\n" +
	"\x14DishPowerSaveRequest\x127\n" +
	"\x18power_save_start_minutes\x18\x01 \x01(\rR\x15powerSaveStartMinutes\x12=\n" +
	"\x1bpower_save_duration_minutes\x18\x02 \x01(\rR\x18powerSaveDurationMinutes\x12*\n" +
	"\x11enable_power_save\x18\x03 \x01(\bR\x0fenablePowerSave\"\x12\n" +
	"\x10IQCaptureRequest\"\x17\n" +
	"\x15GetDiagnosticsRequest\"\x92\x03\n" +
	"\x1aWifiGetDiagnosticsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12)\n" +
	"\x10hardware_version\x18\x02 \x01(\tR\x0fhardwareVersion\x12)\n" +
	"\x10software_version\x18\x03 \x01(\tR\x0fsoftwareVersion\x12Q\n" +
	"\bnetworks\x18\x04 \x03(\v25.SpaceX.API.Device.WifiGetDiagnosticsResponse.NetworkR\bnetworks\x1a\xba\x01\n" +
	"\aNetwork\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x12\n" +
	"\x04ipv4\x18\x02 \x01(\tR\x04ipv4\x12\x12\n" +
	"\x04ipv6\x18\x03 \x03(\tR\x04ipv6\x12)\n" +
	"\x10clients_ethernet\x18\n" +
	" \x01(\rR\x0fclientsEthernet\x12!\n" +
	"\fclients_2ghz\x18\v \x01(\rR\vclients2ghz\x12!\n" +
	"\fclients_5ghz\x18\f \x01(\rR\vclients5ghz\"\xa1\x16\n" +
	"\x1aDishGetDiagnosticsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12)\n" +
	"\x10hardware_version\x18\x02 \x01(\tR\x0fhardwareVersion\x12)\n" +
	"\x10software_version\x18\x03 \x01(\tR\x0fsoftwareVersion\x12 \n" +
	"\futc_offset_s\x18\x04 \x01(\x05R\n" +
	"utcOffsetS\x12f\n" +
	"\x12hardware_self_test\x18\a \x01(\x0e28.SpaceX.API.Device.DishGetDiagnosticsResponse.TestResultR\x10hardwareSelfTest\x12u\n" +
	"\x18hardware_self_test_codes\x18\v \x03(\x0e2<.SpaceX.API.Device.DishGetDiagnosticsResponse.TestResultCodeR\x15hardwareSelfTestCodes\x12L\n" +
	"\x06alerts\x18\x05 \x01(\v24.SpaceX.API.Device.DishGetDiagnosticsResponse.AlertsR\x06alerts\x12h\n" +
	"\x10disablement_code\x18\x06 \x01(\x0e2=.SpaceX.API.Device.DishGetDiagnosticsResponse.DisablementCodeR\x0fdisablementCode\x12R\n" +
	"\blocation\x18\b \x01(\v26.SpaceX.API.Device.DishGetDiagnosticsResponse.LocationR\blocation\x12e\n" +
	"\x0falignment_stats\x18\t \x01(\v2<.SpaceX.API.Device.DishGetDiagnosticsResponse.AlignmentStatsR\x0ealignmentStats\x12\x16\n" +
	"\x06stowed\x18\n" +
	" \x01(\bR\x06stowed\x12\x7f\n" +
	"\x1edl_bandwidth_restricted_reason\x18\f \x01(\x0e2:.SpaceX.API.Telemetron.Public.Integrations.RateLimitReasonR\x1bdlBandwidthRestrictedReason\x12\x7f\n" +
	"\x1eul_bandwidth_restricted_reason\x18\r \x01(\x0e2:.SpaceX.API.Telemetron.Public.Integrations.RateLimitReasonR\x1bulBandwidthRestrictedReason\x1a\xe1\x03\n" +
	"\x06Alerts\x12&\n" +
	"\x0fdish_is_heating\x18\x01 \x01(\bR\rdishIsHeating\x122\n" +
	"\x15dish_thermal_throttle\x18\x02 \x01(\bR\x13dishThermalThrottle\x122\n" +
	"\x15dish_thermal_shutdown\x18\x03 \x01(\bR\x13dishThermalShutdown\x12A\n" +
	"\x1dpower_supply_thermal_throttle\x18\x04 \x01(\bR\x1apowerSupplyThermalThrottle\x12!\n" +
	"\fmotors_stuck\x18\x05 \x01(\bR\vmotorsStuck\x123\n" +
	"\x16mast_not_near_vertical\x18\x06 \x01(\bR\x13mastNotNearVertical\x120\n" +
	"\x14slow_ethernet_speeds\x18\a \x01(\bR\x12slowEthernetSpeeds\x128\n" +
	"\x18software_install_pending\x18\b \x01(\bR\x16softwareInstallPending\x12\x1e\n" +
	"\n" +
	"obstructed\x18\n" +
	" \x01(\bR\n" +
	"obstructedJ\x04\b\t\x10\n" +
	"R\x1amoving_too_fast_for_policy\x1a\x8e\x02\n" +
	"\bLocation\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12'\n" +
	"\x0faltitude_meters\x18\x04 \x01(\x01R\x0ealtitudeMeters\x128\n" +
	"\x18uncertainty_meters_valid\x18\x05 \x01(\bR\x16uncertaintyMetersValid\x12-\n" +
	"\x12uncertainty_meters\x18\x06 \x01(\x01R\x11uncertaintyMeters\x12\x1c\n" +
	"\n" +
	"gps_time_s\x18\a \x01(\x01R\bgpsTimeS\x1a\x86\x02\n" +
	"\x0eAlignmentStats\x122\n" +
	"\x15boresight_azimuth_deg\x18\x01 \x01(\x02R\x13boresightAzimuthDeg\x126\n" +
	"\x17boresight_elevation_deg\x18\x02 \x01(\x02R\x15boresightElevationDeg\x12A\n" +
	"\x1ddesired_boresight_azimuth_deg\x18\x03 \x01(\x02R\x1adesiredBoresightAzimuthDeg\x12E\n" +
	"\x1fdesired_boresight_elevation_deg\x18\x04 \x01(\x02R\x1cdesiredBoresightElevationDeg\"3\n" +
	"\n" +
	"TestResult\x12\r\n" +
	"\tNO_RESULT\x10\x00\x12\n" +
	"\n" +
	"\x06PASSED\x10\x01\x12\n" +
	"\n" +
	"\x06FAILED\x10\x02\"\xbd\x02\n" +
	"\x0eTestResultCode\x12\v\n" +
	"\aGENERAL\x10\x00\x12\v\n" +
	"\aBOOT_UP\x10\x01\x12\x0f\n" +
	"\vCPU_VOLTAGE\x10\x02\x12\x0e\n" +
	"\n" +
	"DBF_AAP_CS\x10\x03\x12\x10\n" +
	"\fDBF_NUM_FEMS\x10\x04\x12\x13\n" +
	"\x0fDBF_READ_ERRORS\x10\x05\x12\x0f\n" +
	"\vDBF_T_DIE_0\x10\x06\x12\x0f\n" +
	"\vDBF_T_DIE_1\x10\a\x12\x15\n" +
	"\x11DBF_T_DIE_0_VALID\x10\b\x12\x15\n" +
	"\x11DBF_T_DIE_1_VALID\x10\t\x12\r\n" +
	"\tETH_PRIME\x10\n" +
	"\x12\b\n" +
	"\x04EIRP\x10\v\x12\v\n" +
	"\aFEM_CUT\x10\f\x12\f\n" +
	"\bFUSE_AVS\x10\r\x12\a\n" +
	"\x03GPS\x10\x0e\x12\a\n" +
	"\x03IMU\x10\x0f\x12\a\n" +
	"\x03PHY\x10\x10\x12\r\n" +
	"\tSCP_ERROR\x10\x11\x12\x0f\n" +
	"\vTEMPERATURE\x10\x12\x12\n" +
	"\n" +
	"\x06VTSENS\x10\x13\"\x9b\x03\n" +
	"\x0fDisablementCode\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04OKAY\x10\x01\x12\x15\n" +
	"\x11NO_ACTIVE_ACCOUNT\x10\x02\x12 \n" +
	"\x1cTOO_FAR_FROM_SERVICE_ADDRESS\x10\x03\x12\f\n" +
	"\bIN_OCEAN\x10\x04\x12\x13\n" +
	"\x0fBLOCKED_COUNTRY\x10\x06\x12\x1f\n" +
	"\x1bDATA_OVERAGE_SANDBOX_POLICY\x10\a\x12\x14\n" +
	"\x10CELL_IS_DISABLED\x10\b\x12\x13\n" +
	"\x0fROAM_RESTRICTED\x10\n" +
	"\x12\x14\n" +
	"\x10UNKNOWN_LOCATION\x10\v\x12\x14\n" +
	"\x10ACCOUNT_DISABLED\x10\f\x12\x17\n" +
	"\x13UNSUPPORTED_VERSION\x10\r\x12\x1e\n" +
	"\x1aMOVING_TOO_FAST_FOR_POLICY\x10\x0e\x12!\n" +
	"\x1dUNDER_AVIATION_FLYOVER_LIMITS\x10\x0f\x12\x10\n" +
	"\fBLOCKED_AREA\x10\x10\"\x04\b\x05\x10\x05\"\x04\b\t\x10\t*\x0fINVALID_COUNTRY*\x12UNLICENSED_COUNTRY\"H\n" +
	"\x1aTcpConnectivityTestRequest\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\"\xb3\x04\n" +
	"\x1aUdpConnectivityTestRequest\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12]\n" +
	"\n" +
	"probe_data\x18\x03 \x01(\x0e2>.SpaceX.API.Device.UdpConnectivityTestRequest.UDPProbeDataTypeR\tprobeData\"\x89\x03\n" +
	"\x10UDPProbeDataType\x12\t\n" +
	"\x05EMPTY\x10\x00\x12\x16\n" +
	"\x12DNS_STATUS_REQUEST\x10\x01\x12\x15\n" +
	"\x11DTLS_CLIENT_HELLO\x10\x02\x12\x18\n" +
	"\x14DNS_VERSION_BIND_REQ\x10\x03\x12\r\n" +
	"\tRPC_CHECK\x10\x04\x12\n" +
	"\n" +
	"\x06DNS_SD\x10\x05\x12\x12\n" +
	"\x0eSNMP_V1_PUBLIC\x10\x06\x12\x17\n" +
	"\x13SNMP_V3_GET_REQUEST\x10\a\x12\x0f\n" +
	"\vNTP_MESSAGE\x10\b\x12\t\n" +
	"\x05XDMCP\x10\t\x12\f\n" +
	"\bKERBEROS\x10\n" +
	"\x12\x0f\n" +
	"\vSIP_OPTIONS\x10\v\x12\x13\n" +
	"\x0fLDAP_SEARCH_REQ\x10\f\x12\x13\n" +
	"\x0fMEMCACHED_STATS\x10\r\x12\v\n" +
	"\aOPENVPN\x10\x0e\x12\x0e\n" +
	"\n" +
	"CIFS_NS_UC\x10\x0f\x12\f\n" +
	"\bTFTP_GET\x10\x10\x12\x0f\n" +
	"\vDHCP_INFORM\x10\x11\x12\b\n" +
	"\x04QUIC\x10\x12\x12\t\n" +
	"\x05RIPV1\x10\x13\x12\x11\n" +
	"\rNFS_PROC_NULL\x10\x14\x12\x10\n" +
	"\fCOAP_REQUEST\x10\x15\" \n" +
	"\x1eGetGoroutineStackTracesRequest\"D\n" +
	"\x1fGetGoroutineStackTracesResponse\x12!\n" +
	"\fstack_traces\x18\x01 \x01(\tR\vstackTraces*\x8b\x01\n" +
	"\x16WifiClientSandboxAlert\x12\x19\n" +
	"\x15SANDBOX_ALERT_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14SANDBOX_ALERT_PORTAL\x10\x01\x12\x1c\n" +
	"\x18SANDBOX_ALERT_GROUND_API\x10\x02\x12\x1e\n" +
	"\x1aSANDBOX_ALERT_STARLINK_API\x10\x03*\x8c\x01\n" +
	"\x0ePositionSource\x12\b\n" +
	"\x04AUTO\x10\x00\x12\b\n" +
	"\x04NONE\x10\x01\x12\v\n" +
	"\aUT_INFO\x10\x02\x12\f\n" +
	"\bEXTERNAL\x10\x03\x12\a\n" +
	"\x03GPS\x10\x04\x12\f\n" +
	"\bSTARLINK\x10\x05\x12\v\n" +
	"\aGNC_GPS\x10\x06\x12\v\n" +
	"\aGNC_PNT\x10\a\x12\r\n" +
	"\tGNC_FUSED\x10\b\x12\v\n" +
	"\aGNC_RAW\x10\t*\xb7\x01\n" +
	"\x0eSpeedtestError\x12\x18\n" +
	"\x14SPEEDTEST_ERROR_NONE\x10\x00\x12\x1b\n" +
	"\x17SPEEDTEST_ERROR_UNKNOWN\x10\x01\x12\x19\n" +
	"\x15SPEEDTEST_ERROR_TOKEN\x10\x02\x12\x17\n" +
	"\x13SPEEDTEST_ERROR_API\x10\x03\x12\x1d\n" +
	"\x19SPEEDTEST_ERROR_NO_RESULT\x10\x04\x12\x1b\n" +
	"\x17SPEEDTEST_ERROR_OFFLINE\x10\x052\x95\x01\n" +
	"\x06Device\x12H\n" +
	"\x06Stream\x12\x1b.SpaceX.API.Device.ToDevice\x1a\x1d.SpaceX.API.Device.FromDevice(\x010\x01\x12A\n" +
	"\x06Handle\x12\x1a.SpaceX.API.Device.Request\x1a\x1b.SpaceX.API.Device.ResponseB\x17Z\x15spacex.com/api/deviceb\x06proto3"

var (
	file_spacex_api_device_device_proto_rawDescOnce sync.Once
	file_spacex_api_device_device_proto_rawDescData []byte
)

func file_spacex_api_device_device_proto_rawDescGZIP() []byte {
	file_spacex_api_device_device_proto_rawDescOnce.Do(func() {
		file_spacex_api_device_device_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spacex_api_device_device_proto_rawDesc), len(file_spacex_api_device_device_proto_rawDesc)))
	})
	return file_spacex_api_device_device_proto_rawDescData
}

var file_spacex_api_device_device_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_spacex_api_device_device_proto_msgTypes = make([]protoimpl.MessageInfo, 88)
var file_spacex_api_device_device_proto_goTypes = []any{
	(WifiClientSandboxAlert)(0),                       // 0: SpaceX.API.Device.WifiClientSandboxAlert
	(PositionSource)(0),                               // 1: SpaceX.API.Device.PositionSource
	(SpeedtestError)(0),                               // 2: SpaceX.API.Device.SpeedtestError
	(SpeedTestStats_Target)(0),                        // 3: SpaceX.API.Device.SpeedTestStats.Target
	(ClientPlatform_Platform)(0),                      // 4: SpaceX.API.Device.ClientPlatform.Platform
	(DishGetDiagnosticsResponse_TestResult)(0),        // 5: SpaceX.API.Device.DishGetDiagnosticsResponse.TestResult
	(DishGetDiagnosticsResponse_TestResultCode)(0),    // 6: SpaceX.API.Device.DishGetDiagnosticsResponse.TestResultCode
	(DishGetDiagnosticsResponse_DisablementCode)(0),   // 7: SpaceX.API.Device.DishGetDiagnosticsResponse.DisablementCode
	(UdpConnectivityTestRequest_UDPProbeDataType)(0),  // 8: SpaceX.API.Device.UdpConnectivityTestRequest.UDPProbeDataType
	(*ToDevice)(nil),                                  // 9: SpaceX.API.Device.ToDevice
	(*FromDevice)(nil),                                // 10: SpaceX.API.Device.FromDevice
	(*SensitiveCommand)(nil),                          // 11: SpaceX.API.Device.SensitiveCommand
	(*HealthCheck)(nil),                               // 12: SpaceX.API.Device.HealthCheck
	(*Request)(nil),                                   // 13: SpaceX.API.Device.Request
	(*Response)(nil),                                  // 14: SpaceX.API.Device.Response
	(*Event)(nil),                                     // 15: SpaceX.API.Device.Event
	(*WifiCloudStatusEvent)(nil),                      // 16: SpaceX.API.Device.WifiCloudStatusEvent
	(*WifiClientSandboxRequest)(nil),                  // 17: SpaceX.API.Device.WifiClientSandboxRequest
	(*WifiClientSandboxResponse)(nil),                 // 18: SpaceX.API.Device.WifiClientSandboxResponse
	(*WifiClientSandboxStatus)(nil),                   // 19: SpaceX.API.Device.WifiClientSandboxStatus
	(*EnableDebugTelemRequest)(nil),                   // 20: SpaceX.API.Device.EnableDebugTelemRequest
	(*EnableDebugTelemResponse)(nil),                  // 21: SpaceX.API.Device.EnableDebugTelemResponse
	(*FactoryResetRequest)(nil),                       // 22: SpaceX.API.Device.FactoryResetRequest
	(*FactoryResetResponse)(nil),                      // 23: SpaceX.API.Device.FactoryResetResponse
	(*GetTimeRequest)(nil),                            // 24: SpaceX.API.Device.GetTimeRequest
	(*GetTimeResponse)(nil),                           // 25: SpaceX.API.Device.GetTimeResponse
	(*FuseRequest)(nil),                               // 26: SpaceX.API.Device.FuseRequest
	(*FuseResponse)(nil),                              // 27: SpaceX.API.Device.FuseResponse
	(*GetHistoryRequest)(nil),                         // 28: SpaceX.API.Device.GetHistoryRequest
	(*GetLogRequest)(nil),                             // 29: SpaceX.API.Device.GetLogRequest
	(*GetLogResponse)(nil),                            // 30: SpaceX.API.Device.GetLogResponse
	(*GetPingRequest)(nil),                            // 31: SpaceX.API.Device.GetPingRequest
	(*GetPingResponse)(nil),                           // 32: SpaceX.API.Device.GetPingResponse
	(*PingHostRequest)(nil),                           // 33: SpaceX.API.Device.PingHostRequest
	(*PingHostResponse)(nil),                          // 34: SpaceX.API.Device.PingHostResponse
	(*GetStatusRequest)(nil),                          // 35: SpaceX.API.Device.GetStatusRequest
	(*RebootRequest)(nil),                             // 36: SpaceX.API.Device.RebootRequest
	(*RebootResponse)(nil),                            // 37: SpaceX.API.Device.RebootResponse
	(*SpeedTestStats)(nil),                            // 38: SpaceX.API.Device.SpeedTestStats
	(*ClientPlatform)(nil),                            // 39: SpaceX.API.Device.ClientPlatform
	(*SpeedTestRequest)(nil),                          // 40: SpaceX.API.Device.SpeedTestRequest
	(*SpeedTestResponse)(nil),                         // 41: SpaceX.API.Device.SpeedTestResponse
	(*RunIperfServerRequest)(nil),                     // 42: SpaceX.API.Device.RunIperfServerRequest
	(*RunIperfServerResponse)(nil),                    // 43: SpaceX.API.Device.RunIperfServerResponse
	(*GetConnectionsRequest)(nil),                     // 44: SpaceX.API.Device.GetConnectionsRequest
	(*GetConnectionsResponse)(nil),                    // 45: SpaceX.API.Device.GetConnectionsResponse
	(*GetDeviceInfoRequest)(nil),                      // 46: SpaceX.API.Device.GetDeviceInfoRequest
	(*GetDeviceInfoResponse)(nil),                     // 47: SpaceX.API.Device.GetDeviceInfoResponse
	(*SetTrustedKeysRequest)(nil),                     // 48: SpaceX.API.Device.SetTrustedKeysRequest
	(*SetTrustedKeysResponse)(nil),                    // 49: SpaceX.API.Device.SetTrustedKeysResponse
	(*SetSkuRequest)(nil),                             // 50: SpaceX.API.Device.SetSkuRequest
	(*SetSkuResponse)(nil),                            // 51: SpaceX.API.Device.SetSkuResponse
	(*UpdateRequest)(nil),                             // 52: SpaceX.API.Device.UpdateRequest
	(*UpdateResponse)(nil),                            // 53: SpaceX.API.Device.UpdateResponse
	(*RestartControlRequest)(nil),                     // 54: SpaceX.API.Device.RestartControlRequest
	(*RestartControlResponse)(nil),                    // 55: SpaceX.API.Device.RestartControlResponse
	(*GetNetworkInterfacesRequest)(nil),               // 56: SpaceX.API.Device.GetNetworkInterfacesRequest
	(*GetNetworkInterfacesResponse)(nil),              // 57: SpaceX.API.Device.GetNetworkInterfacesResponse
	(*GetRadioStatsRequest)(nil),                      // 58: SpaceX.API.Device.GetRadioStatsRequest
	(*GetRadioStatsResponse)(nil),                     // 59: SpaceX.API.Device.GetRadioStatsResponse
	(*GetHeapDumpRequest)(nil),                        // 60: SpaceX.API.Device.GetHeapDumpRequest
	(*GetHeapDumpResponse)(nil),                       // 61: SpaceX.API.Device.GetHeapDumpResponse
	(*GetLocationRequest)(nil),                        // 62: SpaceX.API.Device.GetLocationRequest
	(*GetLocationResponse)(nil),                       // 63: SpaceX.API.Device.GetLocationResponse
	(*DishSetEmcRequest)(nil),                         // 64: SpaceX.API.Device.DishSetEmcRequest
	(*DishSetEmcResponse)(nil),                        // 65: SpaceX.API.Device.DishSetEmcResponse
	(*DishSetMaxPowerTestModeRequest)(nil),            // 66: SpaceX.API.Device.DishSetMaxPowerTestModeRequest
	(*DishSetMaxPowerTestModeResponse)(nil),           // 67: SpaceX.API.Device.DishSetMaxPowerTestModeResponse
	(*DishGetEmcRequest)(nil),                         // 68: SpaceX.API.Device.DishGetEmcRequest
	(*DishGetEmcResponse)(nil),                        // 69: SpaceX.API.Device.DishGetEmcResponse
	(*GetPersistentStatsRequest)(nil),                 // 70: SpaceX.API.Device.GetPersistentStatsRequest
	(*StartSpeedtestRequest)(nil),                     // 71: SpaceX.API.Device.StartSpeedtestRequest
	(*StartSpeedtestResponse)(nil),                    // 72: SpaceX.API.Device.StartSpeedtestResponse
	(*SpeedtestStatus)(nil),                           // 73: SpaceX.API.Device.SpeedtestStatus
	(*GetSpeedtestStatusRequest)(nil),                 // 74: SpaceX.API.Device.GetSpeedtestStatusRequest
	(*GetSpeedtestStatusResponse)(nil),                // 75: SpaceX.API.Device.GetSpeedtestStatusResponse
	(*ReportClientSpeedtestRequest)(nil),              // 76: SpaceX.API.Device.ReportClientSpeedtestRequest
	(*ReportClientSpeedtestResponse)(nil),             // 77: SpaceX.API.Device.ReportClientSpeedtestResponse
	(*SetPerVehicleConfigResponse)(nil),               // 78: SpaceX.API.Device.SetPerVehicleConfigResponse
	(*DishPowerSaveRequest)(nil),                      // 79: SpaceX.API.Device.DishPowerSaveRequest
	(*IQCaptureRequest)(nil),                          // 80: SpaceX.API.Device.IQCaptureRequest
	(*GetDiagnosticsRequest)(nil),                     // 81: SpaceX.API.Device.GetDiagnosticsRequest
	(*WifiGetDiagnosticsResponse)(nil),                // 82: SpaceX.API.Device.WifiGetDiagnosticsResponse
	(*DishGetDiagnosticsResponse)(nil),                // 83: SpaceX.API.Device.DishGetDiagnosticsResponse
	(*TcpConnectivityTestRequest)(nil),                // 84: SpaceX.API.Device.TcpConnectivityTestRequest
	(*UdpConnectivityTestRequest)(nil),                // 85: SpaceX.API.Device.UdpConnectivityTestRequest
	(*GetGoroutineStackTracesRequest)(nil),            // 86: SpaceX.API.Device.GetGoroutineStackTracesRequest
	(*GetGoroutineStackTracesResponse)(nil),           // 87: SpaceX.API.Device.GetGoroutineStackTracesResponse
	(*GetLogResponse_Logs)(nil),                       // 88: SpaceX.API.Device.GetLogResponse.Logs
	nil,                                               // 89: SpaceX.API.Device.GetPingResponse.ResultsEntry
	nil,                                               // 90: SpaceX.API.Device.GetConnectionsResponse.ServicesEntry
	(*GetConnectionsResponse_ServiceConnection)(nil),  // 91: SpaceX.API.Device.GetConnectionsResponse.ServiceConnection
	(*SpeedtestStatus_Direction)(nil),                 // 92: SpaceX.API.Device.SpeedtestStatus.Direction
	(*WifiGetDiagnosticsResponse_Network)(nil),        // 93: SpaceX.API.Device.WifiGetDiagnosticsResponse.Network
	(*DishGetDiagnosticsResponse_Alerts)(nil),         // 94: SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts
	(*DishGetDiagnosticsResponse_Location)(nil),       // 95: SpaceX.API.Device.DishGetDiagnosticsResponse.Location
	(*DishGetDiagnosticsResponse_AlignmentStats)(nil), // 96: SpaceX.API.Device.DishGetDiagnosticsResponse.AlignmentStats
	(*timestamppb.Timestamp)(nil),                     // 97: google.protobuf.Timestamp
	(*SignedData)(nil),                                // 98: SpaceX.API.Device.SignedData
	(*GetNextIdRequest)(nil),                          // 99: SpaceX.API.Device.GetNextIdRequest
	(*AuthenticateRequest)(nil),                       // 100: SpaceX.API.Device.AuthenticateRequest
	(*InitiateRemoteSshRequest)(nil),                  // 101: SpaceX.API.Device.InitiateRemoteSshRequest
	(*SelfTestRequest)(nil),                           // 102: SpaceX.API.Device.SelfTestRequest
	(*SetTestModeRequest)(nil),                        // 103: SpaceX.API.Device.SetTestModeRequest
	(*SoftwareUpdateRequest)(nil),                     // 104: SpaceX.API.Device.SoftwareUpdateRequest
	(*DishStowRequest)(nil),                           // 105: SpaceX.API.Device.DishStowRequest
	(*DishGetContextRequest)(nil),                     // 106: SpaceX.API.Device.DishGetContextRequest
	(*DishGetObstructionMapRequest)(nil),              // 107: SpaceX.API.Device.DishGetObstructionMapRequest
	(*DishSetConfigRequest)(nil),                      // 108: SpaceX.API.Device.DishSetConfigRequest
	(*DishGetConfigRequest)(nil),                      // 109: SpaceX.API.Device.DishGetConfigRequest
	(*DishInhibitGpsRequest)(nil),                     // 110: SpaceX.API.Device.DishInhibitGpsRequest
	(*DishGetDataRequest)(nil),                        // 111: SpaceX.API.Device.DishGetDataRequest
	(*DishClearObstructionMapRequest)(nil),            // 112: SpaceX.API.Device.DishClearObstructionMapRequest
	(*DishActivateRssiScanRequest)(nil),               // 113: SpaceX.API.Device.DishActivateRssiScanRequest
	(*DishGetRssiScanResultRequest)(nil),              // 114: SpaceX.API.Device.DishGetRssiScanResultRequest
	(*DishFactoryResetRequest)(nil),                   // 115: SpaceX.API.Device.DishFactoryResetRequest
	(*ResetButtonRequest)(nil),                        // 116: SpaceX.API.Device.ResetButtonRequest
	(*DishAviationTestRequest)(nil),                   // 117: SpaceX.API.Device.DishAviationTestRequest
	(*WifiGetClientsRequest)(nil),                     // 118: SpaceX.API.Device.WifiGetClientsRequest
	(*WifiGetPingMetricsRequest)(nil),                 // 119: SpaceX.API.Device.WifiGetPingMetricsRequest
	(*WifiSetConfigRequest)(nil),                      // 120: SpaceX.API.Device.WifiSetConfigRequest
	(*WifiGetConfigRequest)(nil),                      // 121: SpaceX.API.Device.WifiGetConfigRequest
	(*WifiSetupRequest)(nil),                          // 122: SpaceX.API.Device.WifiSetupRequest
	(*WifiSetMeshDeviceTrustRequest)(nil),             // 123: SpaceX.API.Device.WifiSetMeshDeviceTrustRequest
	(*WifiSetMeshConfigRequest)(nil),                  // 124: SpaceX.API.Device.WifiSetMeshConfigRequest
	(*WifiGetClientHistoryRequest)(nil),               // 125: SpaceX.API.Device.WifiGetClientHistoryRequest
	(*WifiSetClientGivenNameRequest)(nil),             // 126: SpaceX.API.Device.WifiSetClientGivenNameRequest
	(*WifiSetAviationConformedRequest)(nil),           // 127: SpaceX.API.Device.WifiSetAviationConformedRequest
	(*WifiSelfTestRequest)(nil),                       // 128: SpaceX.API.Device.WifiSelfTestRequest
	(*WifiRunSelfTestRequest)(nil),                    // 129: SpaceX.API.Device.WifiRunSelfTestRequest
	(*WifiCalibrationModeRequest)(nil),                // 130: SpaceX.API.Device.WifiCalibrationModeRequest
	(*WifiGuestInfoRequest)(nil),                      // 131: SpaceX.API.Device.WifiGuestInfoRequest
	(*WifiRfTestRequest)(nil),                         // 132: SpaceX.API.Device.WifiRfTestRequest
	(*WifiGetFirewallRequest)(nil),                    // 133: SpaceX.API.Device.WifiGetFirewallRequest
	(*WifiTogglePoeNegotiationRequest)(nil),           // 134: SpaceX.API.Device.WifiTogglePoeNegotiationRequest
	(*WifiFactoryTestCommandRequest)(nil),             // 135: SpaceX.API.Device.WifiFactoryTestCommandRequest
	(*WifiStartLocalTelemProxyRequest)(nil),           // 136: SpaceX.API.Device.WifiStartLocalTelemProxyRequest
	(*WifiBackhaulStatsRequest)(nil),                  // 137: SpaceX.API.Device.WifiBackhaulStatsRequest
	(*WifiToggleUmbilicalModeRequest)(nil),            // 138: SpaceX.API.Device.WifiToggleUmbilicalModeRequest
	(*TransceiverIFLoopbackTestRequest)(nil),          // 139: SpaceX.API.Device.TransceiverIFLoopbackTestRequest
	(*TransceiverGetStatusRequest)(nil),               // 140: SpaceX.API.Device.TransceiverGetStatusRequest
	(*TransceiverGetTelemetryRequest)(nil),            // 141: SpaceX.API.Device.TransceiverGetTelemetryRequest
	(*unlock.StartUnlockRequest)(nil),                 // 142: SpaceX.API.Device.Services.Unlock.StartUnlockRequest
	(*unlock.FinishUnlockRequest)(nil),                // 143: SpaceX.API.Device.Services.Unlock.FinishUnlockRequest
	(*status.Status)(nil),                             // 144: SpaceX.API.Status.Status
	(*GetNextIdResponse)(nil),                         // 145: SpaceX.API.Device.GetNextIdResponse
	(*InitiateRemoteSshResponse)(nil),                 // 146: SpaceX.API.Device.InitiateRemoteSshResponse
	(*SelfTestResponse)(nil),                          // 147: SpaceX.API.Device.SelfTestResponse
	(*SetTestModeResponse)(nil),                       // 148: SpaceX.API.Device.SetTestModeResponse
	(*SoftwareUpdateResponse)(nil),                    // 149: SpaceX.API.Device.SoftwareUpdateResponse
	(*DishAuthenticateResponse)(nil),                  // 150: SpaceX.API.Device.DishAuthenticateResponse
	(*DishGetContextResponse)(nil),                    // 151: SpaceX.API.Device.DishGetContextResponse
	(*DishGetHistoryResponse)(nil),                    // 152: SpaceX.API.Device.DishGetHistoryResponse
	(*DishGetStatusResponse)(nil),                     // 153: SpaceX.API.Device.DishGetStatusResponse
	(*DishGetObstructionMapResponse)(nil),             // 154: SpaceX.API.Device.DishGetObstructionMapResponse
	(*DishStowResponse)(nil),                          // 155: SpaceX.API.Device.DishStowResponse
	(*DishSetConfigResponse)(nil),                     // 156: SpaceX.API.Device.DishSetConfigResponse
	(*DishGetConfigResponse)(nil),                     // 157: SpaceX.API.Device.DishGetConfigResponse
	(*DishInhibitGpsResponse)(nil),                    // 158: SpaceX.API.Device.DishInhibitGpsResponse
	(*DishClearObstructionMapResponse)(nil),           // 159: SpaceX.API.Device.DishClearObstructionMapResponse
	(*DishActivateRssiScanResponse)(nil),              // 160: SpaceX.API.Device.DishActivateRssiScanResponse
	(*DishGetRssiScanResultResponse)(nil),             // 161: SpaceX.API.Device.DishGetRssiScanResultResponse
	(*DishFactoryResetResponse)(nil),                  // 162: SpaceX.API.Device.DishFactoryResetResponse
	(*ResetButtonResponse)(nil),                       // 163: SpaceX.API.Device.ResetButtonResponse
	(*DishAviationTestResponse)(nil),                  // 164: SpaceX.API.Device.DishAviationTestResponse
	(*WifiAuthenticateResponse)(nil),                  // 165: SpaceX.API.Device.WifiAuthenticateResponse
	(*WifiGetClientsResponse)(nil),                    // 166: SpaceX.API.Device.WifiGetClientsResponse
	(*WifiGetHistoryResponse)(nil),                    // 167: SpaceX.API.Device.WifiGetHistoryResponse
	(*WifiGetPingMetricsResponse)(nil),                // 168: SpaceX.API.Device.WifiGetPingMetricsResponse
	(*WifiGetStatusResponse)(nil),                     // 169: SpaceX.API.Device.WifiGetStatusResponse
	(*WifiSetConfigResponse)(nil),                     // 170: SpaceX.API.Device.WifiSetConfigResponse
	(*WifiGetConfigResponse)(nil),                     // 171: SpaceX.API.Device.WifiGetConfigResponse
	(*WifiSetupResponse)(nil),                         // 172: SpaceX.API.Device.WifiSetupResponse
	(*WifiGetPersistentStatsResponse)(nil),            // 173: SpaceX.API.Device.WifiGetPersistentStatsResponse
	(*WifiSetMeshDeviceTrustResponse)(nil),            // 174: SpaceX.API.Device.WifiSetMeshDeviceTrustResponse
	(*WifiSetMeshConfigResponse)(nil),                 // 175: SpaceX.API.Device.WifiSetMeshConfigResponse
	(*WifiGetClientHistoryResponse)(nil),              // 176: SpaceX.API.Device.WifiGetClientHistoryResponse
	(*WifiSelfTestResponse)(nil),                      // 177: SpaceX.API.Device.WifiSelfTestResponse
	(*WifiGuestInfoResponse)(nil),                     // 178: SpaceX.API.Device.WifiGuestInfoResponse
	(*WifiRfTestResponse)(nil),                        // 179: SpaceX.API.Device.WifiRfTestResponse
	(*WifiGetFirewallResponse)(nil),                   // 180: SpaceX.API.Device.WifiGetFirewallResponse
	(*WifiFactoryTestCommandResponse)(nil),            // 181: SpaceX.API.Device.WifiFactoryTestCommandResponse
	(*WifiBackhaulStatsResponse)(nil),                 // 182: SpaceX.API.Device.WifiBackhaulStatsResponse
	(*WifiUpdateResponse)(nil),                        // 183: SpaceX.API.Device.WifiUpdateResponse
	(*TransceiverIFLoopbackTestResponse)(nil),         // 184: SpaceX.API.Device.TransceiverIFLoopbackTestResponse
	(*TransceiverGetStatusResponse)(nil),              // 185: SpaceX.API.Device.TransceiverGetStatusResponse
	(*TransceiverGetTelemetryResponse)(nil),           // 186: SpaceX.API.Device.TransceiverGetTelemetryResponse
	(*unlock.StartUnlockResponse)(nil),                // 187: SpaceX.API.Device.Services.Unlock.StartUnlockResponse
	(*unlock.FinishUnlockResponse)(nil),               // 188: SpaceX.API.Device.Services.Unlock.FinishUnlockResponse
	(*WifiNewClientConnectedEvent)(nil),               // 189: SpaceX.API.Device.WifiNewClientConnectedEvent
	(*WifiAccountBondingEvent)(nil),                   // 190: SpaceX.API.Device.WifiAccountBondingEvent
	(*WifiNewPeerEvent)(nil),                          // 191: SpaceX.API.Device.WifiNewPeerEvent
	(*PingResult)(nil),                                // 192: SpaceX.API.Device.PingResult
	(RouterRole)(0),                                   // 193: SpaceX.API.Device.RouterRole
	(*DeviceInfo)(nil),                                // 194: SpaceX.API.Device.DeviceInfo
	(*PublicKey)(nil),                                 // 195: SpaceX.API.Device.PublicKey
	(*NetworkInterface)(nil),                          // 196: SpaceX.API.Device.NetworkInterface
	(*RadioStats)(nil),                                // 197: SpaceX.API.Device.RadioStats
	(*LLAPosition)(nil),                               // 198: SpaceX.API.Device.LLAPosition
	(integrations.RateLimitReason)(0),                 // 199: SpaceX.API.Telemetron.Public.Integrations.RateLimitReason
}
var file_spacex_api_device_device_proto_depIdxs = []int32{
	13,  // 0: SpaceX.API.Device.ToDevice.request:type_name -> SpaceX.API.Device.Request
	12,  // 1: SpaceX.API.Device.ToDevice.health_check:type_name -> SpaceX.API.Device.HealthCheck
	14,  // 2: SpaceX.API.Device.FromDevice.response:type_name -> SpaceX.API.Device.Response
	15,  // 3: SpaceX.API.Device.FromDevice.event:type_name -> SpaceX.API.Device.Event
	12,  // 4: SpaceX.API.Device.FromDevice.health_check:type_name -> SpaceX.API.Device.HealthCheck
	97,  // 5: SpaceX.API.Device.SensitiveCommand.timestamp:type_name -> google.protobuf.Timestamp
	62,  // 6: SpaceX.API.Device.SensitiveCommand.get_location:type_name -> SpaceX.API.Device.GetLocationRequest
	98,  // 7: SpaceX.API.Device.Request.signed_request:type_name -> SpaceX.API.Device.SignedData
	99,  // 8: SpaceX.API.Device.Request.get_next_id:type_name -> SpaceX.API.Device.GetNextIdRequest
	98,  // 9: SpaceX.API.Device.Request.sensitive_request:type_name -> SpaceX.API.Device.SignedData
	100, // 10: SpaceX.API.Device.Request.authenticate:type_name -> SpaceX.API.Device.AuthenticateRequest
	20,  // 11: SpaceX.API.Device.Request.enable_debug_telem:type_name -> SpaceX.API.Device.EnableDebugTelemRequest
	22,  // 12: SpaceX.API.Device.Request.factory_reset:type_name -> SpaceX.API.Device.FactoryResetRequest
	46,  // 13: SpaceX.API.Device.Request.get_device_info:type_name -> SpaceX.API.Device.GetDeviceInfoRequest
	28,  // 14: SpaceX.API.Device.Request.get_history:type_name -> SpaceX.API.Device.GetHistoryRequest
	29,  // 15: SpaceX.API.Device.Request.get_log:type_name -> SpaceX.API.Device.GetLogRequest
	56,  // 16: SpaceX.API.Device.Request.get_network_interfaces:type_name -> SpaceX.API.Device.GetNetworkInterfacesRequest
	31,  // 17: SpaceX.API.Device.Request.get_ping:type_name -> SpaceX.API.Device.GetPingRequest
	33,  // 18: SpaceX.API.Device.Request.ping_host:type_name -> SpaceX.API.Device.PingHostRequest
	35,  // 19: SpaceX.API.Device.Request.get_status:type_name -> SpaceX.API.Device.GetStatusRequest
	36,  // 20: SpaceX.API.Device.Request.reboot:type_name -> SpaceX.API.Device.RebootRequest
	50,  // 21: SpaceX.API.Device.Request.set_sku:type_name -> SpaceX.API.Device.SetSkuRequest
	48,  // 22: SpaceX.API.Device.Request.set_trusted_keys:type_name -> SpaceX.API.Device.SetTrustedKeysRequest
	40,  // 23: SpaceX.API.Device.Request.speed_test:type_name -> SpaceX.API.Device.SpeedTestRequest
	52,  // 24: SpaceX.API.Device.Request.update:type_name -> SpaceX.API.Device.UpdateRequest
	62,  // 25: SpaceX.API.Device.Request.get_location:type_name -> SpaceX.API.Device.GetLocationRequest
	60,  // 26: SpaceX.API.Device.Request.get_heap_dump:type_name -> SpaceX.API.Device.GetHeapDumpRequest
	54,  // 27: SpaceX.API.Device.Request.restart_control:type_name -> SpaceX.API.Device.RestartControlRequest
	26,  // 28: SpaceX.API.Device.Request.fuse:type_name -> SpaceX.API.Device.FuseRequest
	70,  // 29: SpaceX.API.Device.Request.get_persistent_stats:type_name -> SpaceX.API.Device.GetPersistentStatsRequest
	44,  // 30: SpaceX.API.Device.Request.get_connections:type_name -> SpaceX.API.Device.GetConnectionsRequest
	71,  // 31: SpaceX.API.Device.Request.start_speedtest:type_name -> SpaceX.API.Device.StartSpeedtestRequest
	74,  // 32: SpaceX.API.Device.Request.get_speedtest_status:type_name -> SpaceX.API.Device.GetSpeedtestStatusRequest
	76,  // 33: SpaceX.API.Device.Request.report_client_speedtest:type_name -> SpaceX.API.Device.ReportClientSpeedtestRequest
	101, // 34: SpaceX.API.Device.Request.initiate_remote_ssh:type_name -> SpaceX.API.Device.InitiateRemoteSshRequest
	102, // 35: SpaceX.API.Device.Request.self_test:type_name -> SpaceX.API.Device.SelfTestRequest
	103, // 36: SpaceX.API.Device.Request.set_test_mode:type_name -> SpaceX.API.Device.SetTestModeRequest
	104, // 37: SpaceX.API.Device.Request.software_update:type_name -> SpaceX.API.Device.SoftwareUpdateRequest
	80,  // 38: SpaceX.API.Device.Request.iq_capture:type_name -> SpaceX.API.Device.IQCaptureRequest
	58,  // 39: SpaceX.API.Device.Request.get_radio_stats:type_name -> SpaceX.API.Device.GetRadioStatsRequest
	24,  // 40: SpaceX.API.Device.Request.time:type_name -> SpaceX.API.Device.GetTimeRequest
	42,  // 41: SpaceX.API.Device.Request.run_iperf_server:type_name -> SpaceX.API.Device.RunIperfServerRequest
	84,  // 42: SpaceX.API.Device.Request.tcp_connectivity_test:type_name -> SpaceX.API.Device.TcpConnectivityTestRequest
	85,  // 43: SpaceX.API.Device.Request.udp_connectivity_test:type_name -> SpaceX.API.Device.UdpConnectivityTestRequest
	86,  // 44: SpaceX.API.Device.Request.get_goroutine_stack_traces:type_name -> SpaceX.API.Device.GetGoroutineStackTracesRequest
	105, // 45: SpaceX.API.Device.Request.dish_stow:type_name -> SpaceX.API.Device.DishStowRequest
	106, // 46: SpaceX.API.Device.Request.dish_get_context:type_name -> SpaceX.API.Device.DishGetContextRequest
	107, // 47: SpaceX.API.Device.Request.dish_get_obstruction_map:type_name -> SpaceX.API.Device.DishGetObstructionMapRequest
	64,  // 48: SpaceX.API.Device.Request.dish_set_emc:type_name -> SpaceX.API.Device.DishSetEmcRequest
	68,  // 49: SpaceX.API.Device.Request.dish_get_emc:type_name -> SpaceX.API.Device.DishGetEmcRequest
	108, // 50: SpaceX.API.Device.Request.dish_set_config:type_name -> SpaceX.API.Device.DishSetConfigRequest
	109, // 51: SpaceX.API.Device.Request.dish_get_config:type_name -> SpaceX.API.Device.DishGetConfigRequest
	79,  // 52: SpaceX.API.Device.Request.dish_power_save:type_name -> SpaceX.API.Device.DishPowerSaveRequest
	110, // 53: SpaceX.API.Device.Request.dish_inhibit_gps:type_name -> SpaceX.API.Device.DishInhibitGpsRequest
	111, // 54: SpaceX.API.Device.Request.dish_get_data:type_name -> SpaceX.API.Device.DishGetDataRequest
	112, // 55: SpaceX.API.Device.Request.dish_clear_obstruction_map:type_name -> SpaceX.API.Device.DishClearObstructionMapRequest
	66,  // 56: SpaceX.API.Device.Request.dish_set_max_power_test_mode:type_name -> SpaceX.API.Device.DishSetMaxPowerTestModeRequest
	113, // 57: SpaceX.API.Device.Request.dish_activate_rssi_scan:type_name -> SpaceX.API.Device.DishActivateRssiScanRequest
	114, // 58: SpaceX.API.Device.Request.dish_get_rssi_scan_result:type_name -> SpaceX.API.Device.DishGetRssiScanResultRequest
	115, // 59: SpaceX.API.Device.Request.dish_factory_reset:type_name -> SpaceX.API.Device.DishFactoryResetRequest
	116, // 60: SpaceX.API.Device.Request.reset_button:type_name -> SpaceX.API.Device.ResetButtonRequest
	104, // 61: SpaceX.API.Device.Request.set_per_vehicle_config:type_name -> SpaceX.API.Device.SoftwareUpdateRequest
	117, // 62: SpaceX.API.Device.Request.dish_aviation_test:type_name -> SpaceX.API.Device.DishAviationTestRequest
	118, // 63: SpaceX.API.Device.Request.wifi_get_clients:type_name -> SpaceX.API.Device.WifiGetClientsRequest
	119, // 64: SpaceX.API.Device.Request.wifi_get_ping_metrics:type_name -> SpaceX.API.Device.WifiGetPingMetricsRequest
	120, // 65: SpaceX.API.Device.Request.wifi_set_config:type_name -> SpaceX.API.Device.WifiSetConfigRequest
	121, // 66: SpaceX.API.Device.Request.wifi_get_config:type_name -> SpaceX.API.Device.WifiGetConfigRequest
	122, // 67: SpaceX.API.Device.Request.wifi_setup:type_name -> SpaceX.API.Device.WifiSetupRequest
	123, // 68: SpaceX.API.Device.Request.wifi_set_mesh_device_trust:type_name -> SpaceX.API.Device.WifiSetMeshDeviceTrustRequest
	124, // 69: SpaceX.API.Device.Request.wifi_set_mesh_config:type_name -> SpaceX.API.Device.WifiSetMeshConfigRequest
	125, // 70: SpaceX.API.Device.Request.wifi_get_client_history:type_name -> SpaceX.API.Device.WifiGetClientHistoryRequest
	126, // 71: SpaceX.API.Device.Request.wifi_set_client_given_name:type_name -> SpaceX.API.Device.WifiSetClientGivenNameRequest
	127, // 72: SpaceX.API.Device.Request.wifi_set_aviation_conformed:type_name -> SpaceX.API.Device.WifiSetAviationConformedRequest
	128, // 73: SpaceX.API.Device.Request.wifi_self_test:type_name -> SpaceX.API.Device.WifiSelfTestRequest
	129, // 74: SpaceX.API.Device.Request.wifi_run_self_test:type_name -> SpaceX.API.Device.WifiRunSelfTestRequest
	130, // 75: SpaceX.API.Device.Request.wifi_calibration_mode:type_name -> SpaceX.API.Device.WifiCalibrationModeRequest
	131, // 76: SpaceX.API.Device.Request.wifi_guest_info:type_name -> SpaceX.API.Device.WifiGuestInfoRequest
	132, // 77: SpaceX.API.Device.Request.wifi_rf_test:type_name -> SpaceX.API.Device.WifiRfTestRequest
	133, // 78: SpaceX.API.Device.Request.wifi_get_firewall:type_name -> SpaceX.API.Device.WifiGetFirewallRequest
	134, // 79: SpaceX.API.Device.Request.wifi_toggle_poe_negotiation:type_name -> SpaceX.API.Device.WifiTogglePoeNegotiationRequest
	135, // 80: SpaceX.API.Device.Request.wifi_factory_test_command:type_name -> SpaceX.API.Device.WifiFactoryTestCommandRequest
	136, // 81: SpaceX.API.Device.Request.wifi_start_local_telem_proxy:type_name -> SpaceX.API.Device.WifiStartLocalTelemProxyRequest
	137, // 82: SpaceX.API.Device.Request.wifi_backhaul_stats:type_name -> SpaceX.API.Device.WifiBackhaulStatsRequest
	138, // 83: SpaceX.API.Device.Request.wifi_toggle_umbilical_mode:type_name -> SpaceX.API.Device.WifiToggleUmbilicalModeRequest
	17,  // 84: SpaceX.API.Device.Request.wifi_client_sandbox:type_name -> SpaceX.API.Device.WifiClientSandboxRequest
	139, // 85: SpaceX.API.Device.Request.transceiver_if_loopback_test:type_name -> SpaceX.API.Device.TransceiverIFLoopbackTestRequest
	140, // 86: SpaceX.API.Device.Request.transceiver_get_status:type_name -> SpaceX.API.Device.TransceiverGetStatusRequest
	141, // 87: SpaceX.API.Device.Request.transceiver_get_telemetry:type_name -> SpaceX.API.Device.TransceiverGetTelemetryRequest
	142, // 88: SpaceX.API.Device.Request.start_unlock:type_name -> SpaceX.API.Device.Services.Unlock.StartUnlockRequest
	143, // 89: SpaceX.API.Device.Request.finish_unlock:type_name -> SpaceX.API.Device.Services.Unlock.FinishUnlockRequest
	81,  // 90: SpaceX.API.Device.Request.get_diagnostics:type_name -> SpaceX.API.Device.GetDiagnosticsRequest
	144, // 91: SpaceX.API.Device.Response.status:type_name -> SpaceX.API.Status.Status
	145, // 92: SpaceX.API.Device.Response.get_next_id:type_name -> SpaceX.API.Device.GetNextIdResponse
	21,  // 93: SpaceX.API.Device.Response.enable_debug_telem:type_name -> SpaceX.API.Device.EnableDebugTelemResponse
	23,  // 94: SpaceX.API.Device.Response.factory_reset:type_name -> SpaceX.API.Device.FactoryResetResponse
	47,  // 95: SpaceX.API.Device.Response.get_device_info:type_name -> SpaceX.API.Device.GetDeviceInfoResponse
	30,  // 96: SpaceX.API.Device.Response.get_log:type_name -> SpaceX.API.Device.GetLogResponse
	57,  // 97: SpaceX.API.Device.Response.get_network_interfaces:type_name -> SpaceX.API.Device.GetNetworkInterfacesResponse
	32,  // 98: SpaceX.API.Device.Response.get_ping:type_name -> SpaceX.API.Device.GetPingResponse
	34,  // 99: SpaceX.API.Device.Response.ping_host:type_name -> SpaceX.API.Device.PingHostResponse
	37,  // 100: SpaceX.API.Device.Response.reboot:type_name -> SpaceX.API.Device.RebootResponse
	41,  // 101: SpaceX.API.Device.Response.speed_test:type_name -> SpaceX.API.Device.SpeedTestResponse
	51,  // 102: SpaceX.API.Device.Response.set_sku:type_name -> SpaceX.API.Device.SetSkuResponse
	49,  // 103: SpaceX.API.Device.Response.set_trusted_keys:type_name -> SpaceX.API.Device.SetTrustedKeysResponse
	53,  // 104: SpaceX.API.Device.Response.update:type_name -> SpaceX.API.Device.UpdateResponse
	63,  // 105: SpaceX.API.Device.Response.get_location:type_name -> SpaceX.API.Device.GetLocationResponse
	61,  // 106: SpaceX.API.Device.Response.get_heap_dump:type_name -> SpaceX.API.Device.GetHeapDumpResponse
	55,  // 107: SpaceX.API.Device.Response.restart_control:type_name -> SpaceX.API.Device.RestartControlResponse
	27,  // 108: SpaceX.API.Device.Response.fuse:type_name -> SpaceX.API.Device.FuseResponse
	45,  // 109: SpaceX.API.Device.Response.get_connections:type_name -> SpaceX.API.Device.GetConnectionsResponse
	72,  // 110: SpaceX.API.Device.Response.start_speedtest:type_name -> SpaceX.API.Device.StartSpeedtestResponse
	75,  // 111: SpaceX.API.Device.Response.get_speedtest_status:type_name -> SpaceX.API.Device.GetSpeedtestStatusResponse
	77,  // 112: SpaceX.API.Device.Response.report_client_speedtest:type_name -> SpaceX.API.Device.ReportClientSpeedtestResponse
	146, // 113: SpaceX.API.Device.Response.initiate_remote_ssh:type_name -> SpaceX.API.Device.InitiateRemoteSshResponse
	147, // 114: SpaceX.API.Device.Response.self_test:type_name -> SpaceX.API.Device.SelfTestResponse
	148, // 115: SpaceX.API.Device.Response.set_test_mode:type_name -> SpaceX.API.Device.SetTestModeResponse
	149, // 116: SpaceX.API.Device.Response.software_update:type_name -> SpaceX.API.Device.SoftwareUpdateResponse
	59,  // 117: SpaceX.API.Device.Response.get_radio_stats:type_name -> SpaceX.API.Device.GetRadioStatsResponse
	25,  // 118: SpaceX.API.Device.Response.time:type_name -> SpaceX.API.Device.GetTimeResponse
	43,  // 119: SpaceX.API.Device.Response.run_iperf_server:type_name -> SpaceX.API.Device.RunIperfServerResponse
	87,  // 120: SpaceX.API.Device.Response.get_goroutine_stack_traces:type_name -> SpaceX.API.Device.GetGoroutineStackTracesResponse
	150, // 121: SpaceX.API.Device.Response.dish_authenticate:type_name -> SpaceX.API.Device.DishAuthenticateResponse
	151, // 122: SpaceX.API.Device.Response.dish_get_context:type_name -> SpaceX.API.Device.DishGetContextResponse
	152, // 123: SpaceX.API.Device.Response.dish_get_history:type_name -> SpaceX.API.Device.DishGetHistoryResponse
	153, // 124: SpaceX.API.Device.Response.dish_get_status:type_name -> SpaceX.API.Device.DishGetStatusResponse
	154, // 125: SpaceX.API.Device.Response.dish_get_obstruction_map:type_name -> SpaceX.API.Device.DishGetObstructionMapResponse
	155, // 126: SpaceX.API.Device.Response.dish_stow:type_name -> SpaceX.API.Device.DishStowResponse
	65,  // 127: SpaceX.API.Device.Response.dish_set_emc:type_name -> SpaceX.API.Device.DishSetEmcResponse
	69,  // 128: SpaceX.API.Device.Response.dish_get_emc:type_name -> SpaceX.API.Device.DishGetEmcResponse
	156, // 129: SpaceX.API.Device.Response.dish_set_config:type_name -> SpaceX.API.Device.DishSetConfigResponse
	157, // 130: SpaceX.API.Device.Response.dish_get_config:type_name -> SpaceX.API.Device.DishGetConfigResponse
	158, // 131: SpaceX.API.Device.Response.dish_inhibit_gps:type_name -> SpaceX.API.Device.DishInhibitGpsResponse
	159, // 132: SpaceX.API.Device.Response.dish_clear_obstruction_map:type_name -> SpaceX.API.Device.DishClearObstructionMapResponse
	67,  // 133: SpaceX.API.Device.Response.dish_set_max_power_test_mode:type_name -> SpaceX.API.Device.DishSetMaxPowerTestModeResponse
	160, // 134: SpaceX.API.Device.Response.dish_activate_rssi_scan:type_name -> SpaceX.API.Device.DishActivateRssiScanResponse
	161, // 135: SpaceX.API.Device.Response.dish_get_rssi_scan_result:type_name -> SpaceX.API.Device.DishGetRssiScanResultResponse
	162, // 136: SpaceX.API.Device.Response.dish_factory_reset:type_name -> SpaceX.API.Device.DishFactoryResetResponse
	163, // 137: SpaceX.API.Device.Response.reset_button:type_name -> SpaceX.API.Device.ResetButtonResponse
	78,  // 138: SpaceX.API.Device.Response.set_per_vehicle_config:type_name -> SpaceX.API.Device.SetPerVehicleConfigResponse
	164, // 139: SpaceX.API.Device.Response.dish_aviation_test:type_name -> SpaceX.API.Device.DishAviationTestResponse
	165, // 140: SpaceX.API.Device.Response.wifi_authenticate:type_name -> SpaceX.API.Device.WifiAuthenticateResponse
	166, // 141: SpaceX.API.Device.Response.wifi_get_clients:type_name -> SpaceX.API.Device.WifiGetClientsResponse
	167, // 142: SpaceX.API.Device.Response.wifi_get_history:type_name -> SpaceX.API.Device.WifiGetHistoryResponse
	168, // 143: SpaceX.API.Device.Response.wifi_get_ping_metrics:type_name -> SpaceX.API.Device.WifiGetPingMetricsResponse
	169, // 144: SpaceX.API.Device.Response.wifi_get_status:type_name -> SpaceX.API.Device.WifiGetStatusResponse
	170, // 145: SpaceX.API.Device.Response.wifi_set_config:type_name -> SpaceX.API.Device.WifiSetConfigResponse
	171, // 146: SpaceX.API.Device.Response.wifi_get_config:type_name -> SpaceX.API.Device.WifiGetConfigResponse
	172, // 147: SpaceX.API.Device.Response.wifi_setup:type_name -> SpaceX.API.Device.WifiSetupResponse
	173, // 148: SpaceX.API.Device.Response.wifi_get_persistent_stats:type_name -> SpaceX.API.Device.WifiGetPersistentStatsResponse
	174, // 149: SpaceX.API.Device.Response.wifi_set_mesh_device_trust:type_name -> SpaceX.API.Device.WifiSetMeshDeviceTrustResponse
	175, // 150: SpaceX.API.Device.Response.wifi_set_mesh_config:type_name -> SpaceX.API.Device.WifiSetMeshConfigResponse
	176, // 151: SpaceX.API.Device.Response.wifi_get_client_history:type_name -> SpaceX.API.Device.WifiGetClientHistoryResponse
	177, // 152: SpaceX.API.Device.Response.wifi_self_test:type_name -> SpaceX.API.Device.WifiSelfTestResponse
	178, // 153: SpaceX.API.Device.Response.wifi_guest_info:type_name -> SpaceX.API.Device.WifiGuestInfoResponse
	179, // 154: SpaceX.API.Device.Response.wifi_rf_test:type_name -> SpaceX.API.Device.WifiRfTestResponse
	180, // 155: SpaceX.API.Device.Response.wifi_get_firewall:type_name -> SpaceX.API.Device.WifiGetFirewallResponse
	181, // 156: SpaceX.API.Device.Response.wifi_factory_test_command:type_name -> SpaceX.API.Device.WifiFactoryTestCommandResponse
	182, // 157: SpaceX.API.Device.Response.wifi_backhaul_stats:type_name -> SpaceX.API.Device.WifiBackhaulStatsResponse
	18,  // 158: SpaceX.API.Device.Response.wifi_client_sandbox:type_name -> SpaceX.API.Device.WifiClientSandboxResponse
	183, // 159: SpaceX.API.Device.Response.wifi_update:type_name -> SpaceX.API.Device.WifiUpdateResponse
	184, // 160: SpaceX.API.Device.Response.transceiver_if_loopback_test:type_name -> SpaceX.API.Device.TransceiverIFLoopbackTestResponse
	185, // 161: SpaceX.API.Device.Response.transceiver_get_status:type_name -> SpaceX.API.Device.TransceiverGetStatusResponse
	186, // 162: SpaceX.API.Device.Response.transceiver_get_telemetry:type_name -> SpaceX.API.Device.TransceiverGetTelemetryResponse
	187, // 163: SpaceX.API.Device.Response.start_unlock:type_name -> SpaceX.API.Device.Services.Unlock.StartUnlockResponse
	188, // 164: SpaceX.API.Device.Response.finish_unlock:type_name -> SpaceX.API.Device.Services.Unlock.FinishUnlockResponse
	82,  // 165: SpaceX.API.Device.Response.wifi_get_diagnostics:type_name -> SpaceX.API.Device.WifiGetDiagnosticsResponse
	83,  // 166: SpaceX.API.Device.Response.dish_get_diagnostics:type_name -> SpaceX.API.Device.DishGetDiagnosticsResponse
	189, // 167: SpaceX.API.Device.Event.wifi_new_client_connected:type_name -> SpaceX.API.Device.WifiNewClientConnectedEvent
	190, // 168: SpaceX.API.Device.Event.wifi_account_bonding:type_name -> SpaceX.API.Device.WifiAccountBondingEvent
	191, // 169: SpaceX.API.Device.Event.wifi_new_peer:type_name -> SpaceX.API.Device.WifiNewPeerEvent
	16,  // 170: SpaceX.API.Device.Event.wifi_cloud_status:type_name -> SpaceX.API.Device.WifiCloudStatusEvent
	17,  // 171: SpaceX.API.Device.Event.wifi_client_sandbox:type_name -> SpaceX.API.Device.WifiClientSandboxRequest
	19,  // 172: SpaceX.API.Device.WifiClientSandboxRequest.client_sandbox_status:type_name -> SpaceX.API.Device.WifiClientSandboxStatus
	0,   // 173: SpaceX.API.Device.WifiClientSandboxRequest.alerts:type_name -> SpaceX.API.Device.WifiClientSandboxAlert
	88,  // 174: SpaceX.API.Device.GetLogResponse.current:type_name -> SpaceX.API.Device.GetLogResponse.Logs
	88,  // 175: SpaceX.API.Device.GetLogResponse.saved:type_name -> SpaceX.API.Device.GetLogResponse.Logs
	89,  // 176: SpaceX.API.Device.GetPingResponse.results:type_name -> SpaceX.API.Device.GetPingResponse.ResultsEntry
	192, // 177: SpaceX.API.Device.PingHostResponse.result:type_name -> SpaceX.API.Device.PingResult
	193, // 178: SpaceX.API.Device.GetStatusRequest.router_role:type_name -> SpaceX.API.Device.RouterRole
	3,   // 179: SpaceX.API.Device.SpeedTestStats.target:type_name -> SpaceX.API.Device.SpeedTestStats.Target
	4,   // 180: SpaceX.API.Device.ClientPlatform.platform:type_name -> SpaceX.API.Device.ClientPlatform.Platform
	38,  // 181: SpaceX.API.Device.SpeedTestRequest.client_speedtest:type_name -> SpaceX.API.Device.SpeedTestStats
	39,  // 182: SpaceX.API.Device.SpeedTestRequest.client_platform:type_name -> SpaceX.API.Device.ClientPlatform
	38,  // 183: SpaceX.API.Device.SpeedTestResponse.router_speedtest:type_name -> SpaceX.API.Device.SpeedTestStats
	90,  // 184: SpaceX.API.Device.GetConnectionsResponse.services:type_name -> SpaceX.API.Device.GetConnectionsResponse.ServicesEntry
	194, // 185: SpaceX.API.Device.GetDeviceInfoResponse.device_info:type_name -> SpaceX.API.Device.DeviceInfo
	195, // 186: SpaceX.API.Device.SetTrustedKeysRequest.keys:type_name -> SpaceX.API.Device.PublicKey
	196, // 187: SpaceX.API.Device.GetNetworkInterfacesResponse.network_interfaces:type_name -> SpaceX.API.Device.NetworkInterface
	197, // 188: SpaceX.API.Device.GetRadioStatsResponse.radio_stats:type_name -> SpaceX.API.Device.RadioStats
	1,   // 189: SpaceX.API.Device.GetLocationRequest.source:type_name -> SpaceX.API.Device.PositionSource
	198, // 190: SpaceX.API.Device.GetLocationResponse.lla:type_name -> SpaceX.API.Device.LLAPosition
	1,   // 191: SpaceX.API.Device.GetLocationResponse.source:type_name -> SpaceX.API.Device.PositionSource
	92,  // 192: SpaceX.API.Device.SpeedtestStatus.up:type_name -> SpaceX.API.Device.SpeedtestStatus.Direction
	92,  // 193: SpaceX.API.Device.SpeedtestStatus.down:type_name -> SpaceX.API.Device.SpeedtestStatus.Direction
	73,  // 194: SpaceX.API.Device.GetSpeedtestStatusResponse.status:type_name -> SpaceX.API.Device.SpeedtestStatus
	38,  // 195: SpaceX.API.Device.ReportClientSpeedtestRequest.client_speedtest:type_name -> SpaceX.API.Device.SpeedTestStats
	38,  // 196: SpaceX.API.Device.ReportClientSpeedtestRequest.wifi_speedtest:type_name -> SpaceX.API.Device.SpeedTestStats
	39,  // 197: SpaceX.API.Device.ReportClientSpeedtestRequest.client_platform:type_name -> SpaceX.API.Device.ClientPlatform
	93,  // 198: SpaceX.API.Device.WifiGetDiagnosticsResponse.networks:type_name -> SpaceX.API.Device.WifiGetDiagnosticsResponse.Network
	5,   // 199: SpaceX.API.Device.DishGetDiagnosticsResponse.hardware_self_test:type_name -> SpaceX.API.Device.DishGetDiagnosticsResponse.TestResult
	6,   // 200: SpaceX.API.Device.DishGetDiagnosticsResponse.hardware_self_test_codes:type_name -> SpaceX.API.Device.DishGetDiagnosticsResponse.TestResultCode
	94,  // 201: SpaceX.API.Device.DishGetDiagnosticsResponse.alerts:type_name -> SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts
	7,   // 202: SpaceX.API.Device.DishGetDiagnosticsResponse.disablement_code:type_name -> SpaceX.API.Device.DishGetDiagnosticsResponse.DisablementCode
	95,  // 203: SpaceX.API.Device.DishGetDiagnosticsResponse.location:type_name -> SpaceX.API.Device.DishGetDiagnosticsResponse.Location
	96,  // 204: SpaceX.API.Device.DishGetDiagnosticsResponse.alignment_stats:type_name -> SpaceX.API.Device.DishGetDiagnosticsResponse.AlignmentStats
	199, // 205: SpaceX.API.Device.DishGetDiagnosticsResponse.dl_bandwidth_restricted_reason:type_name -> SpaceX.API.Telemetron.Public.Integrations.RateLimitReason
	199, // 206: SpaceX.API.Device.DishGetDiagnosticsResponse.ul_bandwidth_restricted_reason:type_name -> SpaceX.API.Telemetron.Public.Integrations.RateLimitReason
	8,   // 207: SpaceX.API.Device.UdpConnectivityTestRequest.probe_data:type_name -> SpaceX.API.Device.UdpConnectivityTestRequest.UDPProbeDataType
	192, // 208: SpaceX.API.Device.GetPingResponse.ResultsEntry.value:type_name -> SpaceX.API.Device.PingResult
	91,  // 209: SpaceX.API.Device.GetConnectionsResponse.ServicesEntry.value:type_name -> SpaceX.API.Device.GetConnectionsResponse.ServiceConnection
	2,   // 210: SpaceX.API.Device.SpeedtestStatus.Direction.err:type_name -> SpaceX.API.Device.SpeedtestError
	9,   // 211: SpaceX.API.Device.Device.Stream:input_type -> SpaceX.API.Device.ToDevice
	13,  // 212: SpaceX.API.Device.Device.Handle:input_type -> SpaceX.API.Device.Request
	10,  // 213: SpaceX.API.Device.Device.Stream:output_type -> SpaceX.API.Device.FromDevice
	14,  // 214: SpaceX.API.Device.Device.Handle:output_type -> SpaceX.API.Device.Response
	213, // [213:215] is the sub-list for method output_type
	211, // [211:213] is the sub-list for method input_type
	211, // [211:211] is the sub-list for extension type_name
	211, // [211:211] is the sub-list for extension extendee
	0,   // [0:211] is the sub-list for field type_name
}

func init() { file_spacex_api_device_device_proto_init() }
func file_spacex_api_device_device_proto_init() {
	if File_spacex_api_device_device_proto != nil {
		return
	}
	file_spacex_api_device_command_proto_init()
	file_spacex_api_device_common_proto_init()
	file_spacex_api_device_dish_proto_init()
	file_spacex_api_device_transceiver_proto_init()
	file_spacex_api_device_wifi_proto_init()
	file_spacex_api_device_device_proto_msgTypes[0].OneofWrappers = []any{
		(*ToDevice_Request)(nil),
		(*ToDevice_HealthCheck)(nil),
	}
	file_spacex_api_device_device_proto_msgTypes[1].OneofWrappers = []any{
		(*FromDevice_Response)(nil),
		(*FromDevice_Event)(nil),
		(*FromDevice_HealthCheck)(nil),
	}
	file_spacex_api_device_device_proto_msgTypes[2].OneofWrappers = []any{
		(*SensitiveCommand_GetLocation)(nil),
	}
	file_spacex_api_device_device_proto_msgTypes[4].OneofWrappers = []any{
		(*Request_SignedRequest)(nil),
		(*Request_GetNextId)(nil),
		(*Request_SensitiveRequest)(nil),
		(*Request_Authenticate)(nil),
		(*Request_EnableDebugTelem)(nil),
		(*Request_FactoryReset)(nil),
		(*Request_GetDeviceInfo)(nil),
		(*Request_GetHistory)(nil),
		(*Request_GetLog)(nil),
		(*Request_GetNetworkInterfaces)(nil),
		(*Request_GetPing)(nil),
		(*Request_PingHost)(nil),
		(*Request_GetStatus)(nil),
		(*Request_Reboot)(nil),
		(*Request_SetSku)(nil),
		(*Request_SetTrustedKeys)(nil),
		(*Request_SpeedTest)(nil),
		(*Request_Update)(nil),
		(*Request_GetLocation)(nil),
		(*Request_GetHeapDump)(nil),
		(*Request_RestartControl)(nil),
		(*Request_Fuse)(nil),
		(*Request_GetPersistentStats)(nil),
		(*Request_GetConnections)(nil),
		(*Request_StartSpeedtest)(nil),
		(*Request_GetSpeedtestStatus)(nil),
		(*Request_ReportClientSpeedtest)(nil),
		(*Request_InitiateRemoteSsh)(nil),
		(*Request_SelfTest)(nil),
		(*Request_SetTestMode)(nil),
		(*Request_SoftwareUpdate)(nil),
		(*Request_IqCapture)(nil),
		(*Request_GetRadioStats)(nil),
		(*Request_Time)(nil),
		(*Request_RunIperfServer)(nil),
		(*Request_TcpConnectivityTest)(nil),
		(*Request_UdpConnectivityTest)(nil),
		(*Request_GetGoroutineStackTraces)(nil),
		(*Request_DishStow)(nil),
		(*Request_DishGetContext)(nil),
		(*Request_DishGetObstructionMap)(nil),
		(*Request_DishSetEmc)(nil),
		(*Request_DishGetEmc)(nil),
		(*Request_DishSetConfig)(nil),
		(*Request_DishGetConfig)(nil),
		(*Request_DishPowerSave)(nil),
		(*Request_DishInhibitGps)(nil),
		(*Request_DishGetData)(nil),
		(*Request_DishClearObstructionMap)(nil),
		(*Request_DishSetMaxPowerTestMode)(nil),
		(*Request_DishActivateRssiScan)(nil),
		(*Request_DishGetRssiScanResult)(nil),
		(*Request_DishFactoryReset)(nil),
		(*Request_ResetButton)(nil),
		(*Request_SetPerVehicleConfig)(nil),
		(*Request_DishAviationTest)(nil),
		(*Request_WifiGetClients)(nil),
		(*Request_WifiGetPingMetrics)(nil),
		(*Request_WifiSetConfig)(nil),
		(*Request_WifiGetConfig)(nil),
		(*Request_WifiSetup)(nil),
		(*Request_WifiSetMeshDeviceTrust)(nil),
		(*Request_WifiSetMeshConfig)(nil),
		(*Request_WifiGetClientHistory)(nil),
		(*Request_WifiSetClientGivenName)(nil),
		(*Request_WifiSetAviationConformed)(nil),
		(*Request_WifiSelfTest)(nil),
		(*Request_WifiRunSelfTest)(nil),
		(*Request_WifiCalibrationMode)(nil),
		(*Request_WifiGuestInfo)(nil),
		(*Request_WifiRfTest)(nil),
		(*Request_WifiGetFirewall)(nil),
		(*Request_WifiTogglePoeNegotiation)(nil),
		(*Request_WifiFactoryTestCommand)(nil),
		(*Request_WifiStartLocalTelemProxy)(nil),
		(*Request_WifiBackhaulStats)(nil),
		(*Request_WifiToggleUmbilicalMode)(nil),
		(*Request_WifiClientSandbox)(nil),
		(*Request_TransceiverIfLoopbackTest)(nil),
		(*Request_TransceiverGetStatus)(nil),
		(*Request_TransceiverGetTelemetry)(nil),
		(*Request_StartUnlock)(nil),
		(*Request_FinishUnlock)(nil),
		(*Request_GetDiagnostics)(nil),
	}
	file_spacex_api_device_device_proto_msgTypes[5].OneofWrappers = []any{
		(*Response_GetNextId)(nil),
		(*Response_EnableDebugTelem)(nil),
		(*Response_FactoryReset)(nil),
		(*Response_GetDeviceInfo)(nil),
		(*Response_GetLog)(nil),
		(*Response_GetNetworkInterfaces)(nil),
		(*Response_GetPing)(nil),
		(*Response_PingHost)(nil),
		(*Response_Reboot)(nil),
		(*Response_SpeedTest)(nil),
		(*Response_SetSku)(nil),
		(*Response_SetTrustedKeys)(nil),
		(*Response_Update)(nil),
		(*Response_GetLocation)(nil),
		(*Response_GetHeapDump)(nil),
		(*Response_RestartControl)(nil),
		(*Response_Fuse)(nil),
		(*Response_GetConnections)(nil),
		(*Response_StartSpeedtest)(nil),
		(*Response_GetSpeedtestStatus)(nil),
		(*Response_ReportClientSpeedtest)(nil),
		(*Response_InitiateRemoteSsh)(nil),
		(*Response_SelfTest)(nil),
		(*Response_SetTestMode)(nil),
		(*Response_SoftwareUpdate)(nil),
		(*Response_GetRadioStats)(nil),
		(*Response_Time)(nil),
		(*Response_RunIperfServer)(nil),
		(*Response_GetGoroutineStackTraces)(nil),
		(*Response_DishAuthenticate)(nil),
		(*Response_DishGetContext)(nil),
		(*Response_DishGetHistory)(nil),
		(*Response_DishGetStatus)(nil),
		(*Response_DishGetObstructionMap)(nil),
		(*Response_DishStow)(nil),
		(*Response_DishSetEmc)(nil),
		(*Response_DishGetEmc)(nil),
		(*Response_DishSetConfig)(nil),
		(*Response_DishGetConfig)(nil),
		(*Response_DishInhibitGps)(nil),
		(*Response_DishClearObstructionMap)(nil),
		(*Response_DishSetMaxPowerTestMode)(nil),
		(*Response_DishActivateRssiScan)(nil),
		(*Response_DishGetRssiScanResult)(nil),
		(*Response_DishFactoryReset)(nil),
		(*Response_ResetButton)(nil),
		(*Response_SetPerVehicleConfig)(nil),
		(*Response_DishAviationTest)(nil),
		(*Response_WifiAuthenticate)(nil),
		(*Response_WifiGetClients)(nil),
		(*Response_WifiGetHistory)(nil),
		(*Response_WifiGetPingMetrics)(nil),
		(*Response_WifiGetStatus)(nil),
		(*Response_WifiSetConfig)(nil),
		(*Response_WifiGetConfig)(nil),
		(*Response_WifiSetup)(nil),
		(*Response_WifiGetPersistentStats)(nil),
		(*Response_WifiSetMeshDeviceTrust)(nil),
		(*Response_WifiSetMeshConfig)(nil),
		(*Response_WifiGetClientHistory)(nil),
		(*Response_WifiSelfTest)(nil),
		(*Response_WifiGuestInfo)(nil),
		(*Response_WifiRfTest)(nil),
		(*Response_WifiGetFirewall)(nil),
		(*Response_WifiFactoryTestCommand)(nil),
		(*Response_WifiBackhaulStats)(nil),
		(*Response_WifiClientSandbox)(nil),
		(*Response_WifiUpdate)(nil),
		(*Response_TransceiverIfLoopbackTest)(nil),
		(*Response_TransceiverGetStatus)(nil),
		(*Response_TransceiverGetTelemetry)(nil),
		(*Response_StartUnlock)(nil),
		(*Response_FinishUnlock)(nil),
		(*Response_WifiGetDiagnostics)(nil),
		(*Response_DishGetDiagnostics)(nil),
	}
	file_spacex_api_device_device_proto_msgTypes[6].OneofWrappers = []any{
		(*Event_WifiNewClientConnected)(nil),
		(*Event_WifiAccountBonding)(nil),
		(*Event_WifiNewPeer)(nil),
		(*Event_WifiCloudStatus)(nil),
		(*Event_WifiClientSandbox)(nil),
	}
	file_spacex_api_device_device_proto_msgTypes[43].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spacex_api_device_device_proto_rawDesc), len(file_spacex_api_device_device_proto_rawDesc)),
			NumEnums:      9,
			NumMessages:   88,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spacex_api_device_device_proto_goTypes,
		DependencyIndexes: file_spacex_api_device_device_proto_depIdxs,
		EnumInfos:         file_spacex_api_device_device_proto_enumTypes,
		MessageInfos:      file_spacex_api_device_device_proto_msgTypes,
	}.Build()
	File_spacex_api_device_device_proto = out.File
	file_spacex_api_device_device_proto_goTypes = nil
	file_spacex_api_device_device_proto_depIdxs = nil
}
